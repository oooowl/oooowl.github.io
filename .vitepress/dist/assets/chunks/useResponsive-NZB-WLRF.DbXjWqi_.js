function C(t,n,e,s={}){if(e<=0)return;t.save();const{color:r="black",lineWidth:d=1,lineCap:u="round",lineJoin:a="round",lineDash:c=null,lineDashoffset:i=0,shadowColor:l=null,shadowBlur:h=0,shadowOffsetX:y=0,shadowOffsetY:w=0,fillStyle:g="#FFFFFF"}=s;t.beginPath(),t.arc(n.x,n.y,e,0,2*Math.PI),t.strokeStyle=r,t.lineWidth=d,t.lineCap=u,t.lineJoin=a,c&&(t.setLineDash(c),t.lineDashoffset=i),l&&(t.shadowColor=l,t.shadowOffsetX=y,t.shadowOffsetY=w),h&&(t.shadowBlur=h),g&&(t.fillStyle=g),t.fillStyle&&t.fill(),t.stroke(),t.restore()}function b(t,n,e={}){if(!n.length)return;t.save();const{color:s="black",lineWidth:r=1,lineCap:d="round",lineJoin:u="round",lineDash:a=null,lineDashoffset:c=0,shadowColor:i=null,shadowBlur:l=0,shadowOffsetX:h=0,shadowOffsetY:y=0}=e;t.beginPath(),t.moveTo(n[0].x,n[0].y);for(let w=1;w<n.length;w+=1)t.lineTo(n[w].x,n[w].y);t.strokeStyle=s,t.lineWidth=r,t.lineCap=d,t.lineJoin=u,a&&(t.setLineDash(a),t.lineDashoffset=c),i&&(t.shadowColor=i,t.shadowOffsetX=h,t.shadowOffsetY=y),l&&(t.shadowBlur=l),t.stroke(),t.restore()}function m(t,n,e={}){if(!n.length)return;t.save();const{strokeColor:s="black",lineWidth:r=1,lineCap:d="round",lineJoin:u="round",lineDash:a=null,lineDashoffset:c=0,fillColor:i=null,gradient:l=null,shadowColor:h=null,shadowBlur:y=0,shadowOffsetX:w=0,shadowOffsetY:g=0}=e;t.beginPath(),t.moveTo(n[0].x,n[0].y);for(let o=1;o<n.length;o+=1)t.lineTo(n[o].x,n[o].y);if(t.closePath(),t.strokeStyle=s,t.lineWidth=r,t.lineCap=d,t.lineJoin=u,a&&(t.setLineDash(a),t.lineDashoffset=c),h&&(t.shadowColor=h,t.shadowBlur=y,t.shadowOffsetX=w,t.shadowOffsetY=g),l){let o;l.type==="linear"?o=t.createLinearGradient(f(l.start.x,Number.MIN_VALUE),f(l.start.y,Number.MIN_VALUE),f(l.end.x,Number.MIN_VALUE*2),f(l.end.y,Number.MIN_VALUE*2)):l.type==="radial"&&(o=t.createRadialGradient(f(l.start.x,Number.MIN_VALUE),f(l.start.y,Number.MIN_VALUE),l.start.r||0,f(l.end.x,Number.MIN_VALUE*2),f(l.end.y,Number.MIN_VALUE*2),l.end.r||0)),o&&l.stops&&(l.stops.forEach(N=>{o.addColorStop(N.offset,N.color)}),t.fillStyle=o)}else i&&(t.fillStyle=i);t.fillStyle&&t.fill(),s&&t.stroke(),t.restore()}function p(t,n,e={}){if(!n.length)return;t.save();const{strokeColor:s="black",lineWidth:r=1,lineCap:d="round",lineJoin:u="round",lineDash:a=null,lineDashoffset:c=0,fillColor:i=null,gradient:l=null,shadowColor:h=null,shadowBlur:y=0,shadowOffsetX:w=0,shadowOffsetY:g=0}=e;t.beginPath(),t.moveTo(n[0].x,n[0].y);for(let o=1;o<n.length;o+=1)t.lineTo(n[o].x,n[o].y);if(t.closePath(),t.strokeStyle=s,t.lineWidth=r,t.lineCap=d,t.lineJoin=u,a&&(t.setLineDash(a),t.lineDashoffset=c),h&&(t.shadowColor=h,t.shadowBlur=y,t.shadowOffsetX=w,t.shadowOffsetY=g),l){let o;l.type==="linear"?o=t.createLinearGradient(f(l.start.x,Number.MIN_VALUE),f(l.start.y,Number.MIN_VALUE),f(l.end.x,Number.MIN_VALUE*2),f(l.end.y,Number.MIN_VALUE*2)):l.type==="radial"&&(o=t.createRadialGradient(f(l.start.x,Number.MIN_VALUE),f(l.start.y,Number.MIN_VALUE),l.start.r||0,f(l.end.x,Number.MIN_VALUE*2),f(l.end.y,Number.MIN_VALUE*2),l.end.r||0)),o&&l.stops&&(l.stops.forEach(N=>{o.addColorStop(N.offset,N.color)}),t.fillStyle=o)}else i&&(t.fillStyle=i);t.fillStyle&&t.fill(),s&&t.stroke(),t.restore()}function x(t,n,e,s,r={}){t.save();const{font:d="16px sans-serif",color:u="black",align:a="start",baseline:c="alphabetic",maxWidth:i=void 0,rotation:l=0,shadowColor:h=null,shadowBlur:y=0,shadowOffsetX:w=0,shadowOffsetY:g=0,strokeColor:o=null,lineWidth:N=1}=r;t.font=d,t.fillStyle=u,t.textAlign=a,t.textBaseline=c,h&&(t.shadowColor=h,t.shadowBlur=y,t.shadowOffsetX=w,t.shadowOffsetY=g),o&&(t.strokeStyle=o,t.lineWidth=N),l!==0&&(t.translate(e,s),t.rotate(Math.PI/180*l),t.translate(-e,-s)),t.fillText(n,e,s,i),o&&t.strokeText(n,e,s,i),t.restore()}function L(t,n=20){let e;return function(...s){const r=this;e||(t.apply(r,s),e=!0,setTimeout(()=>e=!1,n))}}function O(t,n,e=!1){let s;return function(...r){const d=this,u=function(){s=null,e||t.apply(d,r)},a=e&&!s;clearTimeout(s),s=setTimeout(u,n),a&&t.apply(d,r)}}function E(t){const n=document.createElement("canvas");return n.width=t.width||1,n.height=t.height||1,t.width||(t.width=1),t.height||(t.height=1),n.getContext("2d").drawImage(t,0,0),n}function f(t,n){return[null,void 0,NaN,1/0,-1/0].includes(t)?n:t}function I({chart:t,title:n=null,slicer:e=null,legend:s=null}){let r=0,d=0;if(t){const u=t.parentNode,{height:a,width:c}=u.getBoundingClientRect();let i=0,l=0,h=0;n&&(i=n.getBoundingClientRect().height),e&&(l=e.getBoundingClientRect().height),s&&(h=s.getBoundingClientRect().height),r=a-i-l-h,d=c}return{width:d,height:r}}export{b as C,O as E,x as I,p as L,I as M,L as O,C as b,E as k,m};
