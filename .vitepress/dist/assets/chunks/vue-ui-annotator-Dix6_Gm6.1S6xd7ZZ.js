import $ from"./html2canvas.esm-d2sM-0Wm.tnAx6l3B.js";import{H as f}from"./jspdf.es.min-C660YX78.C_kotyfX.js";import{d as v,o as A,f as w,h as O}from"../chart.md.hi_nZSnT.js";import{o as a,c as d,j as r,N as h,t as p,n as y,e as c,ao as N,ap as g,aq as C,r as M,F as L,C as _,a2 as F,am as G,an as m}from"./framework.BaNfDZ-f.js";import{s as T}from"./vue-data-ui-Cp7bO_tj.DKBrIOIj.js";const R={props:{config:{type:Object,default(){return{}}},dataset:{type:Object,default(){return{shapes:[],lastSelectedShape:void 0}}}},data(){return{activeShape:void 0,strokeSize:1,currentPointer:{start:{x:0,y:0},end:{x:0,end:0}},currentTarget:void 0,hoveredShapeId:void 0,isBold:!1,isBulletTextMode:!1,isDash:!1,isDeleteMode:!1,isDrawing:!1,isDrawingNewShape:!0,isDrawMode:!1,isItalic:!1,isMouseDown:!1,isMoveMode:!1,isPrinting:!1,isResizeMode:!1,isSelectMode:!1,isSummaryOpen:!1,isTextMode:!1,isUnderline:!1,isWriting:!1,lastSelectedShape:this.dataset.lastSelectedShape,pointerDownId:-1,pointerPosition:{x:0,y:0},preventEdit:!0,selectedGroup:[],shapes:this.dataset.shapes?this.dataset.shapes:[],shapesOrder:[],step:Math.round(Math.random())*1e5,svgHeight:1e3,svgWidth:1e3,options:{arrow:{color:"grey",filled:!0},circle:{color:"grey",filled:!1,radius:3,strokeWidth:2},rect:{color:"grey",filled:!1,strokeWidth:2,height:12,width:12}},selectedColor:"#000000",showCaret:!1,sizeRatio:1,slottedSvg:void 0,sourceWidth:1,sourceHeight:1,textAlign:"start",textFont:20,transparency:100,transparencyCodes:v}},watch:{shapes:{handler(t){t.length===0&&(this.lastSelectedShape=void 0)}}},computed:{FINAL_CONFIG(){const t=A().vue_ui_annotator;if(!Object.keys(this.config||{}).length)return t;const s=this.treeShake({defaultConfig:t,userConfig:this.config});return this.convertConfigColors(s)},canSelect(){return this.shapes.filter(t=>!["line","group"].includes(t.type)).length>1},colorTransparency(){return this.transparencyCodes[this.transparency>98?98:this.transparency]},cursorClass(){switch(!0){case this.isDeleteMode:return"default";case this.isMoveMode:return"move";case this.isTextMode:return"text";case this.isResizeMode:return"se-resize";default:return""}},records(){return this.shapes},userShapes(){return this.records.map(t=>{switch(!0){case(t&&t.type==="arrow"):const s=t.strokeWidth>3?5:10,i=t.strokeWidth>3?2.5:5;return`
                        <defs>
                        <marker 
                            id="${t.id}" 
                            markerWidth="${s}" 
                            markerHeight="${s}" 
                            refX="0" 
                            refY="${i}" 
                            orient="auto"
                        >
                            <polygon 
                            points="0 0,${s} ${i}, 0 ${s}" 
                            fill="${t.color}"
                            />
                        </marker>
                        </defs>
                        ${this.includeSelectionIndicator(t)}
                        <g id="${t.id}">
                            <path 
                            style="stroke-linecap: round !important; ${t.isDash?`stroke-dasharray: ${t.strokeWidth*3}`:""}" 
                            stroke="${t.color}" 
                            id="${t.id}" 
                            d="M${t.x},${t.y} ${t.endX},${t.endY}" 
                            stroke-width="${t.strokeWidth}" 
                            marker-end="url(#${t.id})"
                            />
                        </g>
                        <g id="${t.id}">
                        <rect 
                            id="${t.id}"
                            x="${t.x-10}"
                            y="${t.y-10}"
                            height="20"
                            width="20"
                            fill="rgba(0,0,0,0.3)"
                            style="display:${this.isResizeMode||this.isMoveMode?"initial":"none"}; rx:1 !important; ry:1 !important;"
                        />
                        </g>
                        ${this.includeDeleteButton(t)}
                        </g>
                        `;case(t&&t.type==="circle"):return`
                            <g id="${t.id}">
                                ${this.includeSelectionIndicator(t)}
                                <circle 
                                id="${t.id}" 
                                cx="${t.x}" 
                                cy="${t.y}" 
                                r="${t.circleRadius?t.circleRadius:Number.MIN_VALUE}"
                                fill="${t.isFilled?t.color+t.alpha:"rgba(255,255,255,0.001)"}" 
                                stroke="${t.color+t.alpha}" 
                                stroke-width="${t.strokeWidth}"
                                style="${t.isDash?`stroke-dasharray: ${t.strokeWidth*3}`:""}"
                                >
                                </circle>
                            </g>
                            
                            ${this.includeDeleteButton(t)}`;case(t&&t.type==="group"):return`<g id="${t.id}">
                            <rect
                                id="${this.isResizeMode?"":t.id}"
                                x="${t.x}"
                                y="${t.y}"
                                fill="transparent"
                                height="${t.rectHeight}"
                                width="${t.rectWidth}"
                                stroke="grey"
                                stroke-width="1"
                                style="rx:1 !important; ry:1 !important; ${t.isDash?`stroke-dasharray: ${t.strokeWidth*3}`:""}; display:${this.isSelectMode||this.isDeleteMode||this.hoveredShapeId&&this.hoveredShapeId===t.id?"initial":"none"};"
                            />
                <g id="${t.id}">
                ${t.content?t.content:""}
                </g>
                            ${this.includeDeleteButton(t)}
                            </g> `;case(t&&t.type==="rect"):return`<g id="${t.id}">
                            ${this.includeSelectionIndicator(t)}
                            <rect
                                id="${this.isResizeMode?"":t.id}"
                                x="${t.x}"
                                y="${t.y}"
                                fill="${t.isFilled?t.color+t.alpha:"rgba(255,255,255,0.001)"}"
                                height="${t.rectHeight}"
                                width="${t.rectWidth}"
                                stroke="${t.color+t.alpha}"
                                stroke-width="${t.strokeWidth}"
                                style="rx:1 !important; ry:1 !important; ${t.isDash?`stroke-dasharray: ${t.strokeWidth*3}`:""}"
                            />
                            <rect id="${t.id}"
                                x="${t.x+t.rectWidth}"
                                y="${t.y+t.rectHeight}"
                                height="20"
                                width="20"
                                fill="rgba(0,0,0,0.3)"
                                style="display:${this.isResizeMode?"initial":"none"}; rx:1 !important; ry:1 !important;"
                            />
                            ${this.includeDeleteButton(t)}
                            </g> `;case(t&&t.type==="line"):return`
                    <g id="${t.id}">
                        <path 
                        id="${t.id}" 
                        d="M${t.path?t.path:""}" 
                        style="stroke:${t.color+t.alpha} !important; fill:none; stroke-width:${t.strokeWidth} !important; stroke-linecap: round !important; stroke-linejoin: round !important;"        
                        />
                ${this.includeDeleteButton(t)}
                    </g>
                    `;case(t&&t.type==="text"):const n=t.textContent.split("‎"),o=[];for(let e=0;e<n.length;e+=1)o.push(`
            ${t.isBulletTextMode?`<tspan x="${t.x-t.fontSize}" y="${t.y+t.fontSize*e}" id="${t.id}" font-size="${t.fontSize/2}">⬤</tspan>`:""}
                    <tspan id="${t.id}" x="${t.x}" y="${t.y+t.fontSize*e}">
                        ${n[e]}
                    </tspan>`);return`
                            ${this.includeSelectionIndicator(t)}
                            ${this.computeTextElement(t,o,t.isBulletTextMode)}
                            `}})}},mounted(){const t=this.$refs.drawSvgContainer;let s=!1;this.walkTheDOM(t,n=>{if(!s&&["DIV","svg","section","canvas"].includes(n.tagName)){this.slottedSvg=n,s=!0;return}});const i=this.slottedSvg.getBoundingClientRect();this.sizeRatio=i.height/i.width,this.svgWidth=1e3,this.svgHeight=this.sizeRatio*1e3,this.sourceWidth=i.width,this.sourceHeight=i.height,new ResizeObserver(n=>{n.forEach(o=>{this.sourceWidth=o.contentRect.width,this.sourceHeight=o.contentRect.height,this.sizeRatio=o.contentRect.height/o.contentRect.width,this.svgHeight=this.sizeRatio*1e3})}).observe(this.slottedSvg),window.addEventListener("keydown",n=>{this.write(n)})},destroyed(){window.removeEventListener("keydown",t=>{this.write(t)})},methods:{treeShake:w,convertConfigColors:O,bringShapeTo(t){const s=this.shapes.find(i=>i.id===this.lastSelectedShape.id);switch(!0){case t==="front":this.shapes=this.shapes.filter(i=>i.id!==s.id),this.shapes.push(s);break;case t==="back":this.shapes=this.shapes.filter(i=>i.id!==s.id),this.shapes=[s,...this.shapes];break;default:return}},clickSvg(t){if(this.isDeleteMode)return;this.deleteEmptyTextElement(),this.isTextMode?(this.isWriting=!0,this.showCaret=!0):(this.isWriting=!1,this.showCaret=!1,this.isTextMode=!1);let s=`text_${Math.random()*1e4}_${Math.random()*99999}`;if(this.isWriting){this.shapes.push({id:s,type:"text",lines:0,x:this.pointerPosition.x,y:this.pointerPosition.y,textContent:"",fontSize:this.copy(this.textFont),textAlign:this.copy(this.textAlign),isBold:this.copy(this.isBold),isItalic:this.copy(this.isItalic),isUnderline:this.copy(this.isUnderline),color:this.copy(this.selectedColor),isBulletTextMode:this.copy(this.isBulletTextMode)}),this.currentTarget=this.shapes.at(-1),this.lastSelectedShape=this.shapes.at(-1);return}const i=()=>{this.isDash=this.shapes.find(o=>o.id===t.target.id).isDash},n=()=>{this.strokeSize=this.shapes.find(o=>o.id===t.target.id).strokeWidth};if(this.isSelectMode=!1,t.target.id.includes("arrow")){this.activeShape="arrow",i(),n();return}if(t.target.id.includes("circle")){this.activeShape="circle",this.options.circle.filled=this.shapes.find(o=>o.id===t.target.id).isFilled,i(),n();return}if(t.target.id.includes("rect")){this.activeShape="rect",this.options.rect.filled=this.shapes.find(o=>o.id===t.target.id).isFilled,i(),n();return}if(t.target.id.includes("line")){this.activeShape="line",n();return}if(t.target.id.includes("text")){this.isTextMode=!0,this.isWriting=!0,this.showCaret=!0;const o=this.shapes.find(e=>e.id===t.target.id);o&&o.textAlign&&(this.textAlign=this.shapes.find(e=>e.id===t.target.id).textAlign),o&&(this.isBulletTextMode=this.shapes.find(e=>e.id===t.target.id).isBulletTextMode);return}},copyPaste(){const t={...this.lastSelectedShape,id:`${this.lastSelectedShape.id}_copy`,x:this.lastSelectedShape.x-100<0?1:this.lastSelectedShape.x-100,y:this.lastSelectedShape.y-100<0?1:this.lastSelectedShape.y-100};this.shapes.push(t)},includeDeleteButton(t,s=!1){switch(!0){case t.type==="circle":return`
                    <g id="${t.id}" style="display:${this.isDeleteMode?"initial":"none"};">
                        <circle id="${t.id}" cx="${t.x}" cy="${t.y}" r="12" fill="red"/>
                        <line stroke="white" stroke-width="2" id="${t.id}" x1="${t.x-4}" y1="${t.y-4}" x2="${t.x+4}" y2="${t.y+4}"/>
                        <line stroke="white" stroke-width="2" id="${t.id}" x1="${t.x+4}" y1="${t.y-4}" x2="${t.x-4}" y2="${t.y+4}"/>
                    </g>
                `;case t.type==="text":let i,n=[-8,-12,-4,-12,-4];switch(!0){case t.textAlign==="start":s?i=[-20,-24,-16,-16,-24]:i=[-16,-20,-12,-12,-20];break;case t.textAlign==="middle":i=[0,-4,4,4,-4],n=[-32,-36,-28,-36,-28];break;case t.textAlign==="end":i=[16,20,12,12,20];break;default:i=[0,0,0];break}return`
                    <g id="${t.id}" style="display:${this.isDeleteMode?"initial":"none"};">
                        <circle id="${t.id}" cx="${t.x+i[0]}" cy="${t.y+n[0]}" r="12" fill="red"/>
                        <line stroke="white" stroke-width="2" id="${t.id}" x1="${t.x+i[1]}" y1="${t.y+n[1]}" x2="${t.x+i[2]}" y2="${t.y+n[2]}"/>
                        <line stroke="white" stroke-width="2" id="${t.id}" x1="${t.x+i[3]}" y1="${t.y+n[3]}" x2="${t.x+i[4]}" y2="${t.y+n[4]}"/>
                    </g>
                `;default:return`
                    <g id="${t.id}" style="display:${this.isDeleteMode?"initial":"none"};">
                        <circle id="${t.id}" cx="${t.x-4}" cy="${t.y-4}" r="12" fill="red"/>
                        <line stroke="white" stroke-width="2" id="${t.id}" x1="${t.x-8}" y1="${t.y-8}" x2="${t.x}" y2="${t.y}"/>
                        <line stroke="white" stroke-width="2" id="${t.id}" x1="${t.x}" y1="${t.y-8}" x2="${t.x-8}" y2="${t.y}"/>
                    </g>
                `}},includeSelectionIndicator(t){if(t)switch(!0){case t.type==="rect":return`
                    <rect
                    id="${t.id}" 
                    style="stroke-dasharray: 10; display:${this.hoveredShapeId&&this.hoveredShapeId===t.id?"initial":"none"}"
                    x="${t.x-20}"
                    y="${t.y-20}"
                    height="${t.rectHeight+40}"
                    width="${t.rectWidth+40}"
                    fill="transparent"
                    stroke="grey"
                    />
                `;case t.type==="circle":return`
                    <rect
                    id="${t.id}" 
                    style="stroke-dasharray: 10; display:${this.hoveredShapeId&&this.hoveredShapeId===t.id?"initial":"none"}"
                    x="${t.x-t.circleRadius-20}"
                    y="${t.y-t.circleRadius-20}"
                    height="${t.circleRadius*2+40}"
                    width="${t.circleRadius*2+40}"
                    fill="transparent"
                    stroke="grey"
                    />
                `;case t.type==="arrow":const s=t.endX-t.x>0,i=t.endY-t.y>0;return`
                    <rect
                    id="${t.id}" 
                    style="stroke-dasharray: 10; display:${this.hoveredShapeId&&this.hoveredShapeId===t.id?"initial":"none"}"
                    x="${s?t.x-20:t.endX-20}"
                    y="${i?t.y-20:t.endY-20}"
                    height="${i?t.endY-t.y+40:t.y-t.endY+40}"
                    width="${s?t.endX-t.x+40:t.x-t.endX+40}"
                    fill="transparent"
                    stroke="grey"
                    />
                `;case t.type==="text":const n=Array.from(document.getElementsByTagName("text")).find(b=>b.id===t.id);if(!n)return;const{x:o,y:e,width:l,height:u}=n.getBBox();return`
                    <rect
                    id="${t.id}" 
                    style="stroke-dasharray: 10; display:${this.hoveredShapeId&&this.hoveredShapeId===t.id?"initial":"none"}"
                    x="${o-20}"
                    y="${e-20}"
                    height="${u+40}"
                    width="${l+40}"
                    fill="transparent"
                    stroke="grey"
                    />
                `;default:return""}},allowEditAndHoverShapes(t){t.preventDefault(),this.preventEdit=!1,t.target&&t.target.id&&(this.hoveredShapeId=t.target.id)},setSelectedTextAlignTo(t){!this.lastSelectedShape||this.lastSelectedShape.type!=="text"||(this.lastSelectedShape.textAlign=t)},undoLastShape(){this.lastSelectedShape=void 0,this.shapes=this.shapes.slice(0,-1)},write(t){if(this.preventEdit)return;t.preventDefault();const s=t.keyCode;if(!this.isWriting)return;this.showCaret=!0;let i;if(this.lastSelectedShape.type==="text"?i=this.shapes.find(o=>o.id===this.lastSelectedShape.id):i=this.shapes.at(-1),this.currentTarget=i,i.type!=="text")return;this.currentTarget.isBold=this.copy(this.isBold),this.currentTarget.isItalic=this.copy(this.isItalic),this.currentTarget.isUnderline=this.copy(this.isUnderline);const n=[16,17,18,20,27,33,34,35,36,37,38,39,40,45,91,112,113,114,115,116,117,118,119,120,121,122,123,221,255,"Unidentified"];switch(!0){case s===8:i.textContent=i.textContent.slice(0,-1);break;case s===9:i.textContent+="&nbsp; &nbsp; &nbsp; &nbsp;";break;case s===13:i.lines+=1,i.textContent+="‎";return;case n.includes(s):return;default:i.textContent+=t.key}},groupShapes(){if(this.selectedGroup=[],this.activeShape!=="group"){this.isSelectMode=!1,this.shapes=this.shapes.filter(s=>s.type!=="group");return}const t=this.shapes.at(-1);if(this.shapes.forEach(s=>{if(s.type!=="group")switch(!0){case s.type==="arrow":const i=s.x<=s.endX&&s.y<=s.endY&&t.x<=s.x&&t.y<=s.y&&t.x+t.rectWidth>=s.endX&&t.y+t.rectHeight>=s.endY,n=s.endY<s.y&&s.x<s.endX&&t.x<=s.x&&t.y<=s.y&&t.x+t.rectWidth>=s.endX&&t.y+t.rectHeight>=s.y,o=s.x>s.endX&&s.y<s.endY&&t.x<=s.endX&&t.y<=s.endY&&t.x+t.rectWidth>=s.x&&t.y+t.rectHeight>=s.endY,e=s.x>s.endX&&s.y>s.endY&&t.x<=s.endX&&t.y<=s.endY&&t.x+t.rectWidth>=s.x&&t.y+t.rectHeight>=s.y;(i||n||o||e)&&this.selectedGroup.push(s);break;case s.type==="circle":t.x<=s.x+s.circleRadius&&t.y<=s.y+s.circleRadius&&s.x+s.circleRadius<=t.x+t.rectWidth&&s.y+s.circleRadius<=t.y+t.rectHeight&&this.selectedGroup.push(s);break;case s.type==="rect":t.x<=s.x&&t.y<=s.y&&s.x<=t.x+t.rectWidth&&s.y<=t.y+t.rectHeight&&s.x+s.rectWidth<=t.x+t.rectWidth&&s.y+s.rectHeight<=t.y+t.rectHeight&&s.rectWidth<=t.rectWidth&&s.rectHeight<=t.rectHeight&&this.selectedGroup.push(s);break;case s.type==="text":t.x<=s.x&&t.y<=s.y&&this.selectedGroup.push(s);break}}),this.selectedGroup=this.selectedGroup.map(s=>({...s,id:t.id,oldId:s.id,diffX:s.x-t.x,diffY:s.y-t.y,diffEndX:s.endX?s.endX-t.x:0,diffEndY:s.endY?s.endY-t.y:0})),t.source=this.selectedGroup,this.selectedGroup.length>1){const s=this.copy(this.selectedGroup).map(i=>i.oldId);this.shapes=this.shapes.filter(i=>!s.includes(i.id)),this.selectedGroup.forEach(i=>{switch(!0){case i.type==="circle":t.content+=`
                <circle
                id="${i.id}"
                cx="${i.x}"
                cy="${i.y}"
                r="${i.circleRadius?i.circleRadius:Number.MIN_VALUE}"
                fill="${i.isFilled?i.color+i.alpha:"rgba(255,255,255,0.001)"}"
                stroke="${i.color+i.alpha}" 
                                stroke-width="${i.strokeWidth}"
                                style="${i.isDash?`stroke-dasharray: ${i.strokeWidth*3}`:""}"
                                />
            `;break;case i.type==="rect":t.content+=`
                <rect
                id="${this.isResizeMode?"":i.id}"
                x="${i.x}"
                y="${i.y}"
                fill="${i.isFilled?i.color+i.alpha:"rgba(255,255,255,0.001)"}"
                height="${i.rectHeight}"
                width="${i.rectWidth}"
                stroke="${i.color+i.alpha}"
                stroke-width="${i.strokeWidth}"
                style="rx:1 !important; ry:1 !important; ${i.isDash?`stroke-dasharray: ${i.strokeWidth*3}`:""}"
                            />
            `;break;case i.type==="arrow":const n=i.strokeWidth>3?5:10,o=i.strokeWidth>3?2.5:5,e=Date.now();t.content+=`
                <g id="${i.id}">
                <defs>
                    <marker 
                    id="${e}" 
                    markerWidth="${n}" 
                    markerHeight="${n}" 
                    refX="0" 
                    refY="${o}" 
                    orient="auto"
                    >
                    <polygon 
                    points="0 0,${n} ${o}, 0 ${n}" 
                    fill="${i.color}"
                    />
                    </marker>
                </defs>

                <path 
                    style="stroke-linecap: round !important; ${i.isDash?`stroke-dasharray: ${i.strokeWidth*3}`:""}" 
                    stroke="${i.color}" 
                    id="${i.id}" 
                    d="M${i.x},${i.y} ${i.endX},${i.endY}" 
                    stroke-width="${i.strokeWidth}" 
                    marker-end="url(#${e})"
                />
                </g>
            `;break;case i.type==="text":const l=i.textContent.split("‎"),u=[];for(let b=0;b<l.length;b+=1)u.push(`
                ${i.isBulletTextMode?`<tspan x="${i.x-i.fontSize}" y="${i.y+i.fontSize*b}" id="${i.id}" font-size="${i.fontSize/2}">⬤</tspan>`:""}
                <tspan id="${i.id}" x="${i.x}" y="${i.y+i.fontSize*b}">
                    ${l[b]}
                </tspan>`);t.content+=`
                ${this.computeTextElement(i,u,i.isBulletTextMode)}
                `;break}})}else this.shapes=this.shapes.filter(s=>s.id!==t.id)},moveGroup(t){t.content="",t.x=this.copy(this.pointerPosition.x)-t.rectWidth/2,t.y=this.copy(this.pointerPosition.y)-t.rectHeight/2,t.source.forEach(s=>{switch(!0){case s.type==="circle":t.content+=`
                <circle
                id="${s.id}"
                cx="${this.copy(this.pointerPosition.x)+s.diffX-t.rectWidth/2}"
                cy="${this.copy(this.pointerPosition.y)+s.diffY-t.rectHeight/2}"
                r="${s.circleRadius?s.circleRadius:Number.MIN_VALUE}"
                fill="${s.isFilled?s.color+s.alpha:"rgba(255,255,255,0.001)"}"
                stroke="${s.color+s.alpha}" 
                                stroke-width="${s.strokeWidth}"
                                style="${s.isDash?`stroke-dasharray: ${s.strokeWidth*3}`:""}"
                                />
            `;break;case s.type==="rect":t.content+=`
                <rect
                id="${this.isResizeMode?"":s.id}"
                x="${this.copy(this.pointerPosition.x)+s.diffX-t.rectWidth/2}"
                y="${this.copy(this.pointerPosition.y)+s.diffY-t.rectHeight/2}"
                fill="${s.isFilled?s.color+s.alpha:"rgba(255,255,255,0.001)"}"
                height="${s.rectHeight}"
                width="${s.rectWidth}"
                stroke="${s.color+s.alpha}"
                stroke-width="${s.strokeWidth}"
                style="rx:1 !important; ry:1 !important; ${s.isDash?`stroke-dasharray: ${s.strokeWidth*3}`:""}"
                            />
            `;break;case s.type==="arrow":const i=s.strokeWidth>3?5:10,n=s.strokeWidth>3?2.5:5,o=Date.now();t.content+=`
                <g id="${s.id}">
                <defs>
                    <marker 
                    id="${o}" 
                    markerWidth="${i}" 
                    markerHeight="${i}" 
                    refX="0" 
                    refY="${n}" 
                    orient="auto"
                    >
                    <polygon 
                    points="0 0,${i} ${n}, 0 ${i}" 
                    fill="${s.color}"
                    />
                    </marker>
                </defs>

                <path 
                    style="stroke-linecap: round !important; ${s.isDash?`stroke-dasharray: ${s.strokeWidth*3}`:""}" 
                    stroke="${s.color}" 
                    id="${s.id}" 
                    d="M${this.copy(this.pointerPosition.x)+s.diffX-t.rectWidth/2},${this.copy(this.pointerPosition.y)+s.diffY-t.rectHeight/2} ${this.copy(this.pointerPosition.x)+s.diffEndX-t.rectWidth/2},${this.copy(this.pointerPosition.y)+s.diffEndY-t.rectHeight/2}" 
                    stroke-width="${s.strokeWidth}" 
                    marker-end="url(#${o})"
                />
                </g>
            `;break;case s.type==="text":const e=s.textContent.split("‎"),l=[];for(let u=0;u<e.length;u+=1)l.push(`
                ${s.isBulletTextMode?`<tspan x="${this.copy(this.pointerPosition.x)+s.diffX-s.fontSize-t.rectWidth/2}" y="${this.copy(this.pointerPosition.y)+s.diffY+s.fontSize*u-t.rectHeight/2}" id="${s.id}" font-size="${s.fontSize/2}">⬤</tspan>`:""}
                <tspan id="${s.id}" x="${this.copy(this.pointerPosition.x)+s.diffX-t.rectWidth/2}" y="${this.copy(this.pointerPosition.y)+s.diffY+s.fontSize*u-t.rectHeight/2}">
                    ${e[u]}
                </tspan>`);t.content+=`
                ${this.computeTextElement(s,l,s.isBulletTextMode)}
                `;break}})},chooseAction(t){switch(t.preventDefault(),this.isMouseDown=!0,!0){case this.isDrawMode:this.drawDown();break}},chooseMove(t){switch(t.preventDefault(),t.target.localName!=="svg"&&(this.currentTarget=t.target),!0){case(this.isMoveMode&&this.isMouseDown):this.moveDown();break;case(this.isResizeMode&&this.isMouseDown):this.resize();break}},computeCaretPosition(t){switch(!0){case t.textAlign==="middle":return`<path stroke="black" stroke-width="2" d="M${t.x},${t.y-t.fontSize} ${t.x},${t.y-t.fontSize-15}" /> <path stroke="black" stroke-width="2" d="M${t.x-3},${t.y-t.fontSize-5} ${t.x},${t.y-t.fontSize} ${t.x+3},${t.y-t.fontSize-5}"/>`;case t.textAlign==="start":const s=t.isBulletTextMode?t.fontSize:0;return`<path d="M${t.x-20-s},${t.y-t.fontSize/6} ${t.x-5-s},${t.y-t.fontSize/6}" stroke="black" stroke-width="2" />
                        <path  d="M${t.x-10-s},${t.y-t.fontSize/3} ${t.x-5-s},${t.y-t.fontSize/6} ${t.x-10-s},${t.y}" stroke="black" stroke-width="2">`;case t.textAlign==="end":return`<path d="M${t.x+20},${t.y-t.fontSize/6} ${t.x+5},${t.y-t.fontSize/6}" stroke="black" stroke-width="2" />
                        <path d="M${t.x+10},${t.y-t.fontSize/3} ${t.x+5},${t.y-t.fontSize/6} ${t.x+10},${t.y}" stroke="black" stroke-width="2">`;default:return""}},computeTextElement(t,s,i=!1){switch(!0){case t.textAlign==="start":return`
                <g id="${t.id}">
                    <rect 
                        id="${t.id}" 
                        style="display:${this.lastSelectedShape&&this.lastSelectedShape.id===t.id?"initial":"none"};" 
                        x="${t.x}" 
                        y="${t.y-50}" 
                        height="${t.lines===0||t.lines===1?t.fontSize*4:t.fontSize*2*t.lines}"
                        width="100" 
                        fill="rgba(0,0,0,0)"
                    />
                    <text
                    style="user-select:none; height:100px;"
                    id="${t.id}"
                    x="${t.x}"
                    y="${t.y}"
                    text-anchor="${t.textAlign}"
                    font-size="${t.fontSize}"
                    fill="${t.color}"
                    font-weight="${t.isBold?"bold":"normal"}"
                    font-style="${t.isItalic?"italic":"normal"}"
                    text-decoration="${t.isUnderline?"underline":"none"}"
                    >
                        ${s.join("")}
                    </text>
                    ${this.showCaret&&this.lastSelectedShape&&this.lastSelectedShape.id===t.id?this.computeCaretPosition(t):""}
                    ${this.includeDeleteButton(t,i)}
                </g> 
                `;case t.textAlign==="middle":return`
                    <g id="${t.id}">
                    <rect 
                        id="${t.id}" 
                        style="display:${this.lastSelectedShape&&this.lastSelectedShape.id===t.id?"initial":"none"};" 
                        x="${t.x-50}" 
                        y="${t.y-50}" 
                        height="${t.lines===0||t.lines===1?t.fontSize*4:t.fontSize*2*t.lines}"
                        width="100" 
                        fill="rgba(0,0,0,0)"
                    />
                    <text
                    style="user-select:none; height:100px;"
                    id="${t.id}"
                    x="${t.x}"
                    y="${t.y}"
                    text-anchor="${t.textAlign}"
                    font-size="${t.fontSize}"
                    fill="${t.color}"
                    font-weight="${t.isBold?"bold":"normal"}"
                    font-style="${t.isItalic?"italic":"normal"}"
                    text-decoration="${t.isUnderline?"underline":"none"}"
                    >
                        ${s.join("")}
                    </text>
                    ${this.showCaret&&this.lastSelectedShape&&this.lastSelectedShape.id===t.id?this.computeCaretPosition(t):""}
                    ${this.includeDeleteButton(t)}
                    </g>
                `;case t.textAlign==="end":return`
                <g id="${t.id}">
                    <rect 
                        id="${t.id}" 
                        style="display:${this.lastSelectedShape&&this.lastSelectedShape.id===t.id?"initial":"none"};" 
                        x="${t.x-100}" 
                        y="${t.y-50}" 
                        height="${t.lines===0||t.lines===1?t.fontSize*4:t.fontSize*2*t.lines}"
                        width="100" 
                        fill="rgba(0,0,0,0)"
                    />
                    <text
                    style="user-select:none; height:100px;"
                    id="${t.id}"
                    x="${t.x}"
                    y="${t.y}"
                    text-anchor="${t.textAlign}"
                    font-size="${t.fontSize}"
                    fill="${t.color}"
                    font-weight="${t.isBold?"bold":"normal"}"
                    font-style="${t.isItalic?"italic":"normal"}"
                    text-decoration="${t.isUnderline?"underline":"none"}"
                    >
                        ${s.join("")}
                    </text>
                    ${this.showCaret&&this.lastSelectedShape&&this.lastSelectedShape.id===t.id?this.computeCaretPosition(t):""}
                    ${this.includeDeleteButton(t)}
                </g> 
                `;default:return""}},copy(t){return JSON.parse(JSON.stringify(t))},clickShape(t){const s=t.target.id;switch(!0){case this.isDeleteMode:this.shapes=[...this.shapes].filter(i=>i.id!==s),this.lastSelectedShape=void 0;break;default:this.lastSelectedShape=this.shapes.find(i=>i.id===s);break}},deleteEmptyTextElement(){!this.lastSelectedShape||!this.lastSelectedShape.id.includes("text")||this.lastSelectedShape.textContent===""&&(this.shapes=this.shapes.filter(t=>t.id!==this.lastSelectedShape.id),this.lastSelectedShape=this.shapes.at(-1))},drawUp(t=!1){if(!this.activeShape||!this.isDrawing)return;this.currentPointer.end={x:this.pointerPosition.x,y:this.pointerPosition.y};let s;this.shapes.length>0&&this.currentTarget&&(s=[...this.shapes].find(u=>u.id===this.currentTarget.id));let i,n,o;s&&(i=s.x-this.currentPointer.end.x,n=s.y-this.currentPointer.end.y,o=Math.sqrt(i*i+n*n));let e,l;t?(e=Math.max(this.currentPointer.end.x,s.x),l=Math.min(this.currentPointer.end.x,s.x),Math.max(this.currentPointer.end.y,s.y),Math.min(this.currentPointer.end.y,s.y)):(e=Math.max(this.currentPointer.end.x,this.currentPointer.start.x),l=Math.min(this.currentPointer.end.x,this.currentPointer.start.x),Math.max(this.currentPointer.end.y,this.currentPointer.start.y),Math.min(this.currentPointer.end.y,this.currentPointer.start.y)),this.$nextTick(()=>{switch(!0){case this.activeShape==="arrow":this.shapes.at(-1).endX=this.currentPointer.end.x,this.shapes.at(-1).endY=this.currentPointer.end.y;break;case this.activeShape==="circle":const u=20;this.shapes.at(-1).circleRadius=this.isDrawingNewShape?this.copy(e-l)+u:o+u;break;case this.activeShape==="line":this.shapes.at(-1).path+=` ${this.pointerPosition.x} ${this.pointerPosition.y} `;break;case["rect","group"].includes(this.activeShape):const b=20;this.shapes.at(-1).rectWidth=this.copy(this.currentPointer.end.x-this.shapes.at(-1).x)>0?this.copy(this.currentPointer.end.x-this.shapes.at(-1).x):b,this.shapes.at(-1).rectHeight=this.copy(this.currentPointer.end.y-this.shapes.at(-1).y)>0?this.copy(this.currentPointer.end.y-this.shapes.at(-1).y):b}})},drawDown(){if(this.isDrawing=!0,!this.activeShape&&!this.isSelectMode||!this.isDrawing)return;this.isDrawingNewShape=!0,this.currentPointer.start={x:this.pointerPosition.x,y:this.pointerPosition.y};let t=`${this.isSelectMode?"group":this.activeShape}_${Math.random()*1e4}_${Date.now()}`;switch(!0){case this.activeShape==="arrow":this.shapes.push({id:t,x:this.pointerPosition.x,y:this.pointerPosition.y,endX:this.pointerPosition.x,endY:this.pointerPosition.y,type:this.activeShape,color:this.copy(this.selectedColor),strokeWidth:this.copy(Math.abs(this.strokeSize)),isDash:this.copy(this.isDash)}),this.lastSelectedShape=this.shapes.at(-1);break;case this.activeShape==="circle":this.shapes.push({alpha:this.options.circle.filled?this.colorTransparency:"",id:t,color:this.copy(this.selectedColor),isFilled:this.copy(this.options.circle.filled),circleRadius:this.copy(this.options.circle.radius),circleStrokeWidth:this.copy(this.options.circle.strokeWidth),type:this.activeShape,x:this.pointerPosition.x,y:this.pointerPosition.y,strokeWidth:this.copy(Math.abs(this.strokeSize)),isDash:this.copy(this.isDash)}),this.lastSelectedShape=this.shapes.at(-1);break;case this.activeShape==="line":this.shapes.push({alpha:this.copy(this.colorTransparency),id:t,x:this.pointerPosition.x,y:this.pointerPosition.y,type:this.activeShape,color:this.copy(this.selectedColor),strokeWidth:this.copy(Math.abs(this.strokeSize)),isDash:this.copy(this.isDash),path:`${this.pointerPosition.x} ${this.pointerPosition.y}`}),this.lastSelectedShape=this.shapes.at(-1);break;case this.activeShape==="rect":this.shapes.push({alpha:this.options.rect.filled?this.colorTransparency:"",id:t,color:this.copy(this.selectedColor),isFilled:this.copy(this.options.rect.filled),rectStrokeWidth:this.copy(this.options.rect.strokeWidth),rectHeight:this.copy(this.options.rect.height),rectWidth:this.copy(this.options.rect.width),type:this.activeShape,x:this.pointerPosition.x,y:this.pointerPosition.y,strokeWidth:this.copy(Math.abs(this.strokeSize)),isDash:this.copy(this.isDash)}),this.lastSelectedShape=this.shapes.at(-1);break;case this.activeShape==="group":this.shapes.push({alpha:1,id:`group_${Math.random()*1e4}_${Date.now()}`,x:this.pointerPosition.x,y:this.pointerPosition.y,isFilled:!1,rectHeight:this.copy(this.options.rect.height),rectWidth:this.copy(this.options.rect.width),rectStrokeWidth:1,type:"group",color:"grey",strokeWidth:1,isDash:!0,content:""});break}if((this.pointerDownId!==-1||!this.isDrawing)&&(clearInterval(this.pointerDownId),this.pointerDownId=-1),this.pointerDownId===-1&&this.isDrawing){this.pointerDownId=setInterval(this.drawUp,1);return}},move(t){if(!(!t||!t.id||t.type==="line"))switch(this.lastSelectedShape=t,!0){case t.type==="arrow":t.x=this.copy(this.pointerPosition.x),t.y=this.copy(this.pointerPosition.y);break;case t.type==="circle":t.x=this.copy(this.pointerPosition.x),t.y=this.copy(this.pointerPosition.y);break;case t.type==="group":this.moveGroup(t);break;case t.type==="rect":t.x=this.copy(this.pointerPosition.x-t.rectWidth/2),t.y=this.copy(this.pointerPosition.y-t.rectHeight/2);break;case t.type==="text":const s=Array.from(document.getElementsByTagName("text")).find(l=>l.id===t.id);if(!s)return;const{x:i,y:n,width:o,height:e}=s.getBBox();t.textAlign==="start"&&(t.x=this.copy(this.pointerPosition.x-o/2)),t.textAlign==="middle"&&(t.x=this.copy(this.pointerPosition.x)),t.textAlign==="end"&&(t.x=this.copy(this.pointerPosition.x+o/2)),t.lines>1?t.y=this.copy(this.pointerPosition.y-e/3):t.y=this.copy(this.pointerPosition.y+t.fontSize/2);break}},moveDown(){if(!this.currentTarget||!this.currentTarget.id)return;const t=this.currentTarget.id,s=this.shapes.find(i=>i.id===t);this.shapes=this.shapes.filter(i=>i.id!==t),this.shapes.push(s),this.pointerDownId===-1&&t&&this.move(s)},print(){this.isPrinting=!0,this.isDeleteMode=!1,this.isMoveMode=!1,this.isResizeMode=!1,this.isTextMode=!1,this.isWriting=!1,this.isSelectMode=!1,this.activeShape=void 0,this.showCaret=!1,this.$nextTick(()=>{const t=this.$refs.drawSvgContainer,s={height:851.89,width:595.28};this.walkTheDOM(t,i=>{i&&i.nodeType===1&&(i.setAttribute("font-family","Helvetica"),i.style.fontFamily="Helvetica",i.replaceWith(i))}),$(t).then(i=>{const n=i.width,o=i.height,e=n/s.width*s.height;let l=o,u=0;const b=s.width,S=582.28/n*o,k=i.toDataURL("image/png",1),x=new f("","pt","a4");if(l<e)x.addImage(k,"PNG",0,0,b,S,"","FAST");else for(;l>0;)x.addImage(k,"PNG",0,u,b,S,"","FAST"),l-=e,u-=s.height-24,l>0&&x.addPage();x.save(`${new Date().toLocaleDateString()}_annotations.pdf`)}).finally(()=>{this.isPrinting=!1,this.walkTheDOM(t,i=>{i&&i.nodeType===1&&(i.setAttribute("font-family",this.FINAL_CONFIG.style.fontFamily),i.style.fontFamily=this.FINAL_CONFIG.style.fontFamily,i.replaceWith(i))})})})},resetDraw(){this.isDrawing=!1,this.isMouseDown=!1,this.pointerDownId=-1,this.isSelectMode&&this.groupShapes(),clearInterval(this.pointerDownId)},resize(){this.isDrawingNewShape=!1;const t=this.currentTarget.id;if(!t)return;this.isDrawing=!0;const s=this.shapes.find(i=>i.id===t);this.activeShape=s.type,this.shapes=this.shapes.filter(i=>i.id!==t),this.shapes.push(s),this.drawUp(!0)},setFillOfSelectedRect(){!this.lastSelectedShape||!this.lastSelectedShape.id.includes("rect")||(this.lastSelectedShape.isFilled=!this.lastSelectedShape.isFilled)},setFillOfSelectedCircle(){!this.lastSelectedShape||!this.lastSelectedShape.id.includes("circle")||(this.lastSelectedShape.isFilled=!this.lastSelectedShape.isFilled)},setColorOfSelectedShape(){this.lastSelectedShape&&(this.lastSelectedShape.color=this.copy(this.selectedColor),!["arrow","text"].includes(this.lastSelectedShape.id)&&(this.lastSelectedShape.alpha=this.copy(this.colorTransparency)))},setSelectedShapeToDash(){!this.lastSelectedShape||this.lastSelectedShape.type==="text"||(this.lastSelectedShape.isDash=this.copy(this.isDash))},setTransparencyOfSelectedShape(){!this.lastSelectedShape||["arrow","text"].includes(this.lastSelectedShape.id)||(this.lastSelectedShape.alpha=this.copy(this.colorTransparency))},setStrokeWidthOfSelectedShape(){!this.lastSelectedShape||!["arrow","circle","rect","line"].includes(this.lastSelectedShape.type)||(this.lastSelectedShape.strokeWidth=this.copy(Math.abs(this.strokeSize)))},setCurrentStyleOfSelectedText(){!this.lastSelectedShape||this.lastSelectedShape.type!=="text"||(this.lastSelectedShape.isBold=this.copy(this.isBold),this.lastSelectedShape.isItalic=this.copy(this.isItalic),this.lastSelectedShape.isUnderline=this.copy(this.isUnderline),this.lastSelectedShape.fontSize=this.copy(this.textFont),this.lastSelectedShape.isBulletTextMode=this.copy(this.isBulletTextMode))},setPointer(t){t.preventDefault();const s=this.$refs.mainSvg.getBoundingClientRect();let i,n;t.touches&&t.touches.length>0?(i=t.touches[0].clientX,n=t.touches[0].clientY):(i=t.clientX,n=t.clientY),this.pointerPosition.x=(i-s.left)/s.width*this.svgWidth,this.pointerPosition.y=(n-s.top)/s.height*this.svgHeight},setShapeTo(t){if(this.showCaret=!1,this.deleteEmptyTextElement(),t===this.activeShape){this.activeShape=void 0,this.isDrawMode=!1;return}this.isDrawMode=!0,this.isDeleteMode=!1,this.isMoveMode=!1,this.isResizeMode=!1,this.isTextMode=!1,this.activeShape=t},toggleSummary(){this.isSummaryOpen=!this.isSummaryOpen,this.isSummaryOpen||(this.isMoveMode=!1,this.isResizeMode=!1,this.isTextMode=!1,this.isWriting=!1,this.activeShape=void 0,this.showCaret=!1,this.isDeleteMode=!1,this.isWriting=!1),this.$emit("toggleOpenState",{isOpen:this.isSummaryOpen})},walkTheDOM(t,s){for(s(t),t=t.firstChild;t;)this.walkTheDOM(t,s),t=t.nextSibling},save(){this.$emit("saveAnnotations",{shapes:this.shapes,lastSelectedShape:this.lastSelectedShape})}}},I=t=>(G("data-v-14ebd65f"),t=t(),m(),t),D={class:"vue-ui-annotator"},z={"data-html2canvas-ignore":""},H={class:"tool-selection",style:{"margin-top":"24px"}},W=["disabled"],P=F('<svg xmlns="http://www.w3.org/2000/svg" width="80%" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" data-v-14ebd65f><path stroke="none" d="M0 0h24v24H0z" fill="none" data-v-14ebd65f></path><path d="M18 9l3 3l-3 3" data-v-14ebd65f></path><path d="M15 12h6" data-v-14ebd65f></path><path d="M6 9l-3 3l3 3" data-v-14ebd65f></path><path d="M3 12h6" data-v-14ebd65f></path><path d="M9 18l3 3l3 -3" data-v-14ebd65f></path><path d="M12 15v6" data-v-14ebd65f></path><path d="M15 6l-3 -3l-3 3" data-v-14ebd65f></path><path d="M12 3v6" data-v-14ebd65f></path></svg>',1),B=["disabled"],V=I(()=>r("svg",{xmlns:"http://www.w3.org/2000/svg",width:"80%",viewBox:"0 0 24 24","stroke-width":"2",stroke:"currentColor",fill:"none","stroke-linecap":"round","stroke-linejoin":"round"},[r("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),r("path",{d:"M4 11v8a1 1 0 0 0 1 1h8m-9 -14v-1a1 1 0 0 1 1 -1h1m5 0h2m5 0h1a1 1 0 0 1 1 1v1m0 5v2m0 5v1a1 1 0 0 1 -1 1h-1"}),r("path",{d:"M4 12h7a1 1 0 0 1 1 1v7"})],-1)),E=["disabled"],U=F('<svg width="80%" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" data-v-14ebd65f><path stroke="none" d="M0 0h24v24H0z" fill="none" data-v-14ebd65f></path><path d="M4 7l16 0" data-v-14ebd65f></path><path d="M10 11l0 6" data-v-14ebd65f></path><path d="M14 11l0 6" data-v-14ebd65f></path><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" data-v-14ebd65f></path><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" data-v-14ebd65f></path></svg>',1),X=["disabled"],Y={style:{width:"80%"},viewBox:"0 0 24 24"},j=I(()=>r("path",{fill:"currentColor",d:"M1,1V5H2V19H1V23H5V22H19V23H23V19H22V5H23V1H19V2H5V1M5,4H19V5H20V19H19V20H5V19H4V5H5M6,6V14H9V18H18V9H14V6M8,8H12V12H8M14,11H16V16H11V14H14"},null,-1)),Z=[j],q=["disabled"],J={style:{width:"80%"},viewBox:"0 0 24 24"},Q=I(()=>r("path",{fill:"currentColor",d:"M2,2H11V6H9V4H4V9H6V11H2V2M22,13V22H13V18H15V20H20V15H18V13H22M8,8H16V16H8V8Z"},null,-1)),K=[Q],tt=["disabled"],et={style:{width:"80%"},viewBox:"0 0 24 24"},ot=I(()=>r("path",{fill:"currentColor",d:"M2,2H11V11H2V2M9,4H4V9H9V4M22,13V22H13V13H22M15,20H20V15H15V20M16,8V11H13V8H16M11,16H8V13H11V16Z"},null,-1)),st=[ot],it=["disabled"],lt=I(()=>r("svg",{width:"80%",viewBox:"0 0 24 24","stroke-width":"2",stroke:"currentColor",fill:"none","stroke-linecap":"round","stroke-linejoin":"round"},[r("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),r("path",{d:"M7 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z"}),r("path",{d:"M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2"})],-1)),rt=["disabled"],at=I(()=>r("svg",{width:"80%",viewBox:"0 0 24 24","stroke-width":"2",stroke:"currentColor",fill:"none","stroke-linecap":"round","stroke-linejoin":"round"},[r("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),r("path",{d:"M9 14l-4 -4l4 -4"}),r("path",{d:"M5 10h11a4 4 0 1 1 0 8h-1"})],-1)),dt=F('<svg width="80%" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" data-v-14ebd65f><path stroke="none" d="M0 0h24v24H0z" fill="none" data-v-14ebd65f></path><path d="M17 17h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-14a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2" data-v-14ebd65f></path><path d="M17 9v-4a2 2 0 0 0 -2 -2h-6a2 2 0 0 0 -2 2v4" data-v-14ebd65f></path><path d="M7 13m0 2a2 2 0 0 1 2 -2h6a2 2 0 0 1 2 2v4a2 2 0 0 1 -2 2h-6a2 2 0 0 1 -2 -2z" data-v-14ebd65f></path></svg>',1),nt=F('<svg width="100%" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" data-v-14ebd65f><path stroke="none" d="M0 0h24v24H0z" fill="none" data-v-14ebd65f></path><path d="M6 4h10l4 4v10a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2" data-v-14ebd65f></path><path d="M12 14m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" data-v-14ebd65f></path><path d="M14 4l0 4l-6 0l0 -4" data-v-14ebd65f></path></svg>',1),ht={class:"tool-selection",style:{"margin-top":"6px"}},ct={viewBox:"0 0 12 12",style:{width:"100%"}},pt=["fill"],yt={key:0,class:"tool-input"},ut={for:"circleFill"},bt=["checked"],It={viewBox:"0 0 12 12",style:{width:"100%"}},Ft=["fill"],Nt={key:1,class:"tool-input"},xt={for:"rectFill"},Ct=["checked"],gt={viewBox:"0 0 24 24",style:{width:"100%"}},St=["stroke"],kt=I(()=>r("svg",{width:"80%",viewBox:"0 0 24 24","stroke-width":"2",stroke:"currentColor",fill:"none","stroke-linecap":"round","stroke-linejoin":"round"},[r("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),r("path",{d:"M3 15c2 3 4 4 7 4s7 -3 7 -7s-3 -7 -6 -7s-5 1.5 -5 4s2 5 6 5s8.408 -2.453 10 -5"})],-1)),$t={key:2},ft={style:{display:"flex","flex-direction":"column","align-items":"center","justify-content":"center"}},vt={for:"textFont",style:{"font-size":"0.7em"}},At={key:3},wt={style:{display:"flex","flex-direction":"column","align-items":"center","justify-content":"center"}},Ot={for:"dashStyle",style:{"font-size":"0.7em"}},Mt={viewBox:"0 0 24 24",height:"24",width:"24",style:{"margin-bottom":"-5px","margin-top":"-10px"}},Lt=I(()=>r("line",{x1:"0",x2:"24",y1:"12",y2:"12","stroke-width":"2",stroke:"black","stroke-dasharray":"3"},null,-1)),_t=[Lt],Gt=["checked"],mt={style:{width:"80%"},viewBox:"0 0 24 24",fill:"currentColor"},Tt=I(()=>r("path",{d:"M18.5,4L19.66,8.35L18.7,8.61C18.25,7.74 17.79,6.87 17.26,6.43C16.73,6 16.11,6 15.5,6H13V16.5C13,17 13,17.5 13.33,17.75C13.67,18 14.33,18 15,18V19H9V18C9.67,18 10.33,18 10.67,17.75C11,17.5 11,17 11,16.5V6H8.5C7.89,6 7.27,6 6.74,6.43C6.21,6.87 5.75,7.74 5.3,8.61L4.34,8.35L5.5,4H18.5Z"},null,-1)),Rt=[Tt],Dt={key:4},zt={style:{display:"flex","flex-direction":"column","align-items":"center","justify-content":"center"}},Ht={for:"textFont",style:{"font-size":"0.7em"}},Wt={key:5},Pt=F('<svg width="80%" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" data-v-14ebd65f><path stroke="none" d="M0 0h24v24H0z" fill="none" data-v-14ebd65f></path><path d="M4 6l16 0" data-v-14ebd65f></path><path d="M4 12l10 0" data-v-14ebd65f></path><path d="M4 18l14 0" data-v-14ebd65f></path></svg>',1),Bt={key:6},Vt=["disabled"],Et=F('<svg width="80%" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" data-v-14ebd65f><path stroke="none" d="M0 0h24v24H0z" fill="none" data-v-14ebd65f></path><path d="M4 6l16 0" data-v-14ebd65f></path><path d="M8 12l8 0" data-v-14ebd65f></path><path d="M6 18l12 0" data-v-14ebd65f></path></svg>',1),Ut={key:7},Xt=["disabled"],Yt=F('<svg width="80%" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" data-v-14ebd65f><path stroke="none" d="M0 0h24v24H0z" fill="none" data-v-14ebd65f></path><path d="M4 6l16 0" data-v-14ebd65f></path><path d="M10 12l10 0" data-v-14ebd65f></path><path d="M6 18l14 0" data-v-14ebd65f></path></svg>',1),jt={key:8},Zt=F('<svg width="100%" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" data-v-14ebd65f><path stroke="none" d="M0 0h24v24H0z" fill="none" data-v-14ebd65f></path><path d="M9 6l11 0" data-v-14ebd65f></path><path d="M9 12l11 0" data-v-14ebd65f></path><path d="M9 18l11 0" data-v-14ebd65f></path><path d="M5 6l0 .01" data-v-14ebd65f></path><path d="M5 12l0 .01" data-v-14ebd65f></path><path d="M5 18l0 .01" data-v-14ebd65f></path></svg>',1),qt={key:9},Jt=I(()=>r("svg",{width:"100%",viewBox:"0 0 24 24","stroke-width":"3",stroke:"currentColor",fill:"none","stroke-linecap":"round","stroke-linejoin":"round"},[r("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),r("path",{d:"M7 5h6a3.5 3.5 0 0 1 0 7h-6z"}),r("path",{d:"M13 12h1a3.5 3.5 0 0 1 0 7h-7v-7"})],-1)),Qt={key:10},Kt=F('<svg width="100%" height="44" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" data-v-14ebd65f><path stroke="none" d="M0 0h24v24H0z" fill="none" data-v-14ebd65f></path><path d="M11 5l6 0" data-v-14ebd65f></path><path d="M7 19l6 0" data-v-14ebd65f></path><path d="M14 5l-4 14" data-v-14ebd65f></path></svg>',1),te={key:11},ee=I(()=>r("svg",{width:"100%",viewBox:"0 0 24 24","stroke-width":"2",stroke:"currentColor",fill:"none","stroke-linecap":"round","stroke-linejoin":"round"},[r("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),r("path",{d:"M7 5v5a5 5 0 0 0 10 0v-5"}),r("path",{d:"M5 19h14"})],-1)),oe={style:{display:"flex","flex-direction":"column","align-items":"center","justify-content":"center"},class:"tooltip"},se={style:{display:"flex","flex-direction":"column","align-items":"start","justify-content":"center"}},ie={for:"colorTransparency",style:{"font-size":"0.7em"}},le={class:"annotator annotator__wrapper",ref:"drawSvgContainer",style:{position:"relative"}},re=["viewBox","width","height"],ae=["id","innerHTML"],de=["height","viewBox","width"],ne=["cx","cy"];function he(t,s,i,n,o,e){return a(),d("div",D,[r("div",z,[r("details",{class:"vue-ui-annotator-summary",onToggle:s[36]||(s[36]=(...l)=>e.toggleSummary&&e.toggleSummary(...l)),style:h(`${o.isSummaryOpen?"padding-bottom: 12px":""}; background: ${e.FINAL_CONFIG.style.backgroundColor}; color:${e.FINAL_CONFIG.style.color}; ${e.FINAL_CONFIG.style.fixedTools&&o.isSummaryOpen?"position: fixed; top: 0; left: 50%; transform: translateX(-50%); z-index: 1;":""}`)},[r("summary",null,p(e.FINAL_CONFIG.translations.title),1),r("div",H,[r("button",{disabled:o.shapes.length===0,style:h({background:o.isMoveMode?e.FINAL_CONFIG.style.buttons.controls.selected.backgroundColor:e.FINAL_CONFIG.style.buttons.controls.backgroundColor,border:o.isMoveMode?e.FINAL_CONFIG.style.buttons.controls.selected.border:e.FINAL_CONFIG.style.buttons.controls.border,color:o.isMoveMode?e.FINAL_CONFIG.style.buttons.controls.selected.color:e.FINAL_CONFIG.style.buttons.controls.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),class:y({"button-tool":!0,"button-tool--selected":o.isMoveMode,tooltip:!0}),onClick:s[0]||(s[0]=l=>{e.deleteEmptyTextElement(),o.isMoveMode=!o.isMoveMode,o.activeShape=void 0,o.isDeleteMode=!1,o.isDrawMode=!1,o.isResizeMode=!1,o.isSelectMode=!1,o.isTextMode=!1,o.isWriting=!1,o.showCaret=!1})},[P,e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipMove),5)):c("",!0)],14,W),r("button",{disabled:o.shapes.length===0||o.activeShape==="line",style:h({background:o.isResizeMode?e.FINAL_CONFIG.style.buttons.controls.selected.backgroundColor:e.FINAL_CONFIG.style.buttons.controls.backgroundColor,border:o.isResizeMode?e.FINAL_CONFIG.style.buttons.controls.selected.border:e.FINAL_CONFIG.style.buttons.controls.border,color:o.isResizeMode?e.FINAL_CONFIG.style.buttons.controls.selected.color:e.FINAL_CONFIG.style.buttons.controls.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),class:y({"button-tool":!0,"button-tool--selected":o.isResizeMode,tooltip:!0}),onClick:s[1]||(s[1]=l=>{e.deleteEmptyTextElement(),o.isResizeMode=!o.isResizeMode,o.isMoveMode=!1,o.isDeleteMode=!1,o.isDrawMode=!1,o.isSelectMode=!1,o.isTextMode=!1,o.isWriting=!1,o.activeShape=void 0,o.showCaret=!1})},[V,e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipResize),5)):c("",!0)],14,B),r("button",{disabled:o.shapes.length===0,style:h({background:o.isDeleteMode?e.FINAL_CONFIG.style.buttons.controls.selected.backgroundColor:e.FINAL_CONFIG.style.buttons.controls.backgroundColor,border:o.isDeleteMode?e.FINAL_CONFIG.style.buttons.controls.selected.border:e.FINAL_CONFIG.style.buttons.controls.border,color:o.isDeleteMode?e.FINAL_CONFIG.style.buttons.controls.selected.color:e.FINAL_CONFIG.style.buttons.controls.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),class:y({"button-tool":!0,"button-tool--selected":o.isDeleteMode,tooltip:!0}),onClick:s[2]||(s[2]=l=>{e.deleteEmptyTextElement(),o.isDeleteMode=!o.isDeleteMode,o.isMoveMode=!1,o.isResizeMode=!1,o.isSelectMode=!1,o.isTextMode=!1,o.isWriting=!1,o.activeShape=void 0,o.showCaret=!1})},[U,e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipDelete),5)):c("",!0)],14,E),r("button",{disabled:!e.canSelect,style:h({background:o.isSelectMode?e.FINAL_CONFIG.style.buttons.controls.selected.backgroundColor:e.FINAL_CONFIG.style.buttons.controls.backgroundColor,border:o.isSelectMode?e.FINAL_CONFIG.style.buttons.controls.selected.border:e.FINAL_CONFIG.style.buttons.controls.border,color:o.isSelectMode?e.FINAL_CONFIG.style.buttons.controls.selected.color:e.FINAL_CONFIG.style.buttons.controls.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),class:y({"button-tool":!0,"button-tool--selected":o.isSelectMode,tooltip:!0}),onClick:s[3]||(s[3]=l=>{e.deleteEmptyTextElement(),e.setShapeTo("group"),o.isSelectMode=!o.isSelectMode,o.isDeleteMode=!1,o.isMoveMode=!1,o.isResizeMode=!1,o.isTextMode=!1,o.isWriting=!1,o.activeShape="group",o.showCaret=!1})},[(a(),d("svg",Y,Z)),e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipGroup),5)):c("",!0)],14,X),r("button",{disabled:o.shapes.length===0,style:h({background:e.FINAL_CONFIG.style.buttons.controls.backgroundColor,border:e.FINAL_CONFIG.style.buttons.controls.border,color:e.FINAL_CONFIG.style.buttons.controls.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),class:y({"button-tool":!0,tooltip:!0}),onClick:s[4]||(s[4]=l=>{o.isResizeMode=!1,o.isMoveMode=!0,o.isDeleteMode=!1,o.isDrawMode=!1,o.isSelectMode=!1,o.isTextMode=!1,o.isWriting=!1,o.showCaret=!1,e.bringShapeTo("front")})},[(a(),d("svg",J,K)),e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipBringToFront),5)):c("",!0)],12,q),r("button",{disabled:o.shapes.length===0,style:h({background:e.FINAL_CONFIG.style.buttons.controls.backgroundColor,border:e.FINAL_CONFIG.style.buttons.controls.border,color:e.FINAL_CONFIG.style.buttons.controls.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),class:y({"button-tool":!0,tooltip:!0}),onClick:s[5]||(s[5]=l=>{o.isResizeMode=!1,o.isMoveMode=!0,o.isDeleteMode=!1,o.isDrawMode=!1,o.isSelectMode=!1,o.isTextMode=!1,o.isWriting=!1,o.showCaret=!1,e.bringShapeTo("back")})},[(a(),d("svg",et,st)),e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipBringToBack),5)):c("",!0)],12,tt),r("button",{disabled:o.shapes.length===0||o.activeShape==="line",style:h({background:e.FINAL_CONFIG.style.buttons.controls.backgroundColor,border:e.FINAL_CONFIG.style.buttons.controls.border,color:e.FINAL_CONFIG.style.buttons.controls.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),class:y({"button-tool":!0,tooltip:!0}),onClick:s[6]||(s[6]=l=>{e.deleteEmptyTextElement(),o.isResizeMode=!1,o.isMoveMode=!0,o.isDeleteMode=!1,o.isDrawMode=!1,o.isSelectMode=!1,o.isTextMode=!1,o.isWriting=!1,o.showCaret=!1,e.copyPaste()})},[lt,e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipDuplicate),5)):c("",!0)],12,it),r("button",{disabled:o.shapes.length===0,style:h({background:e.FINAL_CONFIG.style.buttons.controls.backgroundColor,border:e.FINAL_CONFIG.style.buttons.controls.border,color:e.FINAL_CONFIG.style.buttons.controls.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),class:y({"button-tool":!0,"button-tool--one-shot":!0,tooltip:!0}),onClick:s[7]||(s[7]=l=>{o.isResizeMode=!1,o.isMoveMode=!1,o.isDeleteMode=!1,o.isDrawMode=!1,o.isSelectMode=!1,o.isTextMode=!1,o.isWriting=!1,o.activeShape=void 0,o.showCaret=!1,e.undoLastShape()})},[at,e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipUndo),5)):c("",!0)],12,rt),e.FINAL_CONFIG.style.showPrint?(a(),d("button",{key:0,style:h({background:e.FINAL_CONFIG.style.buttons.controls.backgroundColor,border:e.FINAL_CONFIG.style.buttons.controls.border,color:e.FINAL_CONFIG.style.buttons.controls.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),class:y({"button-tool":!0,tooltip:!0}),onClick:s[8]||(s[8]=(...l)=>e.print&&e.print(...l))},[dt,e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipPdf),5)):c("",!0)],4)):c("",!0),e.FINAL_CONFIG.style.showSave?(a(),d("button",{key:1,style:h({background:e.FINAL_CONFIG.style.buttons.controls.backgroundColor,border:e.FINAL_CONFIG.style.buttons.controls.border,color:e.FINAL_CONFIG.style.buttons.controls.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),class:y({"button-tool":!0,tooltip:!0}),onClick:s[9]||(s[9]=(...l)=>e.save&&e.save(...l))},[nt,e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipSave),5)):c("",!0)],4)):c("",!0)]),r("div",ht,[r("button",{class:y({"button-tool":!0,"button-tool--selected":o.activeShape==="circle",tooltip:!0}),style:h({background:o.activeShape==="circle"?e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor:e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,border:o.activeShape==="circle"?e.FINAL_CONFIG.style.buttons.shapes.selected.border:e.FINAL_CONFIG.style.buttons.shapes.border,color:o.activeShape==="circle"?e.FINAL_CONFIG.style.buttons.shapes.selected.color:e.FINAL_CONFIG.style.buttons.shapes.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),onClick:s[10]||(s[10]=l=>{e.setShapeTo("circle"),o.isSelectMode=!1})},[(a(),d("svg",ct,[r("circle",{cx:6,cy:6,r:"4",fill:o.options.circle.filled?(o.activeShape,o.selectedColor+e.colorTransparency):"none",stroke:"currentColor"},null,8,pt)])),e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipShapeCircle),5)):c("",!0)],6),o.activeShape==="circle"?(a(),d("div",yt,[r("label",ut,p(e.FINAL_CONFIG.translations.filled),1),N(r("input",{type:"checkbox","onUpdate:modelValue":s[11]||(s[11]=l=>o.options.circle.filled=l),onChange:s[12]||(s[12]=(...l)=>e.setFillOfSelectedCircle&&e.setFillOfSelectedCircle(...l)),checked:o.options.circle.filled},null,40,bt),[[g,o.options.circle.filled]])])):c("",!0),r("button",{class:y({"button-tool":!0,"button-tool--selected":o.activeShape==="rect",tooltip:!0}),style:h({background:o.activeShape==="rect"?e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor:e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,border:o.activeShape==="rect"?e.FINAL_CONFIG.style.buttons.shapes.selected.border:e.FINAL_CONFIG.style.buttons.shapes.border,color:o.activeShape==="rect"?e.FINAL_CONFIG.style.buttons.shapes.selected.color:e.FINAL_CONFIG.style.buttons.shapes.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),onClick:s[13]||(s[13]=l=>{e.setShapeTo("rect"),o.isSelectMode=!1})},[(a(),d("svg",It,[r("rect",{x:"3",y:"3",style:{rx:"0 !important",ry:"0 !important"},height:"6",width:"6",fill:o.options.rect.filled?(o.activeShape,o.selectedColor+e.colorTransparency):"none",stroke:"currentColor"},null,8,Ft)])),e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipShapeRect),5)):c("",!0)],6),o.activeShape==="rect"?(a(),d("div",Nt,[r("label",xt,p(e.FINAL_CONFIG.translations.filled),1),N(r("input",{id:"rectFill",type:"checkbox","onUpdate:modelValue":s[14]||(s[14]=l=>o.options.rect.filled=l),onChange:s[15]||(s[15]=(...l)=>e.setFillOfSelectedRect&&e.setFillOfSelectedRect(...l)),checked:o.options.rect.filled},null,40,Ct),[[g,o.options.rect.filled]])])):c("",!0),r("button",{class:y({"button-tool":!0,"button-tool--selected":o.activeShape==="arrow",tooltip:!0}),style:h({background:o.activeShape==="arrow"?e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor:e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,border:o.activeShape==="arrow"?e.FINAL_CONFIG.style.buttons.shapes.selected.border:e.FINAL_CONFIG.style.buttons.shapes.border,color:o.activeShape==="arrow"?e.FINAL_CONFIG.style.buttons.shapes.selected.color:e.FINAL_CONFIG.style.buttons.shapes.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),onClick:s[16]||(s[16]=l=>{e.setShapeTo("arrow"),o.isSelectMode=!1})},[(a(),d("svg",gt,[r("path",{stroke:o.options.arrow.filled?o.activeShape==="arrow"?"white":"grey":"none","stroke-width":"2",d:"M5,19 19,5 14,5 19,10.5 19,5",fill:"none","stroke-linecap":"round","stroke-linejoin":"round"},null,8,St)])),e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipShapeArrow),5)):c("",!0)],6),r("button",{class:y({"button-tool":!0,"button-tool--selected":o.activeShape==="line",tooltip:!0}),style:h({background:o.activeShape==="line"?e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor:e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,border:o.activeShape==="line"?e.FINAL_CONFIG.style.buttons.shapes.selected.border:e.FINAL_CONFIG.style.buttons.shapes.border,color:o.activeShape==="line"?e.FINAL_CONFIG.style.buttons.shapes.selected.color:e.FINAL_CONFIG.style.buttons.shapes.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),onClick:s[17]||(s[17]=l=>{e.setShapeTo("line"),o.isSelectMode=!1})},[kt,e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipShapeFreehand),5)):c("",!0)],6),["arrow","circle","rect","line"].includes(o.activeShape)?(a(),d("div",$t,[r("div",ft,[r("label",vt,p(e.FINAL_CONFIG.translations.thickness),1),N(r("input",{id:"textFont",type:"number","onUpdate:modelValue":s[18]||(s[18]=l=>o.strokeSize=l),onInput:s[19]||(s[19]=(...l)=>e.setStrokeWidthOfSelectedShape&&e.setStrokeWidthOfSelectedShape(...l)),style:{padding:"0 4px",width:"40px",border:"1px solid #dadada","border-radius":"3px"}},null,544),[[C,o.strokeSize]])])])):c("",!0),["arrow","circle","rect"].includes(o.activeShape)?(a(),d("div",At,[r("div",wt,[r("label",Ot,p(e.FINAL_CONFIG.translations.dashedLines),1),(a(),d("svg",Mt,_t)),N(r("input",{id:"dashStyle",name:"dashStyle",type:"checkbox","onUpdate:modelValue":s[20]||(s[20]=l=>o.isDash=l),onChange:s[21]||(s[21]=(...l)=>e.setSelectedShapeToDash&&e.setSelectedShapeToDash(...l)),checked:o.isDash},null,40,Gt),[[g,o.isDash]])])])):c("",!0),r("button",{class:y({"button-tool":!0,"button-tool--selected":o.isTextMode,tooltip:!0}),style:h({background:o.isTextMode?e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor:e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,border:o.isTextMode?e.FINAL_CONFIG.style.buttons.shapes.selected.border:e.FINAL_CONFIG.style.buttons.shapes.border,color:o.isTextMode?e.FINAL_CONFIG.style.buttons.shapes.selected.color:e.FINAL_CONFIG.style.buttons.shapes.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),onClick:s[22]||(s[22]=l=>{e.deleteEmptyTextElement(),o.isTextMode=!o.isTextMode,o.isDeleteMode=!1,o.isMoveMode=!1,o.isResizeMode=!1,o.isSelectMode=!1,o.isDrawMode=!1,o.activeShape=void 0})},[(a(),d("svg",mt,Rt)),e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipShapeText),5)):c("",!0)],6),o.isTextMode?(a(),d("div",Dt,[r("div",zt,[r("label",Ht,p(e.FINAL_CONFIG.translations.fontSize),1),N(r("input",{id:"textFont",type:"number","onUpdate:modelValue":s[23]||(s[23]=l=>o.textFont=l),onInput:s[24]||(s[24]=(...l)=>e.setCurrentStyleOfSelectedText&&e.setCurrentStyleOfSelectedText(...l)),style:{padding:"0 4px",width:"40px",border:"1px solid #dadada","border-radius":"3px"}},null,544),[[C,o.textFont]])])])):c("",!0),o.isTextMode?(a(),d("div",Wt,[r("button",{class:y({"button-tool":!0,"button-tool--selected":o.textAlign==="start",tooltip:!0}),style:h({background:o.textAlign==="start"?e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor:e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,border:o.textAlign==="start"?e.FINAL_CONFIG.style.buttons.shapes.selected.border:e.FINAL_CONFIG.style.buttons.shapes.border,color:o.textAlign==="start"?e.FINAL_CONFIG.style.buttons.shapes.selected.color:e.FINAL_CONFIG.style.buttons.shapes.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),onClick:s[25]||(s[25]=l=>{o.isDeleteMode=!1,o.isMoveMode=!1,o.isResizeMode=!1,o.isDrawMode=!1,o.isSelectMode=!1,o.activeShape=void 0,o.textAlign="start",e.setSelectedTextAlignTo("start")})},[Pt,e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipShapeTextLeft),5)):c("",!0)],6)])):c("",!0),o.isTextMode?(a(),d("div",Bt,[r("button",{class:y({"button-tool":!0,"button-tool--selected":o.textAlign==="middle",tooltip:!0}),style:h({background:o.textAlign==="middle"?e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor:e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,border:o.textAlign==="middle"?e.FINAL_CONFIG.style.buttons.shapes.selected.border:e.FINAL_CONFIG.style.buttons.shapes.border,color:o.textAlign==="middle"?e.FINAL_CONFIG.style.buttons.shapes.selected.color:e.FINAL_CONFIG.style.buttons.shapes.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),disabled:o.isBulletTextMode,onClick:s[26]||(s[26]=l=>{o.isDeleteMode=!1,o.isMoveMode=!1,o.isResizeMode=!1,o.isDrawMode=!1,o.isSelectMode=!1,o.activeShape=void 0,o.textAlign="middle",e.setSelectedTextAlignTo("middle")})},[Et,e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipShapeTextCenter),5)):c("",!0)],14,Vt)])):c("",!0),o.isTextMode?(a(),d("div",Ut,[r("button",{class:y({"button-tool":!0,"button-tool--selected":o.textAlign==="end",tooltip:!0}),style:h({background:o.textAlign==="end"?e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor:e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,border:o.textAlign==="end"?e.FINAL_CONFIG.style.buttons.shapes.selected.border:e.FINAL_CONFIG.style.buttons.shapes.border,color:o.textAlign==="end"?e.FINAL_CONFIG.style.buttons.shapes.selected.color:e.FINAL_CONFIG.style.buttons.shapes.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),disabled:o.isBulletTextMode,onClick:s[27]||(s[27]=l=>{o.isDeleteMode=!1,o.isMoveMode=!1,o.isResizeMode=!1,o.isDrawMode=!1,o.isSelectMode=!1,o.activeShape=void 0,o.textAlign="end",e.setSelectedTextAlignTo("end")})},[Yt,e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipShapeTextRight),5)):c("",!0)],14,Xt)])):c("",!0),o.isTextMode?(a(),d("div",jt,[r("button",{class:y({"button-tool":!0,"button-tool--selected":o.isBulletTextMode,tooltip:!0}),style:h({background:o.isBulletTextMode?e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor:e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,border:o.isBulletTextMode?e.FINAL_CONFIG.style.buttons.shapes.selected.border:e.FINAL_CONFIG.style.buttons.shapes.border,color:o.isBulletTextMode?e.FINAL_CONFIG.style.buttons.shapes.selected.color:e.FINAL_CONFIG.style.buttons.shapes.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),onClick:s[28]||(s[28]=l=>{o.isDeleteMode=!1,o.isMoveMode=!1,o.isResizeMode=!1,o.isDrawMode=!1,o.isSelectMode=!1,o.activeShape=void 0,o.isBulletTextMode=!o.isBulletTextMode,o.textAlign="start",e.setSelectedTextAlignTo("start"),e.setCurrentStyleOfSelectedText()})},[Zt,e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipShapeTextBullet),5)):c("",!0)],6)])):c("",!0),o.isTextMode?(a(),d("div",qt,[r("button",{class:y({"button-tool":!0,"button-tool--selected":o.isBold,tooltip:!0}),style:h({background:o.isBold?e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor:e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,border:o.isBold?e.FINAL_CONFIG.style.buttons.shapes.selected.border:e.FINAL_CONFIG.style.buttons.shapes.border,color:o.isBold?e.FINAL_CONFIG.style.buttons.shapes.selected.color:e.FINAL_CONFIG.style.buttons.shapes.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),onClick:s[29]||(s[29]=l=>{o.isDeleteMode=!1,o.isMoveMode=!1,o.isResizeMode=!1,o.isDrawMode=!1,o.isSelectMode=!1,o.activeShape=void 0,o.isBold=!o.isBold,e.setCurrentStyleOfSelectedText()})},[Jt,e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipShapeTextBold),5)):c("",!0)],6)])):c("",!0),o.isTextMode?(a(),d("div",Qt,[r("button",{class:y({"button-tool":!0,"button-tool--selected":o.isItalic,tooltip:!0}),style:h({background:o.isItalic?e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor:e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,border:o.isItalic?e.FINAL_CONFIG.style.buttons.shapes.selected.border:e.FINAL_CONFIG.style.buttons.shapes.border,color:o.isItalic?e.FINAL_CONFIG.style.buttons.shapes.selected.color:e.FINAL_CONFIG.style.buttons.shapes.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),onClick:s[30]||(s[30]=l=>{o.isDeleteMode=!1,o.isMoveMode=!1,o.isResizeMode=!1,o.isDrawMode=!1,o.isSelectMode=!1,o.activeShape=void 0,o.isItalic=!o.isItalic,e.setCurrentStyleOfSelectedText()})},[Kt,e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipShapeTextItalic),5)):c("",!0)],6)])):c("",!0),o.isTextMode?(a(),d("div",te,[r("button",{class:y({"button-tool":!0,"button-tool--selected":o.isUnderline,tooltip:!0}),style:h({background:o.isUnderline?e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor:e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,border:o.isUnderline?e.FINAL_CONFIG.style.buttons.shapes.selected.border:e.FINAL_CONFIG.style.buttons.shapes.border,color:o.isUnderline?e.FINAL_CONFIG.style.buttons.shapes.selected.color:e.FINAL_CONFIG.style.buttons.shapes.color,borderRadius:`${e.FINAL_CONFIG.style.buttons.borderRadius}px`}),onClick:s[31]||(s[31]=l=>{o.isDeleteMode=!1,o.isMoveMode=!1,o.isResizeMode=!1,o.isDrawMode=!1,o.isSelectMode=!1,o.activeShape=void 0,o.isUnderline=!o.isUnderline,e.setCurrentStyleOfSelectedText()})},[ee,e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipShapeTextUnderline),5)):c("",!0)],6)])):c("",!0),r("div",oe,[N(r("input",{type:"color",id:"colorPicker",name:"colorPicker","onUpdate:modelValue":s[32]||(s[32]=l=>o.selectedColor=l),onInput:s[33]||(s[33]=(...l)=>e.setColorOfSelectedShape&&e.setColorOfSelectedShape(...l)),style:h(`height: 30px; width: 30px; border-radius: ${e.FINAL_CONFIG.style.buttons.borderRadius}px; cursor: pointer`)},null,36),[[C,o.selectedColor]]),e.FINAL_CONFIG.style.showTooltips?(a(),d("span",{key:0,class:"tooltiptext",style:h({backgroundColor:e.FINAL_CONFIG.style.tooltips.backgroundColor,color:e.FINAL_CONFIG.style.tooltips.color,border:e.FINAL_CONFIG.style.tooltips.border,borderRadius:`${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,boxShadow:e.FINAL_CONFIG.style.tooltips.boxShadow})},p(e.FINAL_CONFIG.translations.tooltipShapeColor),5)):c("",!0)]),r("div",se,[r("label",ie,p(e.FINAL_CONFIG.translations.colorAlpha)+": "+p(o.transparency>98?100:o.transparency)+" % ",1),N(r("input",{id:"colorTransparency",name:"colorTransparency",type:"range","onUpdate:modelValue":s[34]||(s[34]=l=>o.transparency=l),onInput:s[35]||(s[35]=(...l)=>e.setTransparencyOfSelectedShape&&e.setTransparencyOfSelectedShape(...l)),min:0,max:100,style:{width:"100px"}},null,544),[[C,o.transparency]])])])],36)]),r("div",le,[M(t.$slots,"default",{},void 0,!0),o.isSummaryOpen?(a(),d("svg",{id:"annotatorSvg",key:o.step,ref:"mainSvg",class:y({draw:!0,"draw--free":o.activeShape==="line"}),style:h([`cursor:${e.cursorClass}; font-family: Helvetica; z-index: 100000000;`,{position:"absolute",top:"0",left:"0"}]),viewBox:`0 0 ${o.svgWidth} ${o.svgHeight}`,width:o.sourceWidth,height:o.sourceHeight,onPointerdown:s[38]||(s[38]=l=>e.chooseAction(l)),onPointerup:s[39]||(s[39]=(...l)=>e.resetDraw&&e.resetDraw(...l)),onTouchend:s[40]||(s[40]=(...l)=>e.resetDraw&&e.resetDraw(...l)),onTouchstart:s[41]||(s[41]=l=>{e.setPointer(l),e.clickSvg(l)}),onPointermove:s[42]||(s[42]=l=>{e.setPointer(l),e.chooseMove(l)}),onPointerout:s[43]||(s[43]=l=>{o.preventEdit=!0,o.hoveredShapeId=void 0}),onPointerover:s[44]||(s[44]=l=>e.allowEditAndHoverShapes(l)),onClick:s[45]||(s[45]=l=>e.clickSvg(l))},[(a(!0),d(L,null,_(e.userShapes,(l,u)=>(a(),d("g",{key:`shape_${u}`,id:l.id,innerHTML:l,onClick:s[37]||(s[37]=b=>{e.clickShape(b),o.isMoveMode=!1})},null,8,ae))),128))],46,re)):c("",!0),o.isPrinting?(a(),d("svg",{key:1,style:{position:"absolute",top:"0",left:"0"},height:o.sourceHeight,viewBox:`0 0 ${o.svgWidth} ${o.svgHeight}`,width:o.sourceWidth},[r("circle",{class:"animated-circle-print",cx:o.svgWidth/2,cy:o.svgHeight/2,r:"50",stroke:"#6376DD","stroke-width":"10",fill:"none"},null,8,ne)],8,de)):c("",!0)],512)])}const Ie=T(R,[["render",he],["__scopeId","data-v-14ebd65f"]]);export{Ie as default};
