{
  "version": 3,
  "sources": ["../../../node_modules/vue-data-ui/dist/vue-ui-annotator-DrVu5Pu0.js"],
  "sourcesContent": ["import p from \"./html2canvas.esm-d2sM-0Wm.js\";\nimport { E as _ } from \"./jspdf.es.min-C660YX78.js\";\nimport { z as v, u as w, A, B as M } from \"./index-hV0hU1iE.js\";\nimport { openBlock as d, createElementBlock as n, createElementVNode as r, normalizeStyle as c, toDisplayString as u, normalizeClass as y, createCommentVNode as a, withDirectives as f, vModelCheckbox as g, vModelText as C, renderSlot as O, Fragment as L, renderList as G, createStaticVNode as N, pushScopeId as m, popScopeId as T } from \"vue\";\nimport { _ as R } from \"./_plugin-vue_export-helper-CHgC5LLL.js\";\nconst D = {\n  props: {\n    config: {\n      type: Object,\n      default() {\n        return {};\n      }\n    },\n    dataset: {\n      type: Object,\n      default() {\n        return {\n          shapes: [],\n          lastSelectedShape: void 0\n        };\n      }\n    }\n  },\n  data() {\n    return {\n      activeShape: void 0,\n      strokeSize: 1,\n      currentPointer: {\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 0,\n          end: 0\n        }\n      },\n      currentTarget: void 0,\n      hoveredShapeId: void 0,\n      isBold: !1,\n      isBulletTextMode: !1,\n      isDash: !1,\n      isDeleteMode: !1,\n      isDrawing: !1,\n      isDrawingNewShape: !0,\n      isDrawMode: !1,\n      isItalic: !1,\n      isMouseDown: !1,\n      isMoveMode: !1,\n      isPrinting: !1,\n      isResizeMode: !1,\n      isSelectMode: !1,\n      isSummaryOpen: !1,\n      isTextMode: !1,\n      isUnderline: !1,\n      isWriting: !1,\n      lastSelectedShape: this.dataset.lastSelectedShape,\n      pointerDownId: -1,\n      pointerPosition: {\n        x: 0,\n        y: 0\n      },\n      preventEdit: !0,\n      selectedGroup: [],\n      shapes: this.dataset.shapes ? this.dataset.shapes : [],\n      shapesOrder: [],\n      step: Math.round(Math.random()) * 1e5,\n      svgHeight: 1e3,\n      svgWidth: 1e3,\n      options: {\n        arrow: {\n          color: \"grey\",\n          filled: !0\n        },\n        circle: {\n          color: \"grey\",\n          filled: !1,\n          radius: 3,\n          strokeWidth: 2\n        },\n        rect: {\n          color: \"grey\",\n          filled: !1,\n          strokeWidth: 2,\n          height: 12,\n          width: 12\n        }\n      },\n      selectedColor: \"#000000\",\n      showCaret: !1,\n      sizeRatio: 1,\n      slottedSvg: void 0,\n      sourceWidth: 1,\n      sourceHeight: 1,\n      textAlign: \"start\",\n      textFont: 20,\n      transparency: 100,\n      transparencyCodes: v\n    };\n  },\n  watch: {\n    shapes: {\n      handler(t) {\n        t.length === 0 && (this.lastSelectedShape = void 0);\n      }\n    }\n  },\n  computed: {\n    FINAL_CONFIG() {\n      const t = w().vue_ui_annotator;\n      if (!Object.keys(this.config || {}).length)\n        return t;\n      const s = this.treeShake({\n        defaultConfig: t,\n        userConfig: this.config\n      });\n      return this.convertConfigColors(s);\n    },\n    canSelect() {\n      return this.shapes.filter((t) => ![\"line\", \"group\"].includes(t.type)).length > 1;\n    },\n    colorTransparency() {\n      return this.transparencyCodes[this.transparency > 98 ? 98 : this.transparency];\n    },\n    cursorClass() {\n      switch (!0) {\n        case this.isDeleteMode:\n          return \"default\";\n        case this.isMoveMode:\n          return \"move\";\n        case this.isTextMode:\n          return \"text\";\n        case this.isResizeMode:\n          return \"se-resize\";\n        default:\n          return \"\";\n      }\n    },\n    records() {\n      return this.shapes;\n    },\n    userShapes() {\n      return this.records.map((t) => {\n        switch (!0) {\n          case (t && t.type === \"arrow\"):\n            const s = t.strokeWidth > 3 ? 5 : 10, o = t.strokeWidth > 3 ? 2.5 : 5;\n            return `\n                        <defs>\n                        <marker \n                            id=\"${t.id}\" \n                            markerWidth=\"${s}\" \n                            markerHeight=\"${s}\" \n                            refX=\"0\" \n                            refY=\"${o}\" \n                            orient=\"auto\"\n                        >\n                            <polygon \n                            points=\"0 0,${s} ${o}, 0 ${s}\" \n                            fill=\"${t.color}\"\n                            />\n                        </marker>\n                        </defs>\n                        ${this.includeSelectionIndicator(t)}\n                        <g id=\"${t.id}\">\n                            <path \n                            style=\"stroke-linecap: round !important; ${t.isDash ? `stroke-dasharray: ${t.strokeWidth * 3}` : \"\"}\" \n                            stroke=\"${t.color}\" \n                            id=\"${t.id}\" \n                            d=\"M${t.x},${t.y} ${t.endX},${t.endY}\" \n                            stroke-width=\"${t.strokeWidth}\" \n                            marker-end=\"url(#${t.id})\"\n                            />\n                        </g>\n                        <g id=\"${t.id}\">\n                        <rect \n                            id=\"${t.id}\"\n                            x=\"${t.x - 10}\"\n                            y=\"${t.y - 10}\"\n                            height=\"20\"\n                            width=\"20\"\n                            fill=\"rgba(0,0,0,0.3)\"\n                            style=\"display:${this.isResizeMode || this.isMoveMode ? \"initial\" : \"none\"}; rx:1 !important; ry:1 !important;\"\n                        />\n                        </g>\n                        ${this.includeDeleteButton(t)}\n                        </g>\n                        `;\n          case (t && t.type === \"circle\"):\n            return `\n                            <g id=\"${t.id}\">\n                                ${this.includeSelectionIndicator(t)}\n                                <circle \n                                id=\"${t.id}\" \n                                cx=\"${t.x}\" \n                                cy=\"${t.y}\" \n                                r=\"${t.circleRadius ? t.circleRadius : Number.MIN_VALUE}\"\n                                fill=\"${t.isFilled ? t.color + t.alpha : \"rgba(255,255,255,0.001)\"}\" \n                                stroke=\"${t.color + t.alpha}\" \n                                stroke-width=\"${t.strokeWidth}\"\n                                style=\"${t.isDash ? `stroke-dasharray: ${t.strokeWidth * 3}` : \"\"}\"\n                                >\n                                </circle>\n                            </g>\n                            \n                            ${this.includeDeleteButton(t)}`;\n          case (t && t.type === \"group\"):\n            return `<g id=\"${t.id}\">\n                            <rect\n                                id=\"${this.isResizeMode ? \"\" : t.id}\"\n                                x=\"${t.x}\"\n                                y=\"${t.y}\"\n                                fill=\"transparent\"\n                                height=\"${t.rectHeight}\"\n                                width=\"${t.rectWidth}\"\n                                stroke=\"grey\"\n                                stroke-width=\"1\"\n                                style=\"rx:1 !important; ry:1 !important; ${t.isDash ? `stroke-dasharray: ${t.strokeWidth * 3}` : \"\"}; display:${this.isSelectMode || this.isDeleteMode || this.hoveredShapeId && this.hoveredShapeId === t.id ? \"initial\" : \"none\"};\"\n                            />\n                <g id=\"${t.id}\">\n                ${t.content ? t.content : \"\"}\n                </g>\n                            ${this.includeDeleteButton(t)}\n                            </g> `;\n          case (t && t.type === \"rect\"):\n            return `<g id=\"${t.id}\">\n                            ${this.includeSelectionIndicator(t)}\n                            <rect\n                                id=\"${this.isResizeMode ? \"\" : t.id}\"\n                                x=\"${t.x}\"\n                                y=\"${t.y}\"\n                                fill=\"${t.isFilled ? t.color + t.alpha : \"rgba(255,255,255,0.001)\"}\"\n                                height=\"${t.rectHeight}\"\n                                width=\"${t.rectWidth}\"\n                                stroke=\"${t.color + t.alpha}\"\n                                stroke-width=\"${t.strokeWidth}\"\n                                style=\"rx:1 !important; ry:1 !important; ${t.isDash ? `stroke-dasharray: ${t.strokeWidth * 3}` : \"\"}\"\n                            />\n                            <rect id=\"${t.id}\"\n                                x=\"${t.x + t.rectWidth}\"\n                                y=\"${t.y + t.rectHeight}\"\n                                height=\"20\"\n                                width=\"20\"\n                                fill=\"rgba(0,0,0,0.3)\"\n                                style=\"display:${this.isResizeMode ? \"initial\" : \"none\"}; rx:1 !important; ry:1 !important;\"\n                            />\n                            ${this.includeDeleteButton(t)}\n                            </g> `;\n          case (t && t.type === \"line\"):\n            return `\n                    <g id=\"${t.id}\">\n                        <path \n                        id=\"${t.id}\" \n                        d=\"M${t.path ? t.path : \"\"}\" \n                        style=\"stroke:${t.color + t.alpha} !important; fill:none; stroke-width:${t.strokeWidth} !important; stroke-linecap: round !important; stroke-linejoin: round !important;\"        \n                        />\n                ${this.includeDeleteButton(t)}\n                    </g>\n                    `;\n          case (t && t.type === \"text\"):\n            const h = t.textContent.split(\"‎\"), i = [];\n            for (let e = 0; e < h.length; e += 1)\n              i.push(`\n            ${t.isBulletTextMode ? `<tspan x=\"${t.x - t.fontSize}\" y=\"${t.y + t.fontSize * e}\" id=\"${t.id}\" font-size=\"${t.fontSize / 2}\">⬤</tspan>` : \"\"}\n                    <tspan id=\"${t.id}\" x=\"${t.x}\" y=\"${t.y + t.fontSize * e}\">\n                        ${h[e]}\n                    </tspan>`);\n            return `\n                            ${this.includeSelectionIndicator(t)}\n                            ${this.computeTextElement(\n              t,\n              i,\n              t.isBulletTextMode\n            )}\n                            `;\n        }\n      });\n    }\n  },\n  mounted() {\n    const t = this.$refs.drawSvgContainer;\n    let s = !1;\n    this.walkTheDOM(t, (i) => {\n      if (!s && [\"DIV\", \"svg\", \"section\", \"canvas\"].includes(i.tagName)) {\n        this.slottedSvg = i, s = !0;\n        return;\n      }\n    });\n    const o = this.slottedSvg.getBoundingClientRect();\n    this.sizeRatio = o.height / o.width, this.svgWidth = 1e3, this.svgHeight = this.sizeRatio * 1e3, this.sourceWidth = o.width, this.sourceHeight = o.height, new ResizeObserver((i) => {\n      i.forEach((e) => {\n        this.sourceWidth = e.contentRect.width, this.sourceHeight = e.contentRect.height, this.sizeRatio = e.contentRect.height / e.contentRect.width, this.svgHeight = this.sizeRatio * 1e3;\n      });\n    }).observe(this.slottedSvg), window.addEventListener(\"keydown\", (i) => {\n      this.write(i);\n    });\n  },\n  destroyed() {\n    window.removeEventListener(\"keydown\", (t) => {\n      this.write(t);\n    });\n  },\n  methods: {\n    treeShake: A,\n    convertConfigColors: M,\n    bringShapeTo(t) {\n      const s = this.shapes.find(\n        (o) => o.id === this.lastSelectedShape.id\n      );\n      switch (!0) {\n        case t === \"front\":\n          this.shapes = this.shapes.filter((o) => o.id !== s.id), this.shapes.push(s);\n          break;\n        case t === \"back\":\n          this.shapes = this.shapes.filter((o) => o.id !== s.id), this.shapes = [s, ...this.shapes];\n          break;\n        default:\n          return;\n      }\n    },\n    clickSvg(t) {\n      if (this.isDeleteMode)\n        return;\n      this.deleteEmptyTextElement(), this.isTextMode ? (this.isWriting = !0, this.showCaret = !0) : (this.isWriting = !1, this.showCaret = !1, this.isTextMode = !1);\n      let s = `text_${Math.random() * 1e4}_${Math.random() * 99999}`;\n      if (this.isWriting) {\n        this.shapes.push({\n          id: s,\n          type: \"text\",\n          lines: 0,\n          x: this.pointerPosition.x,\n          y: this.pointerPosition.y,\n          textContent: \"\",\n          fontSize: this.copy(this.textFont),\n          textAlign: this.copy(this.textAlign),\n          isBold: this.copy(this.isBold),\n          isItalic: this.copy(this.isItalic),\n          isUnderline: this.copy(this.isUnderline),\n          color: this.copy(this.selectedColor),\n          isBulletTextMode: this.copy(this.isBulletTextMode)\n        }), this.currentTarget = this.shapes.at(-1), this.lastSelectedShape = this.shapes.at(-1);\n        return;\n      }\n      const o = () => {\n        this.isDash = this.shapes.find((i) => i.id === t.target.id).isDash;\n      }, h = () => {\n        this.strokeSize = this.shapes.find(\n          (i) => i.id === t.target.id\n        ).strokeWidth;\n      };\n      if (this.isSelectMode = !1, t.target.id.includes(\"arrow\")) {\n        this.activeShape = \"arrow\", o(), h();\n        return;\n      }\n      if (t.target.id.includes(\"circle\")) {\n        this.activeShape = \"circle\", this.options.circle.filled = this.shapes.find(\n          (i) => i.id === t.target.id\n        ).isFilled, o(), h();\n        return;\n      }\n      if (t.target.id.includes(\"rect\")) {\n        this.activeShape = \"rect\", this.options.rect.filled = this.shapes.find(\n          (i) => i.id === t.target.id\n        ).isFilled, o(), h();\n        return;\n      }\n      if (t.target.id.includes(\"line\")) {\n        this.activeShape = \"line\", h();\n        return;\n      }\n      if (t.target.id.includes(\"text\")) {\n        this.isTextMode = !0, this.isWriting = !0, this.showCaret = !0;\n        const i = this.shapes.find((e) => e.id === t.target.id);\n        i && i.textAlign && (this.textAlign = this.shapes.find(\n          (e) => e.id === t.target.id\n        ).textAlign), i && (this.isBulletTextMode = this.shapes.find(\n          (e) => e.id === t.target.id\n        ).isBulletTextMode);\n        return;\n      }\n    },\n    copyPaste() {\n      const t = {\n        ...this.lastSelectedShape,\n        id: `${this.lastSelectedShape.id}_copy`,\n        x: this.lastSelectedShape.x - 100 < 0 ? 1 : this.lastSelectedShape.x - 100,\n        y: this.lastSelectedShape.y - 100 < 0 ? 1 : this.lastSelectedShape.y - 100\n      };\n      this.shapes.push(t);\n    },\n    includeDeleteButton(t, s = !1) {\n      switch (!0) {\n        case t.type === \"circle\":\n          return `\n                    <g id=\"${t.id}\" style=\"display:${this.isDeleteMode ? \"initial\" : \"none\"};\">\n                        <circle id=\"${t.id}\" cx=\"${t.x}\" cy=\"${t.y}\" r=\"12\" fill=\"red\"/>\n                        <line stroke=\"white\" stroke-width=\"2\" id=\"${t.id}\" x1=\"${t.x - 4}\" y1=\"${t.y - 4}\" x2=\"${t.x + 4}\" y2=\"${t.y + 4}\"/>\n                        <line stroke=\"white\" stroke-width=\"2\" id=\"${t.id}\" x1=\"${t.x + 4}\" y1=\"${t.y - 4}\" x2=\"${t.x - 4}\" y2=\"${t.y + 4}\"/>\n                    </g>\n                `;\n        case t.type === \"text\":\n          let o, h = [-8, -12, -4, -12, -4];\n          switch (!0) {\n            case t.textAlign === \"start\":\n              s ? o = [-20, -24, -16, -16, -24] : o = [-16, -20, -12, -12, -20];\n              break;\n            case t.textAlign === \"middle\":\n              o = [0, -4, 4, 4, -4], h = [-32, -36, -28, -36, -28];\n              break;\n            case t.textAlign === \"end\":\n              o = [16, 20, 12, 12, 20];\n              break;\n            default:\n              o = [0, 0, 0];\n              break;\n          }\n          return `\n                    <g id=\"${t.id}\" style=\"display:${this.isDeleteMode ? \"initial\" : \"none\"};\">\n                        <circle id=\"${t.id}\" cx=\"${t.x + o[0]}\" cy=\"${t.y + h[0]}\" r=\"12\" fill=\"red\"/>\n                        <line stroke=\"white\" stroke-width=\"2\" id=\"${t.id}\" x1=\"${t.x + o[1]}\" y1=\"${t.y + h[1]}\" x2=\"${t.x + o[2]}\" y2=\"${t.y + h[2]}\"/>\n                        <line stroke=\"white\" stroke-width=\"2\" id=\"${t.id}\" x1=\"${t.x + o[3]}\" y1=\"${t.y + h[3]}\" x2=\"${t.x + o[4]}\" y2=\"${t.y + h[4]}\"/>\n                    </g>\n                `;\n        default:\n          return `\n                    <g id=\"${t.id}\" style=\"display:${this.isDeleteMode ? \"initial\" : \"none\"};\">\n                        <circle id=\"${t.id}\" cx=\"${t.x - 4}\" cy=\"${t.y - 4}\" r=\"12\" fill=\"red\"/>\n                        <line stroke=\"white\" stroke-width=\"2\" id=\"${t.id}\" x1=\"${t.x - 8}\" y1=\"${t.y - 8}\" x2=\"${t.x}\" y2=\"${t.y}\"/>\n                        <line stroke=\"white\" stroke-width=\"2\" id=\"${t.id}\" x1=\"${t.x}\" y1=\"${t.y - 8}\" x2=\"${t.x - 8}\" y2=\"${t.y}\"/>\n                    </g>\n                `;\n      }\n    },\n    includeSelectionIndicator(t) {\n      if (t)\n        switch (!0) {\n          case t.type === \"rect\":\n            return `\n                    <rect\n                    id=\"${t.id}\" \n                    style=\"stroke-dasharray: 10; display:${this.hoveredShapeId && this.hoveredShapeId === t.id ? \"initial\" : \"none\"}\"\n                    x=\"${t.x - 20}\"\n                    y=\"${t.y - 20}\"\n                    height=\"${t.rectHeight + 40}\"\n                    width=\"${t.rectWidth + 40}\"\n                    fill=\"transparent\"\n                    stroke=\"grey\"\n                    />\n                `;\n          case t.type === \"circle\":\n            return `\n                    <rect\n                    id=\"${t.id}\" \n                    style=\"stroke-dasharray: 10; display:${this.hoveredShapeId && this.hoveredShapeId === t.id ? \"initial\" : \"none\"}\"\n                    x=\"${t.x - t.circleRadius - 20}\"\n                    y=\"${t.y - t.circleRadius - 20}\"\n                    height=\"${t.circleRadius * 2 + 40}\"\n                    width=\"${t.circleRadius * 2 + 40}\"\n                    fill=\"transparent\"\n                    stroke=\"grey\"\n                    />\n                `;\n          case t.type === \"arrow\":\n            const s = t.endX - t.x > 0, o = t.endY - t.y > 0;\n            return `\n                    <rect\n                    id=\"${t.id}\" \n                    style=\"stroke-dasharray: 10; display:${this.hoveredShapeId && this.hoveredShapeId === t.id ? \"initial\" : \"none\"}\"\n                    x=\"${s ? t.x - 20 : t.endX - 20}\"\n                    y=\"${o ? t.y - 20 : t.endY - 20}\"\n                    height=\"${o ? t.endY - t.y + 40 : t.y - t.endY + 40}\"\n                    width=\"${s ? t.endX - t.x + 40 : t.x - t.endX + 40}\"\n                    fill=\"transparent\"\n                    stroke=\"grey\"\n                    />\n                `;\n          case t.type === \"text\":\n            const h = Array.from(document.getElementsByTagName(\"text\")).find(\n              (I) => I.id === t.id\n            );\n            if (!h)\n              return;\n            const { x: i, y: e, width: l, height: b } = h.getBBox();\n            return `\n                    <rect\n                    id=\"${t.id}\" \n                    style=\"stroke-dasharray: 10; display:${this.hoveredShapeId && this.hoveredShapeId === t.id ? \"initial\" : \"none\"}\"\n                    x=\"${i - 20}\"\n                    y=\"${e - 20}\"\n                    height=\"${b + 40}\"\n                    width=\"${l + 40}\"\n                    fill=\"transparent\"\n                    stroke=\"grey\"\n                    />\n                `;\n          default:\n            return \"\";\n        }\n    },\n    allowEditAndHoverShapes(t) {\n      t.preventDefault(), this.preventEdit = !1, t.target && t.target.id && (this.hoveredShapeId = t.target.id);\n    },\n    setSelectedTextAlignTo(t) {\n      !this.lastSelectedShape || this.lastSelectedShape.type !== \"text\" || (this.lastSelectedShape.textAlign = t);\n    },\n    undoLastShape() {\n      this.lastSelectedShape = void 0, this.shapes = this.shapes.slice(0, -1);\n    },\n    write(t) {\n      if (this.preventEdit)\n        return;\n      t.preventDefault();\n      const s = t.keyCode;\n      if (!this.isWriting)\n        return;\n      this.showCaret = !0;\n      let o;\n      if (this.lastSelectedShape.type === \"text\" ? o = this.shapes.find((i) => i.id === this.lastSelectedShape.id) : o = this.shapes.at(-1), this.currentTarget = o, o.type !== \"text\")\n        return;\n      this.currentTarget.isBold = this.copy(this.isBold), this.currentTarget.isItalic = this.copy(this.isItalic), this.currentTarget.isUnderline = this.copy(this.isUnderline);\n      const h = [\n        16,\n        17,\n        18,\n        20,\n        27,\n        33,\n        34,\n        35,\n        36,\n        37,\n        38,\n        39,\n        40,\n        45,\n        91,\n        112,\n        113,\n        114,\n        115,\n        116,\n        117,\n        118,\n        119,\n        120,\n        121,\n        122,\n        123,\n        221,\n        255,\n        \"Unidentified\"\n      ];\n      switch (!0) {\n        case s === 8:\n          o.textContent = o.textContent.slice(0, -1);\n          break;\n        case s === 9:\n          o.textContent += \"&nbsp; &nbsp; &nbsp; &nbsp;\";\n          break;\n        case s === 13:\n          o.lines += 1, o.textContent += \"‎\";\n          return;\n        case h.includes(s):\n          return;\n        default:\n          o.textContent += t.key;\n      }\n    },\n    groupShapes() {\n      if (this.selectedGroup = [], this.activeShape !== \"group\") {\n        this.isSelectMode = !1, this.shapes = this.shapes.filter((s) => s.type !== \"group\");\n        return;\n      }\n      const t = this.shapes.at(-1);\n      if (this.shapes.forEach((s) => {\n        if (s.type !== \"group\")\n          switch (!0) {\n            case s.type === \"arrow\":\n              const o = s.x <= s.endX && s.y <= s.endY && t.x <= s.x && t.y <= s.y && t.x + t.rectWidth >= s.endX && t.y + t.rectHeight >= s.endY, h = s.endY < s.y && s.x < s.endX && t.x <= s.x && t.y <= s.y && t.x + t.rectWidth >= s.endX && t.y + t.rectHeight >= s.y, i = s.x > s.endX && s.y < s.endY && t.x <= s.endX && t.y <= s.endY && t.x + t.rectWidth >= s.x && t.y + t.rectHeight >= s.endY, e = s.x > s.endX && s.y > s.endY && t.x <= s.endX && t.y <= s.endY && t.x + t.rectWidth >= s.x && t.y + t.rectHeight >= s.y;\n              (o || h || i || e) && this.selectedGroup.push(s);\n              break;\n            case s.type === \"circle\":\n              t.x <= s.x + s.circleRadius && t.y <= s.y + s.circleRadius && s.x + s.circleRadius <= t.x + t.rectWidth && s.y + s.circleRadius <= t.y + t.rectHeight && this.selectedGroup.push(s);\n              break;\n            case s.type === \"rect\":\n              t.x <= s.x && t.y <= s.y && s.x <= t.x + t.rectWidth && s.y <= t.y + t.rectHeight && s.x + s.rectWidth <= t.x + t.rectWidth && s.y + s.rectHeight <= t.y + t.rectHeight && s.rectWidth <= t.rectWidth && s.rectHeight <= t.rectHeight && this.selectedGroup.push(s);\n              break;\n            case s.type === \"text\":\n              t.x <= s.x && t.y <= s.y && this.selectedGroup.push(s);\n              break;\n          }\n      }), this.selectedGroup = this.selectedGroup.map((s) => ({\n        ...s,\n        id: t.id,\n        oldId: s.id,\n        diffX: s.x - t.x,\n        diffY: s.y - t.y,\n        diffEndX: s.endX ? s.endX - t.x : 0,\n        diffEndY: s.endY ? s.endY - t.y : 0\n      })), t.source = this.selectedGroup, this.selectedGroup.length > 1) {\n        const s = this.copy(this.selectedGroup).map((o) => o.oldId);\n        this.shapes = this.shapes.filter((o) => !s.includes(o.id)), this.selectedGroup.forEach((o) => {\n          switch (!0) {\n            case o.type === \"circle\":\n              t.content += `\n                <circle\n                id=\"${o.id}\"\n                cx=\"${o.x}\"\n                cy=\"${o.y}\"\n                r=\"${o.circleRadius ? o.circleRadius : Number.MIN_VALUE}\"\n                fill=\"${o.isFilled ? o.color + o.alpha : \"rgba(255,255,255,0.001)\"}\"\n                stroke=\"${o.color + o.alpha}\" \n                                stroke-width=\"${o.strokeWidth}\"\n                                style=\"${o.isDash ? `stroke-dasharray: ${o.strokeWidth * 3}` : \"\"}\"\n                                />\n            `;\n              break;\n            case o.type === \"rect\":\n              t.content += `\n                <rect\n                id=\"${this.isResizeMode ? \"\" : o.id}\"\n                x=\"${o.x}\"\n                y=\"${o.y}\"\n                fill=\"${o.isFilled ? o.color + o.alpha : \"rgba(255,255,255,0.001)\"}\"\n                height=\"${o.rectHeight}\"\n                width=\"${o.rectWidth}\"\n                stroke=\"${o.color + o.alpha}\"\n                stroke-width=\"${o.strokeWidth}\"\n                style=\"rx:1 !important; ry:1 !important; ${o.isDash ? `stroke-dasharray: ${o.strokeWidth * 3}` : \"\"}\"\n                            />\n            `;\n              break;\n            case o.type === \"arrow\":\n              const h = o.strokeWidth > 3 ? 5 : 10, i = o.strokeWidth > 3 ? 2.5 : 5, e = Date.now();\n              t.content += `\n                <g id=\"${o.id}\">\n                <defs>\n                    <marker \n                    id=\"${e}\" \n                    markerWidth=\"${h}\" \n                    markerHeight=\"${h}\" \n                    refX=\"0\" \n                    refY=\"${i}\" \n                    orient=\"auto\"\n                    >\n                    <polygon \n                    points=\"0 0,${h} ${i}, 0 ${h}\" \n                    fill=\"${o.color}\"\n                    />\n                    </marker>\n                </defs>\n\n                <path \n                    style=\"stroke-linecap: round !important; ${o.isDash ? `stroke-dasharray: ${o.strokeWidth * 3}` : \"\"}\" \n                    stroke=\"${o.color}\" \n                    id=\"${o.id}\" \n                    d=\"M${o.x},${o.y} ${o.endX},${o.endY}\" \n                    stroke-width=\"${o.strokeWidth}\" \n                    marker-end=\"url(#${e})\"\n                />\n                </g>\n            `;\n              break;\n            case o.type === \"text\":\n              const l = o.textContent.split(\"‎\"), b = [];\n              for (let I = 0; I < l.length; I += 1)\n                b.push(`\n                ${o.isBulletTextMode ? `<tspan x=\"${o.x - o.fontSize}\" y=\"${o.y + o.fontSize * I}\" id=\"${o.id}\" font-size=\"${o.fontSize / 2}\">⬤</tspan>` : \"\"}\n                <tspan id=\"${o.id}\" x=\"${o.x}\" y=\"${o.y + o.fontSize * I}\">\n                    ${l[I]}\n                </tspan>`);\n              t.content += `\n                ${this.computeTextElement(o, b, o.isBulletTextMode)}\n                `;\n              break;\n          }\n        });\n      } else\n        this.shapes = this.shapes.filter((s) => s.id !== t.id);\n    },\n    moveGroup(t) {\n      t.content = \"\", t.x = this.copy(this.pointerPosition.x) - t.rectWidth / 2, t.y = this.copy(this.pointerPosition.y) - t.rectHeight / 2, t.source.forEach((s) => {\n        switch (!0) {\n          case s.type === \"circle\":\n            t.content += `\n                <circle\n                id=\"${s.id}\"\n                cx=\"${this.copy(this.pointerPosition.x) + s.diffX - t.rectWidth / 2}\"\n                cy=\"${this.copy(this.pointerPosition.y) + s.diffY - t.rectHeight / 2}\"\n                r=\"${s.circleRadius ? s.circleRadius : Number.MIN_VALUE}\"\n                fill=\"${s.isFilled ? s.color + s.alpha : \"rgba(255,255,255,0.001)\"}\"\n                stroke=\"${s.color + s.alpha}\" \n                                stroke-width=\"${s.strokeWidth}\"\n                                style=\"${s.isDash ? `stroke-dasharray: ${s.strokeWidth * 3}` : \"\"}\"\n                                />\n            `;\n            break;\n          case s.type === \"rect\":\n            t.content += `\n                <rect\n                id=\"${this.isResizeMode ? \"\" : s.id}\"\n                x=\"${this.copy(this.pointerPosition.x) + s.diffX - t.rectWidth / 2}\"\n                y=\"${this.copy(this.pointerPosition.y) + s.diffY - t.rectHeight / 2}\"\n                fill=\"${s.isFilled ? s.color + s.alpha : \"rgba(255,255,255,0.001)\"}\"\n                height=\"${s.rectHeight}\"\n                width=\"${s.rectWidth}\"\n                stroke=\"${s.color + s.alpha}\"\n                stroke-width=\"${s.strokeWidth}\"\n                style=\"rx:1 !important; ry:1 !important; ${s.isDash ? `stroke-dasharray: ${s.strokeWidth * 3}` : \"\"}\"\n                            />\n            `;\n            break;\n          case s.type === \"arrow\":\n            const o = s.strokeWidth > 3 ? 5 : 10, h = s.strokeWidth > 3 ? 2.5 : 5, i = Date.now();\n            t.content += `\n                <g id=\"${s.id}\">\n                <defs>\n                    <marker \n                    id=\"${i}\" \n                    markerWidth=\"${o}\" \n                    markerHeight=\"${o}\" \n                    refX=\"0\" \n                    refY=\"${h}\" \n                    orient=\"auto\"\n                    >\n                    <polygon \n                    points=\"0 0,${o} ${h}, 0 ${o}\" \n                    fill=\"${s.color}\"\n                    />\n                    </marker>\n                </defs>\n\n                <path \n                    style=\"stroke-linecap: round !important; ${s.isDash ? `stroke-dasharray: ${s.strokeWidth * 3}` : \"\"}\" \n                    stroke=\"${s.color}\" \n                    id=\"${s.id}\" \n                    d=\"M${this.copy(this.pointerPosition.x) + s.diffX - t.rectWidth / 2},${this.copy(this.pointerPosition.y) + s.diffY - t.rectHeight / 2} ${this.copy(this.pointerPosition.x) + s.diffEndX - t.rectWidth / 2},${this.copy(this.pointerPosition.y) + s.diffEndY - t.rectHeight / 2}\" \n                    stroke-width=\"${s.strokeWidth}\" \n                    marker-end=\"url(#${i})\"\n                />\n                </g>\n            `;\n            break;\n          case s.type === \"text\":\n            const e = s.textContent.split(\"‎\"), l = [];\n            for (let b = 0; b < e.length; b += 1)\n              l.push(`\n                ${s.isBulletTextMode ? `<tspan x=\"${this.copy(this.pointerPosition.x) + s.diffX - s.fontSize - t.rectWidth / 2}\" y=\"${this.copy(this.pointerPosition.y) + s.diffY + s.fontSize * b - t.rectHeight / 2}\" id=\"${s.id}\" font-size=\"${s.fontSize / 2}\">⬤</tspan>` : \"\"}\n                <tspan id=\"${s.id}\" x=\"${this.copy(this.pointerPosition.x) + s.diffX - t.rectWidth / 2}\" y=\"${this.copy(this.pointerPosition.y) + s.diffY + s.fontSize * b - t.rectHeight / 2}\">\n                    ${e[b]}\n                </tspan>`);\n            t.content += `\n                ${this.computeTextElement(s, l, s.isBulletTextMode)}\n                `;\n            break;\n        }\n      });\n    },\n    chooseAction(t) {\n      switch (t.preventDefault(), this.isMouseDown = !0, !0) {\n        case this.isDrawMode:\n          this.drawDown();\n          break;\n      }\n    },\n    chooseMove(t) {\n      switch (t.preventDefault(), t.target.localName !== \"svg\" && (this.currentTarget = t.target), !0) {\n        case (this.isMoveMode && this.isMouseDown):\n          this.moveDown();\n          break;\n        case (this.isResizeMode && this.isMouseDown):\n          this.resize();\n          break;\n      }\n    },\n    computeCaretPosition(t) {\n      switch (!0) {\n        case t.textAlign === \"middle\":\n          return `<path stroke=\"black\" stroke-width=\"2\" d=\"M${t.x},${t.y - t.fontSize} ${t.x},${t.y - t.fontSize - 15}\" /> <path stroke=\"black\" stroke-width=\"2\" d=\"M${t.x - 3},${t.y - t.fontSize - 5} ${t.x},${t.y - t.fontSize} ${t.x + 3},${t.y - t.fontSize - 5}\"/>`;\n        case t.textAlign === \"start\":\n          const s = t.isBulletTextMode ? t.fontSize : 0;\n          return `<path d=\"M${t.x - 20 - s},${t.y - t.fontSize / 6} ${t.x - 5 - s},${t.y - t.fontSize / 6}\" stroke=\"black\" stroke-width=\"2\" />\n                        <path  d=\"M${t.x - 10 - s},${t.y - t.fontSize / 3} ${t.x - 5 - s},${t.y - t.fontSize / 6} ${t.x - 10 - s},${t.y}\" stroke=\"black\" stroke-width=\"2\">`;\n        case t.textAlign === \"end\":\n          return `<path d=\"M${t.x + 20},${t.y - t.fontSize / 6} ${t.x + 5},${t.y - t.fontSize / 6}\" stroke=\"black\" stroke-width=\"2\" />\n                        <path d=\"M${t.x + 10},${t.y - t.fontSize / 3} ${t.x + 5},${t.y - t.fontSize / 6} ${t.x + 10},${t.y}\" stroke=\"black\" stroke-width=\"2\">`;\n        default:\n          return \"\";\n      }\n    },\n    computeTextElement(t, s, o = !1) {\n      switch (!0) {\n        case t.textAlign === \"start\":\n          return `\n                <g id=\"${t.id}\">\n                    <rect \n                        id=\"${t.id}\" \n                        style=\"display:${this.lastSelectedShape && this.lastSelectedShape.id === t.id ? \"initial\" : \"none\"};\" \n                        x=\"${t.x}\" \n                        y=\"${t.y - 50}\" \n                        height=\"${t.lines === 0 || t.lines === 1 ? t.fontSize * 4 : t.fontSize * 2 * t.lines}\"\n                        width=\"100\" \n                        fill=\"rgba(0,0,0,0)\"\n                    />\n                    <text\n                    style=\"user-select:none; height:100px;\"\n                    id=\"${t.id}\"\n                    x=\"${t.x}\"\n                    y=\"${t.y}\"\n                    text-anchor=\"${t.textAlign}\"\n                    font-size=\"${t.fontSize}\"\n                    fill=\"${t.color}\"\n                    font-weight=\"${t.isBold ? \"bold\" : \"normal\"}\"\n                    font-style=\"${t.isItalic ? \"italic\" : \"normal\"}\"\n                    text-decoration=\"${t.isUnderline ? \"underline\" : \"none\"}\"\n                    >\n                        ${s.join(\"\")}\n                    </text>\n                    ${this.showCaret && this.lastSelectedShape && this.lastSelectedShape.id === t.id ? this.computeCaretPosition(t) : \"\"}\n                    ${this.includeDeleteButton(t, o)}\n                </g> \n                `;\n        case t.textAlign === \"middle\":\n          return `\n                    <g id=\"${t.id}\">\n                    <rect \n                        id=\"${t.id}\" \n                        style=\"display:${this.lastSelectedShape && this.lastSelectedShape.id === t.id ? \"initial\" : \"none\"};\" \n                        x=\"${t.x - 50}\" \n                        y=\"${t.y - 50}\" \n                        height=\"${t.lines === 0 || t.lines === 1 ? t.fontSize * 4 : t.fontSize * 2 * t.lines}\"\n                        width=\"100\" \n                        fill=\"rgba(0,0,0,0)\"\n                    />\n                    <text\n                    style=\"user-select:none; height:100px;\"\n                    id=\"${t.id}\"\n                    x=\"${t.x}\"\n                    y=\"${t.y}\"\n                    text-anchor=\"${t.textAlign}\"\n                    font-size=\"${t.fontSize}\"\n                    fill=\"${t.color}\"\n                    font-weight=\"${t.isBold ? \"bold\" : \"normal\"}\"\n                    font-style=\"${t.isItalic ? \"italic\" : \"normal\"}\"\n                    text-decoration=\"${t.isUnderline ? \"underline\" : \"none\"}\"\n                    >\n                        ${s.join(\"\")}\n                    </text>\n                    ${this.showCaret && this.lastSelectedShape && this.lastSelectedShape.id === t.id ? this.computeCaretPosition(t) : \"\"}\n                    ${this.includeDeleteButton(t)}\n                    </g>\n                `;\n        case t.textAlign === \"end\":\n          return `\n                <g id=\"${t.id}\">\n                    <rect \n                        id=\"${t.id}\" \n                        style=\"display:${this.lastSelectedShape && this.lastSelectedShape.id === t.id ? \"initial\" : \"none\"};\" \n                        x=\"${t.x - 100}\" \n                        y=\"${t.y - 50}\" \n                        height=\"${t.lines === 0 || t.lines === 1 ? t.fontSize * 4 : t.fontSize * 2 * t.lines}\"\n                        width=\"100\" \n                        fill=\"rgba(0,0,0,0)\"\n                    />\n                    <text\n                    style=\"user-select:none; height:100px;\"\n                    id=\"${t.id}\"\n                    x=\"${t.x}\"\n                    y=\"${t.y}\"\n                    text-anchor=\"${t.textAlign}\"\n                    font-size=\"${t.fontSize}\"\n                    fill=\"${t.color}\"\n                    font-weight=\"${t.isBold ? \"bold\" : \"normal\"}\"\n                    font-style=\"${t.isItalic ? \"italic\" : \"normal\"}\"\n                    text-decoration=\"${t.isUnderline ? \"underline\" : \"none\"}\"\n                    >\n                        ${s.join(\"\")}\n                    </text>\n                    ${this.showCaret && this.lastSelectedShape && this.lastSelectedShape.id === t.id ? this.computeCaretPosition(t) : \"\"}\n                    ${this.includeDeleteButton(t)}\n                </g> \n                `;\n        default:\n          return \"\";\n      }\n    },\n    copy(t) {\n      return JSON.parse(JSON.stringify(t));\n    },\n    clickShape(t) {\n      const s = t.target.id;\n      switch (!0) {\n        case this.isDeleteMode:\n          this.shapes = [...this.shapes].filter((o) => o.id !== s), this.lastSelectedShape = void 0;\n          break;\n        default:\n          this.lastSelectedShape = this.shapes.find((o) => o.id === s);\n          break;\n      }\n    },\n    deleteEmptyTextElement() {\n      !this.lastSelectedShape || !this.lastSelectedShape.id.includes(\"text\") || this.lastSelectedShape.textContent === \"\" && (this.shapes = this.shapes.filter(\n        (t) => t.id !== this.lastSelectedShape.id\n      ), this.lastSelectedShape = this.shapes.at(-1));\n    },\n    drawUp(t = !1) {\n      if (!this.activeShape || !this.isDrawing)\n        return;\n      this.currentPointer.end = {\n        x: this.pointerPosition.x,\n        y: this.pointerPosition.y\n      };\n      let s;\n      this.shapes.length > 0 && this.currentTarget && (s = [...this.shapes].find(\n        (b) => b.id === this.currentTarget.id\n      ));\n      let o, h, i;\n      s && (o = s.x - this.currentPointer.end.x, h = s.y - this.currentPointer.end.y, i = Math.sqrt(o * o + h * h));\n      let e, l;\n      t ? (e = Math.max(this.currentPointer.end.x, s.x), l = Math.min(this.currentPointer.end.x, s.x), Math.max(this.currentPointer.end.y, s.y), Math.min(this.currentPointer.end.y, s.y)) : (e = Math.max(this.currentPointer.end.x, this.currentPointer.start.x), l = Math.min(this.currentPointer.end.x, this.currentPointer.start.x), Math.max(this.currentPointer.end.y, this.currentPointer.start.y), Math.min(this.currentPointer.end.y, this.currentPointer.start.y)), this.$nextTick(() => {\n        switch (!0) {\n          case this.activeShape === \"arrow\":\n            this.shapes.at(-1).endX = this.currentPointer.end.x, this.shapes.at(-1).endY = this.currentPointer.end.y;\n            break;\n          case this.activeShape === \"circle\":\n            const b = 20;\n            this.shapes.at(-1).circleRadius = this.isDrawingNewShape ? this.copy(e - l) + b : i + b;\n            break;\n          case this.activeShape === \"line\":\n            this.shapes.at(\n              -1\n            ).path += ` ${this.pointerPosition.x} ${this.pointerPosition.y} `;\n            break;\n          case [\"rect\", \"group\"].includes(this.activeShape):\n            const I = 20;\n            this.shapes.at(-1).rectWidth = this.copy(this.currentPointer.end.x - this.shapes.at(-1).x) > 0 ? this.copy(this.currentPointer.end.x - this.shapes.at(-1).x) : I, this.shapes.at(-1).rectHeight = this.copy(this.currentPointer.end.y - this.shapes.at(-1).y) > 0 ? this.copy(this.currentPointer.end.y - this.shapes.at(-1).y) : I;\n        }\n      });\n    },\n    drawDown() {\n      if (this.isDrawing = !0, !this.activeShape && !this.isSelectMode || !this.isDrawing)\n        return;\n      this.isDrawingNewShape = !0, this.currentPointer.start = {\n        x: this.pointerPosition.x,\n        y: this.pointerPosition.y\n      };\n      let t = `${this.isSelectMode ? \"group\" : this.activeShape}_${Math.random() * 1e4}_${Date.now()}`;\n      switch (!0) {\n        case this.activeShape === \"arrow\":\n          this.shapes.push({\n            id: t,\n            x: this.pointerPosition.x,\n            y: this.pointerPosition.y,\n            endX: this.pointerPosition.x,\n            endY: this.pointerPosition.y,\n            type: this.activeShape,\n            color: this.copy(this.selectedColor),\n            strokeWidth: this.copy(Math.abs(this.strokeSize)),\n            isDash: this.copy(this.isDash)\n          }), this.lastSelectedShape = this.shapes.at(-1);\n          break;\n        case this.activeShape === \"circle\":\n          this.shapes.push({\n            alpha: this.options.circle.filled ? this.colorTransparency : \"\",\n            id: t,\n            color: this.copy(this.selectedColor),\n            isFilled: this.copy(this.options.circle.filled),\n            circleRadius: this.copy(this.options.circle.radius),\n            circleStrokeWidth: this.copy(this.options.circle.strokeWidth),\n            type: this.activeShape,\n            x: this.pointerPosition.x,\n            y: this.pointerPosition.y,\n            strokeWidth: this.copy(Math.abs(this.strokeSize)),\n            isDash: this.copy(this.isDash)\n          }), this.lastSelectedShape = this.shapes.at(-1);\n          break;\n        case this.activeShape === \"line\":\n          this.shapes.push({\n            alpha: this.copy(this.colorTransparency),\n            id: t,\n            x: this.pointerPosition.x,\n            y: this.pointerPosition.y,\n            type: this.activeShape,\n            color: this.copy(this.selectedColor),\n            strokeWidth: this.copy(Math.abs(this.strokeSize)),\n            isDash: this.copy(this.isDash),\n            path: `${this.pointerPosition.x} ${this.pointerPosition.y}`\n          }), this.lastSelectedShape = this.shapes.at(-1);\n          break;\n        case this.activeShape === \"rect\":\n          this.shapes.push({\n            alpha: this.options.rect.filled ? this.colorTransparency : \"\",\n            id: t,\n            color: this.copy(this.selectedColor),\n            isFilled: this.copy(this.options.rect.filled),\n            rectStrokeWidth: this.copy(this.options.rect.strokeWidth),\n            rectHeight: this.copy(this.options.rect.height),\n            rectWidth: this.copy(this.options.rect.width),\n            type: this.activeShape,\n            x: this.pointerPosition.x,\n            y: this.pointerPosition.y,\n            strokeWidth: this.copy(Math.abs(this.strokeSize)),\n            isDash: this.copy(this.isDash)\n          }), this.lastSelectedShape = this.shapes.at(-1);\n          break;\n        case this.activeShape === \"group\":\n          this.shapes.push({\n            alpha: 1,\n            id: `group_${Math.random() * 1e4}_${Date.now()}`,\n            x: this.pointerPosition.x,\n            y: this.pointerPosition.y,\n            isFilled: !1,\n            rectHeight: this.copy(this.options.rect.height),\n            rectWidth: this.copy(this.options.rect.width),\n            rectStrokeWidth: 1,\n            type: \"group\",\n            color: \"grey\",\n            strokeWidth: 1,\n            isDash: !0,\n            content: \"\"\n          });\n          break;\n      }\n      if ((this.pointerDownId !== -1 || !this.isDrawing) && (clearInterval(this.pointerDownId), this.pointerDownId = -1), this.pointerDownId === -1 && this.isDrawing) {\n        this.pointerDownId = setInterval(this.drawUp, 1);\n        return;\n      }\n    },\n    move(t) {\n      if (!(!t || !t.id || t.type === \"line\"))\n        switch (this.lastSelectedShape = t, !0) {\n          case t.type === \"arrow\":\n            t.x = this.copy(this.pointerPosition.x), t.y = this.copy(this.pointerPosition.y);\n            break;\n          case t.type === \"circle\":\n            t.x = this.copy(this.pointerPosition.x), t.y = this.copy(this.pointerPosition.y);\n            break;\n          case t.type === \"group\":\n            this.moveGroup(t);\n            break;\n          case t.type === \"rect\":\n            t.x = this.copy(this.pointerPosition.x - t.rectWidth / 2), t.y = this.copy(this.pointerPosition.y - t.rectHeight / 2);\n            break;\n          case t.type === \"text\":\n            const s = Array.from(document.getElementsByTagName(\"text\")).find(\n              (l) => l.id === t.id\n            );\n            if (!s)\n              return;\n            const { x: o, y: h, width: i, height: e } = s.getBBox();\n            t.textAlign === \"start\" && (t.x = this.copy(this.pointerPosition.x - i / 2)), t.textAlign === \"middle\" && (t.x = this.copy(this.pointerPosition.x)), t.textAlign === \"end\" && (t.x = this.copy(this.pointerPosition.x + i / 2)), t.lines > 1 ? t.y = this.copy(this.pointerPosition.y - e / 3) : t.y = this.copy(this.pointerPosition.y + t.fontSize / 2);\n            break;\n        }\n    },\n    moveDown() {\n      if (!this.currentTarget || !this.currentTarget.id)\n        return;\n      const t = this.currentTarget.id, s = this.shapes.find((o) => o.id === t);\n      this.shapes = this.shapes.filter((o) => o.id !== t), this.shapes.push(s), this.pointerDownId === -1 && t && this.move(s);\n    },\n    print() {\n      this.isPrinting = !0, this.isDeleteMode = !1, this.isMoveMode = !1, this.isResizeMode = !1, this.isTextMode = !1, this.isWriting = !1, this.isSelectMode = !1, this.activeShape = void 0, this.showCaret = !1, this.$nextTick(() => {\n        const t = this.$refs.drawSvgContainer, s = {\n          height: 851.89,\n          width: 595.28\n        };\n        this.walkTheDOM(t, (o) => {\n          o && o.nodeType === 1 && (o.setAttribute(\"font-family\", \"Helvetica\"), o.style.fontFamily = \"Helvetica\", o.replaceWith(o));\n        }), p(t).then((o) => {\n          const h = o.width, i = o.height, e = h / s.width * s.height;\n          let l = i, b = 0;\n          const I = s.width, S = 582.28 / h * i, k = o.toDataURL(\"image/png\", 1), x = new _(\"\", \"pt\", \"a4\");\n          if (l < e)\n            x.addImage(k, \"PNG\", 0, 0, I, S, \"\", \"FAST\");\n          else\n            for (; l > 0; )\n              x.addImage(\n                k,\n                \"PNG\",\n                0,\n                b,\n                I,\n                S,\n                \"\",\n                \"FAST\"\n              ), l -= e, b -= s.height - 24, l > 0 && x.addPage();\n          x.save(`${(/* @__PURE__ */ new Date()).toLocaleDateString()}_annotations.pdf`);\n        }).finally(() => {\n          this.isPrinting = !1, this.walkTheDOM(t, (o) => {\n            o && o.nodeType === 1 && (o.setAttribute(\"font-family\", this.FINAL_CONFIG.style.fontFamily), o.style.fontFamily = this.FINAL_CONFIG.style.fontFamily, o.replaceWith(o));\n          });\n        });\n      });\n    },\n    resetDraw() {\n      this.isDrawing = !1, this.isMouseDown = !1, this.pointerDownId = -1, this.isSelectMode && this.groupShapes(), clearInterval(this.pointerDownId);\n    },\n    resize() {\n      this.isDrawingNewShape = !1;\n      const t = this.currentTarget.id;\n      if (!t)\n        return;\n      this.isDrawing = !0;\n      const s = this.shapes.find((o) => o.id === t);\n      this.activeShape = s.type, this.shapes = this.shapes.filter((o) => o.id !== t), this.shapes.push(s), this.drawUp(!0);\n    },\n    setFillOfSelectedRect() {\n      !this.lastSelectedShape || !this.lastSelectedShape.id.includes(\"rect\") || (this.lastSelectedShape.isFilled = !this.lastSelectedShape.isFilled);\n    },\n    setFillOfSelectedCircle() {\n      !this.lastSelectedShape || !this.lastSelectedShape.id.includes(\"circle\") || (this.lastSelectedShape.isFilled = !this.lastSelectedShape.isFilled);\n    },\n    setColorOfSelectedShape() {\n      this.lastSelectedShape && (this.lastSelectedShape.color = this.copy(this.selectedColor), ![\"arrow\", \"text\"].includes(this.lastSelectedShape.id) && (this.lastSelectedShape.alpha = this.copy(this.colorTransparency)));\n    },\n    setSelectedShapeToDash() {\n      !this.lastSelectedShape || this.lastSelectedShape.type === \"text\" || (this.lastSelectedShape.isDash = this.copy(this.isDash));\n    },\n    setTransparencyOfSelectedShape() {\n      !this.lastSelectedShape || [\"arrow\", \"text\"].includes(this.lastSelectedShape.id) || (this.lastSelectedShape.alpha = this.copy(this.colorTransparency));\n    },\n    setStrokeWidthOfSelectedShape() {\n      !this.lastSelectedShape || ![\"arrow\", \"circle\", \"rect\", \"line\"].includes(this.lastSelectedShape.type) || (this.lastSelectedShape.strokeWidth = this.copy(Math.abs(this.strokeSize)));\n    },\n    setCurrentStyleOfSelectedText() {\n      !this.lastSelectedShape || this.lastSelectedShape.type !== \"text\" || (this.lastSelectedShape.isBold = this.copy(this.isBold), this.lastSelectedShape.isItalic = this.copy(this.isItalic), this.lastSelectedShape.isUnderline = this.copy(this.isUnderline), this.lastSelectedShape.fontSize = this.copy(this.textFont), this.lastSelectedShape.isBulletTextMode = this.copy(this.isBulletTextMode));\n    },\n    setPointer(t) {\n      t.preventDefault();\n      const o = this.$refs.mainSvg.getBoundingClientRect();\n      let h, i;\n      t.touches && t.touches.length > 0 ? (h = t.touches[0].clientX, i = t.touches[0].clientY) : (h = t.clientX, i = t.clientY), this.pointerPosition.x = (h - o.left) / o.width * this.svgWidth, this.pointerPosition.y = (i - o.top) / o.height * this.svgHeight;\n    },\n    setShapeTo(t) {\n      if (this.showCaret = !1, this.deleteEmptyTextElement(), t === this.activeShape) {\n        this.activeShape = void 0, this.isDrawMode = !1;\n        return;\n      }\n      this.isDrawMode = !0, this.isDeleteMode = !1, this.isMoveMode = !1, this.isResizeMode = !1, this.isTextMode = !1, this.activeShape = t;\n    },\n    toggleSummary() {\n      this.isSummaryOpen = !this.isSummaryOpen, this.isSummaryOpen || (this.isMoveMode = !1, this.isResizeMode = !1, this.isTextMode = !1, this.isWriting = !1, this.activeShape = void 0, this.showCaret = !1, this.isDeleteMode = !1, this.isWriting = !1), this.$emit(\"toggleOpenState\", { isOpen: this.isSummaryOpen });\n    },\n    walkTheDOM(t, s) {\n      for (s(t), t = t.firstChild; t; )\n        this.walkTheDOM(t, s), t = t.nextSibling;\n    },\n    save() {\n      this.$emit(\"saveAnnotations\", {\n        shapes: this.shapes,\n        lastSelectedShape: this.lastSelectedShape\n      });\n    }\n  }\n}, F = (t) => (m(\"data-v-14ebd65f\"), t = t(), T(), t), z = { class: \"vue-ui-annotator\" }, H = { \"data-html2canvas-ignore\": \"\" }, W = {\n  class: \"tool-selection\",\n  style: { \"margin-top\": \"24px\" }\n}, P = [\"disabled\"], B = /* @__PURE__ */ N('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80%\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" data-v-14ebd65f><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" data-v-14ebd65f></path><path d=\"M18 9l3 3l-3 3\" data-v-14ebd65f></path><path d=\"M15 12h6\" data-v-14ebd65f></path><path d=\"M6 9l-3 3l3 3\" data-v-14ebd65f></path><path d=\"M3 12h6\" data-v-14ebd65f></path><path d=\"M9 18l3 3l3 -3\" data-v-14ebd65f></path><path d=\"M12 15v6\" data-v-14ebd65f></path><path d=\"M15 6l-3 -3l-3 3\" data-v-14ebd65f></path><path d=\"M12 3v6\" data-v-14ebd65f></path></svg>', 1), V = [\"disabled\"], E = /* @__PURE__ */ F(() => /* @__PURE__ */ r(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"80%\",\n  viewBox: \"0 0 24 24\",\n  \"stroke-width\": \"2\",\n  stroke: \"currentColor\",\n  fill: \"none\",\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\"\n}, [\n  /* @__PURE__ */ r(\"path\", {\n    stroke: \"none\",\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }),\n  /* @__PURE__ */ r(\"path\", { d: \"M4 11v8a1 1 0 0 0 1 1h8m-9 -14v-1a1 1 0 0 1 1 -1h1m5 0h2m5 0h1a1 1 0 0 1 1 1v1m0 5v2m0 5v1a1 1 0 0 1 -1 1h-1\" }),\n  /* @__PURE__ */ r(\"path\", { d: \"M4 12h7a1 1 0 0 1 1 1v7\" })\n], -1)), X = [\"disabled\"], U = /* @__PURE__ */ N('<svg width=\"80%\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" data-v-14ebd65f><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" data-v-14ebd65f></path><path d=\"M4 7l16 0\" data-v-14ebd65f></path><path d=\"M10 11l0 6\" data-v-14ebd65f></path><path d=\"M14 11l0 6\" data-v-14ebd65f></path><path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" data-v-14ebd65f></path><path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" data-v-14ebd65f></path></svg>', 1), Y = [\"disabled\"], j = {\n  style: { width: \"80%\" },\n  viewBox: \"0 0 24 24\"\n}, Z = /* @__PURE__ */ F(() => /* @__PURE__ */ r(\"path\", {\n  fill: \"currentColor\",\n  d: \"M1,1V5H2V19H1V23H5V22H19V23H23V19H22V5H23V1H19V2H5V1M5,4H19V5H20V19H19V20H5V19H4V5H5M6,6V14H9V18H18V9H14V6M8,8H12V12H8M14,11H16V16H11V14H14\"\n}, null, -1)), J = [\n  Z\n], q = [\"disabled\"], K = {\n  style: { width: \"80%\" },\n  viewBox: \"0 0 24 24\"\n}, Q = /* @__PURE__ */ F(() => /* @__PURE__ */ r(\"path\", {\n  fill: \"currentColor\",\n  d: \"M2,2H11V6H9V4H4V9H6V11H2V2M22,13V22H13V18H15V20H20V15H18V13H22M8,8H16V16H8V8Z\"\n}, null, -1)), $ = [\n  Q\n], tt = [\"disabled\"], et = {\n  style: { width: \"80%\" },\n  viewBox: \"0 0 24 24\"\n}, it = /* @__PURE__ */ F(() => /* @__PURE__ */ r(\"path\", {\n  fill: \"currentColor\",\n  d: \"M2,2H11V11H2V2M9,4H4V9H9V4M22,13V22H13V13H22M15,20H20V15H15V20M16,8V11H13V8H16M11,16H8V13H11V16Z\"\n}, null, -1)), st = [\n  it\n], ot = [\"disabled\"], lt = /* @__PURE__ */ F(() => /* @__PURE__ */ r(\"svg\", {\n  width: \"80%\",\n  viewBox: \"0 0 24 24\",\n  \"stroke-width\": \"2\",\n  stroke: \"currentColor\",\n  fill: \"none\",\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\"\n}, [\n  /* @__PURE__ */ r(\"path\", {\n    stroke: \"none\",\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }),\n  /* @__PURE__ */ r(\"path\", { d: \"M7 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z\" }),\n  /* @__PURE__ */ r(\"path\", { d: \"M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2\" })\n], -1)), rt = [\"disabled\"], dt = /* @__PURE__ */ F(() => /* @__PURE__ */ r(\"svg\", {\n  width: \"80%\",\n  viewBox: \"0 0 24 24\",\n  \"stroke-width\": \"2\",\n  stroke: \"currentColor\",\n  fill: \"none\",\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\"\n}, [\n  /* @__PURE__ */ r(\"path\", {\n    stroke: \"none\",\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }),\n  /* @__PURE__ */ r(\"path\", { d: \"M9 14l-4 -4l4 -4\" }),\n  /* @__PURE__ */ r(\"path\", { d: \"M5 10h11a4 4 0 1 1 0 8h-1\" })\n], -1)), nt = /* @__PURE__ */ N('<svg width=\"80%\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" data-v-14ebd65f><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" data-v-14ebd65f></path><path d=\"M17 17h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-14a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2\" data-v-14ebd65f></path><path d=\"M17 9v-4a2 2 0 0 0 -2 -2h-6a2 2 0 0 0 -2 2v4\" data-v-14ebd65f></path><path d=\"M7 13m0 2a2 2 0 0 1 2 -2h6a2 2 0 0 1 2 2v4a2 2 0 0 1 -2 2h-6a2 2 0 0 1 -2 -2z\" data-v-14ebd65f></path></svg>', 1), ct = /* @__PURE__ */ N('<svg width=\"100%\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" data-v-14ebd65f><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" data-v-14ebd65f></path><path d=\"M6 4h10l4 4v10a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2\" data-v-14ebd65f></path><path d=\"M12 14m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\" data-v-14ebd65f></path><path d=\"M14 4l0 4l-6 0l0 -4\" data-v-14ebd65f></path></svg>', 1), ht = {\n  class: \"tool-selection\",\n  style: { \"margin-top\": \"6px\" }\n}, at = {\n  viewBox: \"0 0 12 12\",\n  style: { width: \"100%\" }\n}, ut = [\"fill\"], yt = {\n  key: 0,\n  class: \"tool-input\"\n}, bt = { for: \"circleFill\" }, It = [\"checked\"], Ft = {\n  viewBox: \"0 0 12 12\",\n  style: { width: \"100%\" }\n}, Nt = [\"fill\"], ft = {\n  key: 1,\n  class: \"tool-input\"\n}, xt = { for: \"rectFill\" }, Ct = [\"checked\"], gt = {\n  viewBox: \"0 0 24 24\",\n  style: { width: \"100%\" }\n}, St = [\"stroke\"], kt = /* @__PURE__ */ F(() => /* @__PURE__ */ r(\"svg\", {\n  width: \"80%\",\n  viewBox: \"0 0 24 24\",\n  \"stroke-width\": \"2\",\n  stroke: \"currentColor\",\n  fill: \"none\",\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\"\n}, [\n  /* @__PURE__ */ r(\"path\", {\n    stroke: \"none\",\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }),\n  /* @__PURE__ */ r(\"path\", { d: \"M3 15c2 3 4 4 7 4s7 -3 7 -7s-3 -7 -6 -7s-5 1.5 -5 4s2 5 6 5s8.408 -2.453 10 -5\" })\n], -1)), pt = { key: 2 }, _t = { style: { display: \"flex\", \"flex-direction\": \"column\", \"align-items\": \"center\", \"justify-content\": \"center\" } }, vt = {\n  for: \"textFont\",\n  style: { \"font-size\": \"0.7em\" }\n}, wt = { key: 3 }, At = { style: { display: \"flex\", \"flex-direction\": \"column\", \"align-items\": \"center\", \"justify-content\": \"center\" } }, Mt = {\n  for: \"dashStyle\",\n  style: { \"font-size\": \"0.7em\" }\n}, Ot = {\n  viewBox: \"0 0 24 24\",\n  height: \"24\",\n  width: \"24\",\n  style: { \"margin-bottom\": \"-5px\", \"margin-top\": \"-10px\" }\n}, Lt = /* @__PURE__ */ F(() => /* @__PURE__ */ r(\"line\", {\n  x1: \"0\",\n  x2: \"24\",\n  y1: \"12\",\n  y2: \"12\",\n  \"stroke-width\": \"2\",\n  stroke: \"black\",\n  \"stroke-dasharray\": \"3\"\n}, null, -1)), Gt = [\n  Lt\n], mt = [\"checked\"], Tt = {\n  style: { width: \"80%\" },\n  viewBox: \"0 0 24 24\",\n  fill: \"currentColor\"\n}, Rt = /* @__PURE__ */ F(() => /* @__PURE__ */ r(\"path\", { d: \"M18.5,4L19.66,8.35L18.7,8.61C18.25,7.74 17.79,6.87 17.26,6.43C16.73,6 16.11,6 15.5,6H13V16.5C13,17 13,17.5 13.33,17.75C13.67,18 14.33,18 15,18V19H9V18C9.67,18 10.33,18 10.67,17.75C11,17.5 11,17 11,16.5V6H8.5C7.89,6 7.27,6 6.74,6.43C6.21,6.87 5.75,7.74 5.3,8.61L4.34,8.35L5.5,4H18.5Z\" }, null, -1)), Dt = [\n  Rt\n], zt = { key: 4 }, Ht = { style: { display: \"flex\", \"flex-direction\": \"column\", \"align-items\": \"center\", \"justify-content\": \"center\" } }, Wt = {\n  for: \"textFont\",\n  style: { \"font-size\": \"0.7em\" }\n}, Pt = { key: 5 }, Bt = /* @__PURE__ */ N('<svg width=\"80%\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" data-v-14ebd65f><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" data-v-14ebd65f></path><path d=\"M4 6l16 0\" data-v-14ebd65f></path><path d=\"M4 12l10 0\" data-v-14ebd65f></path><path d=\"M4 18l14 0\" data-v-14ebd65f></path></svg>', 1), Vt = { key: 6 }, Et = [\"disabled\"], Xt = /* @__PURE__ */ N('<svg width=\"80%\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" data-v-14ebd65f><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" data-v-14ebd65f></path><path d=\"M4 6l16 0\" data-v-14ebd65f></path><path d=\"M8 12l8 0\" data-v-14ebd65f></path><path d=\"M6 18l12 0\" data-v-14ebd65f></path></svg>', 1), Ut = { key: 7 }, Yt = [\"disabled\"], jt = /* @__PURE__ */ N('<svg width=\"80%\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" data-v-14ebd65f><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" data-v-14ebd65f></path><path d=\"M4 6l16 0\" data-v-14ebd65f></path><path d=\"M10 12l10 0\" data-v-14ebd65f></path><path d=\"M6 18l14 0\" data-v-14ebd65f></path></svg>', 1), Zt = { key: 8 }, Jt = /* @__PURE__ */ N('<svg width=\"100%\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" data-v-14ebd65f><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" data-v-14ebd65f></path><path d=\"M9 6l11 0\" data-v-14ebd65f></path><path d=\"M9 12l11 0\" data-v-14ebd65f></path><path d=\"M9 18l11 0\" data-v-14ebd65f></path><path d=\"M5 6l0 .01\" data-v-14ebd65f></path><path d=\"M5 12l0 .01\" data-v-14ebd65f></path><path d=\"M5 18l0 .01\" data-v-14ebd65f></path></svg>', 1), qt = { key: 9 }, Kt = /* @__PURE__ */ F(() => /* @__PURE__ */ r(\"svg\", {\n  width: \"100%\",\n  viewBox: \"0 0 24 24\",\n  \"stroke-width\": \"3\",\n  stroke: \"currentColor\",\n  fill: \"none\",\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\"\n}, [\n  /* @__PURE__ */ r(\"path\", {\n    stroke: \"none\",\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }),\n  /* @__PURE__ */ r(\"path\", { d: \"M7 5h6a3.5 3.5 0 0 1 0 7h-6z\" }),\n  /* @__PURE__ */ r(\"path\", { d: \"M13 12h1a3.5 3.5 0 0 1 0 7h-7v-7\" })\n], -1)), Qt = { key: 10 }, $t = /* @__PURE__ */ N('<svg width=\"100%\" height=\"44\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" data-v-14ebd65f><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" data-v-14ebd65f></path><path d=\"M11 5l6 0\" data-v-14ebd65f></path><path d=\"M7 19l6 0\" data-v-14ebd65f></path><path d=\"M14 5l-4 14\" data-v-14ebd65f></path></svg>', 1), te = { key: 11 }, ee = /* @__PURE__ */ F(() => /* @__PURE__ */ r(\"svg\", {\n  width: \"100%\",\n  viewBox: \"0 0 24 24\",\n  \"stroke-width\": \"2\",\n  stroke: \"currentColor\",\n  fill: \"none\",\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\"\n}, [\n  /* @__PURE__ */ r(\"path\", {\n    stroke: \"none\",\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }),\n  /* @__PURE__ */ r(\"path\", { d: \"M7 5v5a5 5 0 0 0 10 0v-5\" }),\n  /* @__PURE__ */ r(\"path\", { d: \"M5 19h14\" })\n], -1)), ie = {\n  style: { display: \"flex\", \"flex-direction\": \"column\", \"align-items\": \"center\", \"justify-content\": \"center\" },\n  class: \"tooltip\"\n}, se = { style: { display: \"flex\", \"flex-direction\": \"column\", \"align-items\": \"start\", \"justify-content\": \"center\" } }, oe = {\n  for: \"colorTransparency\",\n  style: { \"font-size\": \"0.7em\" }\n}, le = {\n  class: \"annotator annotator__wrapper\",\n  ref: \"drawSvgContainer\",\n  style: { position: \"relative\" }\n}, re = [\"viewBox\", \"width\", \"height\"], de = [\"id\", \"innerHTML\"], ne = [\"height\", \"viewBox\", \"width\"], ce = [\"cx\", \"cy\"];\nfunction he(t, s, o, h, i, e) {\n  return d(), n(\"div\", z, [\n    r(\"div\", H, [\n      r(\"details\", {\n        class: \"vue-ui-annotator-summary\",\n        onToggle: s[36] || (s[36] = (...l) => e.toggleSummary && e.toggleSummary(...l)),\n        style: c(`${i.isSummaryOpen ? \"padding-bottom: 12px\" : \"\"}; background: ${e.FINAL_CONFIG.style.backgroundColor}; color:${e.FINAL_CONFIG.style.color}; ${e.FINAL_CONFIG.style.fixedTools && i.isSummaryOpen ? \"position: fixed; top: 0; left: 50%; transform: translateX(-50%); z-index: 1;\" : \"\"}`)\n      }, [\n        r(\"summary\", null, u(e.FINAL_CONFIG.translations.title), 1),\n        r(\"div\", W, [\n          r(\"button\", {\n            disabled: i.shapes.length === 0,\n            style: c({\n              background: i.isMoveMode ? e.FINAL_CONFIG.style.buttons.controls.selected.backgroundColor : e.FINAL_CONFIG.style.buttons.controls.backgroundColor,\n              border: i.isMoveMode ? e.FINAL_CONFIG.style.buttons.controls.selected.border : e.FINAL_CONFIG.style.buttons.controls.border,\n              color: i.isMoveMode ? e.FINAL_CONFIG.style.buttons.controls.selected.color : e.FINAL_CONFIG.style.buttons.controls.color,\n              borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n            }),\n            class: y({\n              \"button-tool\": !0,\n              \"button-tool--selected\": i.isMoveMode,\n              tooltip: !0\n            }),\n            onClick: s[0] || (s[0] = (l) => {\n              e.deleteEmptyTextElement(), i.isMoveMode = !i.isMoveMode, i.activeShape = void 0, i.isDeleteMode = !1, i.isDrawMode = !1, i.isResizeMode = !1, i.isSelectMode = !1, i.isTextMode = !1, i.isWriting = !1, i.showCaret = !1;\n            })\n          }, [\n            B,\n            e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n              key: 0,\n              class: \"tooltiptext\",\n              style: c({\n                backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                color: e.FINAL_CONFIG.style.tooltips.color,\n                border: e.FINAL_CONFIG.style.tooltips.border,\n                borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n              })\n            }, u(e.FINAL_CONFIG.translations.tooltipMove), 5)) : a(\"\", !0)\n          ], 14, P),\n          r(\"button\", {\n            disabled: i.shapes.length === 0 || i.activeShape === \"line\",\n            style: c({\n              background: i.isResizeMode ? e.FINAL_CONFIG.style.buttons.controls.selected.backgroundColor : e.FINAL_CONFIG.style.buttons.controls.backgroundColor,\n              border: i.isResizeMode ? e.FINAL_CONFIG.style.buttons.controls.selected.border : e.FINAL_CONFIG.style.buttons.controls.border,\n              color: i.isResizeMode ? e.FINAL_CONFIG.style.buttons.controls.selected.color : e.FINAL_CONFIG.style.buttons.controls.color,\n              borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n            }),\n            class: y({\n              \"button-tool\": !0,\n              \"button-tool--selected\": i.isResizeMode,\n              tooltip: !0\n            }),\n            onClick: s[1] || (s[1] = (l) => {\n              e.deleteEmptyTextElement(), i.isResizeMode = !i.isResizeMode, i.isMoveMode = !1, i.isDeleteMode = !1, i.isDrawMode = !1, i.isSelectMode = !1, i.isTextMode = !1, i.isWriting = !1, i.activeShape = void 0, i.showCaret = !1;\n            })\n          }, [\n            E,\n            e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n              key: 0,\n              class: \"tooltiptext\",\n              style: c({\n                backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                color: e.FINAL_CONFIG.style.tooltips.color,\n                border: e.FINAL_CONFIG.style.tooltips.border,\n                borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n              })\n            }, u(e.FINAL_CONFIG.translations.tooltipResize), 5)) : a(\"\", !0)\n          ], 14, V),\n          r(\"button\", {\n            disabled: i.shapes.length === 0,\n            style: c({\n              background: i.isDeleteMode ? e.FINAL_CONFIG.style.buttons.controls.selected.backgroundColor : e.FINAL_CONFIG.style.buttons.controls.backgroundColor,\n              border: i.isDeleteMode ? e.FINAL_CONFIG.style.buttons.controls.selected.border : e.FINAL_CONFIG.style.buttons.controls.border,\n              color: i.isDeleteMode ? e.FINAL_CONFIG.style.buttons.controls.selected.color : e.FINAL_CONFIG.style.buttons.controls.color,\n              borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n            }),\n            class: y({\n              \"button-tool\": !0,\n              \"button-tool--selected\": i.isDeleteMode,\n              tooltip: !0\n            }),\n            onClick: s[2] || (s[2] = (l) => {\n              e.deleteEmptyTextElement(), i.isDeleteMode = !i.isDeleteMode, i.isMoveMode = !1, i.isResizeMode = !1, i.isSelectMode = !1, i.isTextMode = !1, i.isWriting = !1, i.activeShape = void 0, i.showCaret = !1;\n            })\n          }, [\n            U,\n            e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n              key: 0,\n              class: \"tooltiptext\",\n              style: c({\n                backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                color: e.FINAL_CONFIG.style.tooltips.color,\n                border: e.FINAL_CONFIG.style.tooltips.border,\n                borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n              })\n            }, u(e.FINAL_CONFIG.translations.tooltipDelete), 5)) : a(\"\", !0)\n          ], 14, X),\n          r(\"button\", {\n            disabled: !e.canSelect,\n            style: c({\n              background: i.isSelectMode ? e.FINAL_CONFIG.style.buttons.controls.selected.backgroundColor : e.FINAL_CONFIG.style.buttons.controls.backgroundColor,\n              border: i.isSelectMode ? e.FINAL_CONFIG.style.buttons.controls.selected.border : e.FINAL_CONFIG.style.buttons.controls.border,\n              color: i.isSelectMode ? e.FINAL_CONFIG.style.buttons.controls.selected.color : e.FINAL_CONFIG.style.buttons.controls.color,\n              borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n            }),\n            class: y({\n              \"button-tool\": !0,\n              \"button-tool--selected\": i.isSelectMode,\n              tooltip: !0\n            }),\n            onClick: s[3] || (s[3] = (l) => {\n              e.deleteEmptyTextElement(), e.setShapeTo(\"group\"), i.isSelectMode = !i.isSelectMode, i.isDeleteMode = !1, i.isMoveMode = !1, i.isResizeMode = !1, i.isTextMode = !1, i.isWriting = !1, i.activeShape = \"group\", i.showCaret = !1;\n            })\n          }, [\n            (d(), n(\"svg\", j, J)),\n            e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n              key: 0,\n              class: \"tooltiptext\",\n              style: c({\n                backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                color: e.FINAL_CONFIG.style.tooltips.color,\n                border: e.FINAL_CONFIG.style.tooltips.border,\n                borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n              })\n            }, u(e.FINAL_CONFIG.translations.tooltipGroup), 5)) : a(\"\", !0)\n          ], 14, Y),\n          r(\"button\", {\n            disabled: i.shapes.length === 0,\n            style: c({\n              background: e.FINAL_CONFIG.style.buttons.controls.backgroundColor,\n              border: e.FINAL_CONFIG.style.buttons.controls.border,\n              color: e.FINAL_CONFIG.style.buttons.controls.color,\n              borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n            }),\n            class: y({ \"button-tool\": !0, tooltip: !0 }),\n            onClick: s[4] || (s[4] = (l) => {\n              i.isResizeMode = !1, i.isMoveMode = !0, i.isDeleteMode = !1, i.isDrawMode = !1, i.isSelectMode = !1, i.isTextMode = !1, i.isWriting = !1, i.showCaret = !1, e.bringShapeTo(\"front\");\n            })\n          }, [\n            (d(), n(\"svg\", K, $)),\n            e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n              key: 0,\n              class: \"tooltiptext\",\n              style: c({\n                backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                color: e.FINAL_CONFIG.style.tooltips.color,\n                border: e.FINAL_CONFIG.style.tooltips.border,\n                borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n              })\n            }, u(e.FINAL_CONFIG.translations.tooltipBringToFront), 5)) : a(\"\", !0)\n          ], 12, q),\n          r(\"button\", {\n            disabled: i.shapes.length === 0,\n            style: c({\n              background: e.FINAL_CONFIG.style.buttons.controls.backgroundColor,\n              border: e.FINAL_CONFIG.style.buttons.controls.border,\n              color: e.FINAL_CONFIG.style.buttons.controls.color,\n              borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n            }),\n            class: y({ \"button-tool\": !0, tooltip: !0 }),\n            onClick: s[5] || (s[5] = (l) => {\n              i.isResizeMode = !1, i.isMoveMode = !0, i.isDeleteMode = !1, i.isDrawMode = !1, i.isSelectMode = !1, i.isTextMode = !1, i.isWriting = !1, i.showCaret = !1, e.bringShapeTo(\"back\");\n            })\n          }, [\n            (d(), n(\"svg\", et, st)),\n            e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n              key: 0,\n              class: \"tooltiptext\",\n              style: c({\n                backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                color: e.FINAL_CONFIG.style.tooltips.color,\n                border: e.FINAL_CONFIG.style.tooltips.border,\n                borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n              })\n            }, u(e.FINAL_CONFIG.translations.tooltipBringToBack), 5)) : a(\"\", !0)\n          ], 12, tt),\n          r(\"button\", {\n            disabled: i.shapes.length === 0 || i.activeShape === \"line\",\n            style: c({\n              background: e.FINAL_CONFIG.style.buttons.controls.backgroundColor,\n              border: e.FINAL_CONFIG.style.buttons.controls.border,\n              color: e.FINAL_CONFIG.style.buttons.controls.color,\n              borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n            }),\n            class: y({ \"button-tool\": !0, tooltip: !0 }),\n            onClick: s[6] || (s[6] = (l) => {\n              e.deleteEmptyTextElement(), i.isResizeMode = !1, i.isMoveMode = !0, i.isDeleteMode = !1, i.isDrawMode = !1, i.isSelectMode = !1, i.isTextMode = !1, i.isWriting = !1, i.showCaret = !1, e.copyPaste();\n            })\n          }, [\n            lt,\n            e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n              key: 0,\n              class: \"tooltiptext\",\n              style: c({\n                backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                color: e.FINAL_CONFIG.style.tooltips.color,\n                border: e.FINAL_CONFIG.style.tooltips.border,\n                borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n              })\n            }, u(e.FINAL_CONFIG.translations.tooltipDuplicate), 5)) : a(\"\", !0)\n          ], 12, ot),\n          r(\"button\", {\n            disabled: i.shapes.length === 0,\n            style: c({\n              background: e.FINAL_CONFIG.style.buttons.controls.backgroundColor,\n              border: e.FINAL_CONFIG.style.buttons.controls.border,\n              color: e.FINAL_CONFIG.style.buttons.controls.color,\n              borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n            }),\n            class: y({ \"button-tool\": !0, \"button-tool--one-shot\": !0, tooltip: !0 }),\n            onClick: s[7] || (s[7] = (l) => {\n              i.isResizeMode = !1, i.isMoveMode = !1, i.isDeleteMode = !1, i.isDrawMode = !1, i.isSelectMode = !1, i.isTextMode = !1, i.isWriting = !1, i.activeShape = void 0, i.showCaret = !1, e.undoLastShape();\n            })\n          }, [\n            dt,\n            e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n              key: 0,\n              class: \"tooltiptext\",\n              style: c({\n                backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                color: e.FINAL_CONFIG.style.tooltips.color,\n                border: e.FINAL_CONFIG.style.tooltips.border,\n                borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n              })\n            }, u(e.FINAL_CONFIG.translations.tooltipUndo), 5)) : a(\"\", !0)\n          ], 12, rt),\n          e.FINAL_CONFIG.style.showPrint ? (d(), n(\"button\", {\n            key: 0,\n            style: c({\n              background: e.FINAL_CONFIG.style.buttons.controls.backgroundColor,\n              border: e.FINAL_CONFIG.style.buttons.controls.border,\n              color: e.FINAL_CONFIG.style.buttons.controls.color,\n              borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n            }),\n            class: y({ \"button-tool\": !0, tooltip: !0 }),\n            onClick: s[8] || (s[8] = (...l) => e.print && e.print(...l))\n          }, [\n            nt,\n            e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n              key: 0,\n              class: \"tooltiptext\",\n              style: c({\n                backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                color: e.FINAL_CONFIG.style.tooltips.color,\n                border: e.FINAL_CONFIG.style.tooltips.border,\n                borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n              })\n            }, u(e.FINAL_CONFIG.translations.tooltipPdf), 5)) : a(\"\", !0)\n          ], 4)) : a(\"\", !0),\n          e.FINAL_CONFIG.style.showSave ? (d(), n(\"button\", {\n            key: 1,\n            style: c({\n              background: e.FINAL_CONFIG.style.buttons.controls.backgroundColor,\n              border: e.FINAL_CONFIG.style.buttons.controls.border,\n              color: e.FINAL_CONFIG.style.buttons.controls.color,\n              borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n            }),\n            class: y({ \"button-tool\": !0, tooltip: !0 }),\n            onClick: s[9] || (s[9] = (...l) => e.save && e.save(...l))\n          }, [\n            ct,\n            e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n              key: 0,\n              class: \"tooltiptext\",\n              style: c({\n                backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                color: e.FINAL_CONFIG.style.tooltips.color,\n                border: e.FINAL_CONFIG.style.tooltips.border,\n                borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n              })\n            }, u(e.FINAL_CONFIG.translations.tooltipSave), 5)) : a(\"\", !0)\n          ], 4)) : a(\"\", !0)\n        ]),\n        r(\"div\", ht, [\n          r(\"button\", {\n            class: y({\n              \"button-tool\": !0,\n              \"button-tool--selected\": i.activeShape === \"circle\",\n              tooltip: !0\n            }),\n            style: c({\n              background: i.activeShape === \"circle\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor : e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,\n              border: i.activeShape === \"circle\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.border : e.FINAL_CONFIG.style.buttons.shapes.border,\n              color: i.activeShape === \"circle\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.color : e.FINAL_CONFIG.style.buttons.shapes.color,\n              borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n            }),\n            onClick: s[10] || (s[10] = (l) => {\n              e.setShapeTo(\"circle\"), i.isSelectMode = !1;\n            })\n          }, [\n            (d(), n(\"svg\", at, [\n              r(\"circle\", {\n                cx: 6,\n                cy: 6,\n                r: \"4\",\n                fill: i.options.circle.filled ? (i.activeShape === \"circle\", i.selectedColor + e.colorTransparency) : \"none\",\n                stroke: \"currentColor\"\n              }, null, 8, ut)\n            ])),\n            e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n              key: 0,\n              class: \"tooltiptext\",\n              style: c({\n                backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                color: e.FINAL_CONFIG.style.tooltips.color,\n                border: e.FINAL_CONFIG.style.tooltips.border,\n                borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n              })\n            }, u(e.FINAL_CONFIG.translations.tooltipShapeCircle), 5)) : a(\"\", !0)\n          ], 6),\n          i.activeShape === \"circle\" ? (d(), n(\"div\", yt, [\n            r(\"label\", bt, u(e.FINAL_CONFIG.translations.filled), 1),\n            f(r(\"input\", {\n              type: \"checkbox\",\n              \"onUpdate:modelValue\": s[11] || (s[11] = (l) => i.options.circle.filled = l),\n              onChange: s[12] || (s[12] = (...l) => e.setFillOfSelectedCircle && e.setFillOfSelectedCircle(...l)),\n              checked: i.options.circle.filled\n            }, null, 40, It), [\n              [g, i.options.circle.filled]\n            ])\n          ])) : a(\"\", !0),\n          r(\"button\", {\n            class: y({\n              \"button-tool\": !0,\n              \"button-tool--selected\": i.activeShape === \"rect\",\n              tooltip: !0\n            }),\n            style: c({\n              background: i.activeShape === \"rect\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor : e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,\n              border: i.activeShape === \"rect\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.border : e.FINAL_CONFIG.style.buttons.shapes.border,\n              color: i.activeShape === \"rect\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.color : e.FINAL_CONFIG.style.buttons.shapes.color,\n              borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n            }),\n            onClick: s[13] || (s[13] = (l) => {\n              e.setShapeTo(\"rect\"), i.isSelectMode = !1;\n            })\n          }, [\n            (d(), n(\"svg\", Ft, [\n              r(\"rect\", {\n                x: \"3\",\n                y: \"3\",\n                style: { rx: \"0 !important\", ry: \"0 !important\" },\n                height: \"6\",\n                width: \"6\",\n                fill: i.options.rect.filled ? (i.activeShape === \"rect\", i.selectedColor + e.colorTransparency) : \"none\",\n                stroke: \"currentColor\"\n              }, null, 8, Nt)\n            ])),\n            e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n              key: 0,\n              class: \"tooltiptext\",\n              style: c({\n                backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                color: e.FINAL_CONFIG.style.tooltips.color,\n                border: e.FINAL_CONFIG.style.tooltips.border,\n                borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n              })\n            }, u(e.FINAL_CONFIG.translations.tooltipShapeRect), 5)) : a(\"\", !0)\n          ], 6),\n          i.activeShape === \"rect\" ? (d(), n(\"div\", ft, [\n            r(\"label\", xt, u(e.FINAL_CONFIG.translations.filled), 1),\n            f(r(\"input\", {\n              id: \"rectFill\",\n              type: \"checkbox\",\n              \"onUpdate:modelValue\": s[14] || (s[14] = (l) => i.options.rect.filled = l),\n              onChange: s[15] || (s[15] = (...l) => e.setFillOfSelectedRect && e.setFillOfSelectedRect(...l)),\n              checked: i.options.rect.filled\n            }, null, 40, Ct), [\n              [g, i.options.rect.filled]\n            ])\n          ])) : a(\"\", !0),\n          r(\"button\", {\n            class: y({\n              \"button-tool\": !0,\n              \"button-tool--selected\": i.activeShape === \"arrow\",\n              tooltip: !0\n            }),\n            style: c({\n              background: i.activeShape === \"arrow\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor : e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,\n              border: i.activeShape === \"arrow\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.border : e.FINAL_CONFIG.style.buttons.shapes.border,\n              color: i.activeShape === \"arrow\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.color : e.FINAL_CONFIG.style.buttons.shapes.color,\n              borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n            }),\n            onClick: s[16] || (s[16] = (l) => {\n              e.setShapeTo(\"arrow\"), i.isSelectMode = !1;\n            })\n          }, [\n            (d(), n(\"svg\", gt, [\n              r(\"path\", {\n                stroke: i.options.arrow.filled ? i.activeShape === \"arrow\" ? \"white\" : \"grey\" : \"none\",\n                \"stroke-width\": \"2\",\n                d: \"M5,19 19,5 14,5 19,10.5 19,5\",\n                fill: \"none\",\n                \"stroke-linecap\": \"round\",\n                \"stroke-linejoin\": \"round\"\n              }, null, 8, St)\n            ])),\n            e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n              key: 0,\n              class: \"tooltiptext\",\n              style: c({\n                backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                color: e.FINAL_CONFIG.style.tooltips.color,\n                border: e.FINAL_CONFIG.style.tooltips.border,\n                borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n              })\n            }, u(e.FINAL_CONFIG.translations.tooltipShapeArrow), 5)) : a(\"\", !0)\n          ], 6),\n          r(\"button\", {\n            class: y({\n              \"button-tool\": !0,\n              \"button-tool--selected\": i.activeShape === \"line\",\n              tooltip: !0\n            }),\n            style: c({\n              background: i.activeShape === \"line\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor : e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,\n              border: i.activeShape === \"line\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.border : e.FINAL_CONFIG.style.buttons.shapes.border,\n              color: i.activeShape === \"line\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.color : e.FINAL_CONFIG.style.buttons.shapes.color,\n              borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n            }),\n            onClick: s[17] || (s[17] = (l) => {\n              e.setShapeTo(\"line\"), i.isSelectMode = !1;\n            })\n          }, [\n            kt,\n            e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n              key: 0,\n              class: \"tooltiptext\",\n              style: c({\n                backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                color: e.FINAL_CONFIG.style.tooltips.color,\n                border: e.FINAL_CONFIG.style.tooltips.border,\n                borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n              })\n            }, u(e.FINAL_CONFIG.translations.tooltipShapeFreehand), 5)) : a(\"\", !0)\n          ], 6),\n          [\"arrow\", \"circle\", \"rect\", \"line\"].includes(i.activeShape) ? (d(), n(\"div\", pt, [\n            r(\"div\", _t, [\n              r(\"label\", vt, u(e.FINAL_CONFIG.translations.thickness), 1),\n              f(r(\"input\", {\n                id: \"textFont\",\n                type: \"number\",\n                \"onUpdate:modelValue\": s[18] || (s[18] = (l) => i.strokeSize = l),\n                onInput: s[19] || (s[19] = (...l) => e.setStrokeWidthOfSelectedShape && e.setStrokeWidthOfSelectedShape(...l)),\n                style: { padding: \"0 4px\", width: \"40px\", border: \"1px solid #dadada\", \"border-radius\": \"3px\" }\n              }, null, 544), [\n                [C, i.strokeSize]\n              ])\n            ])\n          ])) : a(\"\", !0),\n          [\"arrow\", \"circle\", \"rect\"].includes(i.activeShape) ? (d(), n(\"div\", wt, [\n            r(\"div\", At, [\n              r(\"label\", Mt, u(e.FINAL_CONFIG.translations.dashedLines), 1),\n              (d(), n(\"svg\", Ot, Gt)),\n              f(r(\"input\", {\n                id: \"dashStyle\",\n                name: \"dashStyle\",\n                type: \"checkbox\",\n                \"onUpdate:modelValue\": s[20] || (s[20] = (l) => i.isDash = l),\n                onChange: s[21] || (s[21] = (...l) => e.setSelectedShapeToDash && e.setSelectedShapeToDash(...l)),\n                checked: i.isDash\n              }, null, 40, mt), [\n                [g, i.isDash]\n              ])\n            ])\n          ])) : a(\"\", !0),\n          r(\"button\", {\n            class: y({\n              \"button-tool\": !0,\n              \"button-tool--selected\": i.isTextMode,\n              tooltip: !0\n            }),\n            style: c({\n              background: i.isTextMode ? e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor : e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,\n              border: i.isTextMode ? e.FINAL_CONFIG.style.buttons.shapes.selected.border : e.FINAL_CONFIG.style.buttons.shapes.border,\n              color: i.isTextMode ? e.FINAL_CONFIG.style.buttons.shapes.selected.color : e.FINAL_CONFIG.style.buttons.shapes.color,\n              borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n            }),\n            onClick: s[22] || (s[22] = (l) => {\n              e.deleteEmptyTextElement(), i.isTextMode = !i.isTextMode, i.isDeleteMode = !1, i.isMoveMode = !1, i.isResizeMode = !1, i.isSelectMode = !1, i.isDrawMode = !1, i.activeShape = void 0;\n            })\n          }, [\n            (d(), n(\"svg\", Tt, Dt)),\n            e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n              key: 0,\n              class: \"tooltiptext\",\n              style: c({\n                backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                color: e.FINAL_CONFIG.style.tooltips.color,\n                border: e.FINAL_CONFIG.style.tooltips.border,\n                borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n              })\n            }, u(e.FINAL_CONFIG.translations.tooltipShapeText), 5)) : a(\"\", !0)\n          ], 6),\n          i.isTextMode ? (d(), n(\"div\", zt, [\n            r(\"div\", Ht, [\n              r(\"label\", Wt, u(e.FINAL_CONFIG.translations.fontSize), 1),\n              f(r(\"input\", {\n                id: \"textFont\",\n                type: \"number\",\n                \"onUpdate:modelValue\": s[23] || (s[23] = (l) => i.textFont = l),\n                onInput: s[24] || (s[24] = (...l) => e.setCurrentStyleOfSelectedText && e.setCurrentStyleOfSelectedText(...l)),\n                style: { padding: \"0 4px\", width: \"40px\", border: \"1px solid #dadada\", \"border-radius\": \"3px\" }\n              }, null, 544), [\n                [C, i.textFont]\n              ])\n            ])\n          ])) : a(\"\", !0),\n          i.isTextMode ? (d(), n(\"div\", Pt, [\n            r(\"button\", {\n              class: y({\n                \"button-tool\": !0,\n                \"button-tool--selected\": i.textAlign === \"start\",\n                tooltip: !0\n              }),\n              style: c({\n                background: i.textAlign === \"start\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor : e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,\n                border: i.textAlign === \"start\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.border : e.FINAL_CONFIG.style.buttons.shapes.border,\n                color: i.textAlign === \"start\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.color : e.FINAL_CONFIG.style.buttons.shapes.color,\n                borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n              }),\n              onClick: s[25] || (s[25] = (l) => {\n                i.isDeleteMode = !1, i.isMoveMode = !1, i.isResizeMode = !1, i.isDrawMode = !1, i.isSelectMode = !1, i.activeShape = void 0, i.textAlign = \"start\", e.setSelectedTextAlignTo(\"start\");\n              })\n            }, [\n              Bt,\n              e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n                key: 0,\n                class: \"tooltiptext\",\n                style: c({\n                  backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                  color: e.FINAL_CONFIG.style.tooltips.color,\n                  border: e.FINAL_CONFIG.style.tooltips.border,\n                  borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                  boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n                })\n              }, u(e.FINAL_CONFIG.translations.tooltipShapeTextLeft), 5)) : a(\"\", !0)\n            ], 6)\n          ])) : a(\"\", !0),\n          i.isTextMode ? (d(), n(\"div\", Vt, [\n            r(\"button\", {\n              class: y({\n                \"button-tool\": !0,\n                \"button-tool--selected\": i.textAlign === \"middle\",\n                tooltip: !0\n              }),\n              style: c({\n                background: i.textAlign === \"middle\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor : e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,\n                border: i.textAlign === \"middle\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.border : e.FINAL_CONFIG.style.buttons.shapes.border,\n                color: i.textAlign === \"middle\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.color : e.FINAL_CONFIG.style.buttons.shapes.color,\n                borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n              }),\n              disabled: i.isBulletTextMode,\n              onClick: s[26] || (s[26] = (l) => {\n                i.isDeleteMode = !1, i.isMoveMode = !1, i.isResizeMode = !1, i.isDrawMode = !1, i.isSelectMode = !1, i.activeShape = void 0, i.textAlign = \"middle\", e.setSelectedTextAlignTo(\"middle\");\n              })\n            }, [\n              Xt,\n              e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n                key: 0,\n                class: \"tooltiptext\",\n                style: c({\n                  backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                  color: e.FINAL_CONFIG.style.tooltips.color,\n                  border: e.FINAL_CONFIG.style.tooltips.border,\n                  borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                  boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n                })\n              }, u(e.FINAL_CONFIG.translations.tooltipShapeTextCenter), 5)) : a(\"\", !0)\n            ], 14, Et)\n          ])) : a(\"\", !0),\n          i.isTextMode ? (d(), n(\"div\", Ut, [\n            r(\"button\", {\n              class: y({\n                \"button-tool\": !0,\n                \"button-tool--selected\": i.textAlign === \"end\",\n                tooltip: !0\n              }),\n              style: c({\n                background: i.textAlign === \"end\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor : e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,\n                border: i.textAlign === \"end\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.border : e.FINAL_CONFIG.style.buttons.shapes.border,\n                color: i.textAlign === \"end\" ? e.FINAL_CONFIG.style.buttons.shapes.selected.color : e.FINAL_CONFIG.style.buttons.shapes.color,\n                borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n              }),\n              disabled: i.isBulletTextMode,\n              onClick: s[27] || (s[27] = (l) => {\n                i.isDeleteMode = !1, i.isMoveMode = !1, i.isResizeMode = !1, i.isDrawMode = !1, i.isSelectMode = !1, i.activeShape = void 0, i.textAlign = \"end\", e.setSelectedTextAlignTo(\"end\");\n              })\n            }, [\n              jt,\n              e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n                key: 0,\n                class: \"tooltiptext\",\n                style: c({\n                  backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                  color: e.FINAL_CONFIG.style.tooltips.color,\n                  border: e.FINAL_CONFIG.style.tooltips.border,\n                  borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                  boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n                })\n              }, u(e.FINAL_CONFIG.translations.tooltipShapeTextRight), 5)) : a(\"\", !0)\n            ], 14, Yt)\n          ])) : a(\"\", !0),\n          i.isTextMode ? (d(), n(\"div\", Zt, [\n            r(\"button\", {\n              class: y({\n                \"button-tool\": !0,\n                \"button-tool--selected\": i.isBulletTextMode,\n                tooltip: !0\n              }),\n              style: c({\n                background: i.isBulletTextMode ? e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor : e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,\n                border: i.isBulletTextMode ? e.FINAL_CONFIG.style.buttons.shapes.selected.border : e.FINAL_CONFIG.style.buttons.shapes.border,\n                color: i.isBulletTextMode ? e.FINAL_CONFIG.style.buttons.shapes.selected.color : e.FINAL_CONFIG.style.buttons.shapes.color,\n                borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n              }),\n              onClick: s[28] || (s[28] = (l) => {\n                i.isDeleteMode = !1, i.isMoveMode = !1, i.isResizeMode = !1, i.isDrawMode = !1, i.isSelectMode = !1, i.activeShape = void 0, i.isBulletTextMode = !i.isBulletTextMode, i.textAlign = \"start\", e.setSelectedTextAlignTo(\"start\"), e.setCurrentStyleOfSelectedText();\n              })\n            }, [\n              Jt,\n              e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n                key: 0,\n                class: \"tooltiptext\",\n                style: c({\n                  backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                  color: e.FINAL_CONFIG.style.tooltips.color,\n                  border: e.FINAL_CONFIG.style.tooltips.border,\n                  borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                  boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n                })\n              }, u(e.FINAL_CONFIG.translations.tooltipShapeTextBullet), 5)) : a(\"\", !0)\n            ], 6)\n          ])) : a(\"\", !0),\n          i.isTextMode ? (d(), n(\"div\", qt, [\n            r(\"button\", {\n              class: y({\n                \"button-tool\": !0,\n                \"button-tool--selected\": i.isBold,\n                tooltip: !0\n              }),\n              style: c({\n                background: i.isBold ? e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor : e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,\n                border: i.isBold ? e.FINAL_CONFIG.style.buttons.shapes.selected.border : e.FINAL_CONFIG.style.buttons.shapes.border,\n                color: i.isBold ? e.FINAL_CONFIG.style.buttons.shapes.selected.color : e.FINAL_CONFIG.style.buttons.shapes.color,\n                borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n              }),\n              onClick: s[29] || (s[29] = (l) => {\n                i.isDeleteMode = !1, i.isMoveMode = !1, i.isResizeMode = !1, i.isDrawMode = !1, i.isSelectMode = !1, i.activeShape = void 0, i.isBold = !i.isBold, e.setCurrentStyleOfSelectedText();\n              })\n            }, [\n              Kt,\n              e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n                key: 0,\n                class: \"tooltiptext\",\n                style: c({\n                  backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                  color: e.FINAL_CONFIG.style.tooltips.color,\n                  border: e.FINAL_CONFIG.style.tooltips.border,\n                  borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                  boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n                })\n              }, u(e.FINAL_CONFIG.translations.tooltipShapeTextBold), 5)) : a(\"\", !0)\n            ], 6)\n          ])) : a(\"\", !0),\n          i.isTextMode ? (d(), n(\"div\", Qt, [\n            r(\"button\", {\n              class: y({\n                \"button-tool\": !0,\n                \"button-tool--selected\": i.isItalic,\n                tooltip: !0\n              }),\n              style: c({\n                background: i.isItalic ? e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor : e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,\n                border: i.isItalic ? e.FINAL_CONFIG.style.buttons.shapes.selected.border : e.FINAL_CONFIG.style.buttons.shapes.border,\n                color: i.isItalic ? e.FINAL_CONFIG.style.buttons.shapes.selected.color : e.FINAL_CONFIG.style.buttons.shapes.color,\n                borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n              }),\n              onClick: s[30] || (s[30] = (l) => {\n                i.isDeleteMode = !1, i.isMoveMode = !1, i.isResizeMode = !1, i.isDrawMode = !1, i.isSelectMode = !1, i.activeShape = void 0, i.isItalic = !i.isItalic, e.setCurrentStyleOfSelectedText();\n              })\n            }, [\n              $t,\n              e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n                key: 0,\n                class: \"tooltiptext\",\n                style: c({\n                  backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                  color: e.FINAL_CONFIG.style.tooltips.color,\n                  border: e.FINAL_CONFIG.style.tooltips.border,\n                  borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                  boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n                })\n              }, u(e.FINAL_CONFIG.translations.tooltipShapeTextItalic), 5)) : a(\"\", !0)\n            ], 6)\n          ])) : a(\"\", !0),\n          i.isTextMode ? (d(), n(\"div\", te, [\n            r(\"button\", {\n              class: y({\n                \"button-tool\": !0,\n                \"button-tool--selected\": i.isUnderline,\n                tooltip: !0\n              }),\n              style: c({\n                background: i.isUnderline ? e.FINAL_CONFIG.style.buttons.shapes.selected.backgroundColor : e.FINAL_CONFIG.style.buttons.shapes.backgroundColor,\n                border: i.isUnderline ? e.FINAL_CONFIG.style.buttons.shapes.selected.border : e.FINAL_CONFIG.style.buttons.shapes.border,\n                color: i.isUnderline ? e.FINAL_CONFIG.style.buttons.shapes.selected.color : e.FINAL_CONFIG.style.buttons.shapes.color,\n                borderRadius: `${e.FINAL_CONFIG.style.buttons.borderRadius}px`\n              }),\n              onClick: s[31] || (s[31] = (l) => {\n                i.isDeleteMode = !1, i.isMoveMode = !1, i.isResizeMode = !1, i.isDrawMode = !1, i.isSelectMode = !1, i.activeShape = void 0, i.isUnderline = !i.isUnderline, e.setCurrentStyleOfSelectedText();\n              })\n            }, [\n              ee,\n              e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n                key: 0,\n                class: \"tooltiptext\",\n                style: c({\n                  backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                  color: e.FINAL_CONFIG.style.tooltips.color,\n                  border: e.FINAL_CONFIG.style.tooltips.border,\n                  borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                  boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n                })\n              }, u(e.FINAL_CONFIG.translations.tooltipShapeTextUnderline), 5)) : a(\"\", !0)\n            ], 6)\n          ])) : a(\"\", !0),\n          r(\"div\", ie, [\n            f(r(\"input\", {\n              type: \"color\",\n              id: \"colorPicker\",\n              name: \"colorPicker\",\n              \"onUpdate:modelValue\": s[32] || (s[32] = (l) => i.selectedColor = l),\n              onInput: s[33] || (s[33] = (...l) => e.setColorOfSelectedShape && e.setColorOfSelectedShape(...l)),\n              style: c(`height: 30px; width: 30px; border-radius: ${e.FINAL_CONFIG.style.buttons.borderRadius}px; cursor: pointer`)\n            }, null, 36), [\n              [C, i.selectedColor]\n            ]),\n            e.FINAL_CONFIG.style.showTooltips ? (d(), n(\"span\", {\n              key: 0,\n              class: \"tooltiptext\",\n              style: c({\n                backgroundColor: e.FINAL_CONFIG.style.tooltips.backgroundColor,\n                color: e.FINAL_CONFIG.style.tooltips.color,\n                border: e.FINAL_CONFIG.style.tooltips.border,\n                borderRadius: `${e.FINAL_CONFIG.style.tooltips.borderRadius}px`,\n                boxShadow: e.FINAL_CONFIG.style.tooltips.boxShadow\n              })\n            }, u(e.FINAL_CONFIG.translations.tooltipShapeColor), 5)) : a(\"\", !0)\n          ]),\n          r(\"div\", se, [\n            r(\"label\", oe, u(e.FINAL_CONFIG.translations.colorAlpha) + \": \" + u(i.transparency > 98 ? 100 : i.transparency) + \" % \", 1),\n            f(r(\"input\", {\n              id: \"colorTransparency\",\n              name: \"colorTransparency\",\n              type: \"range\",\n              \"onUpdate:modelValue\": s[34] || (s[34] = (l) => i.transparency = l),\n              onInput: s[35] || (s[35] = (...l) => e.setTransparencyOfSelectedShape && e.setTransparencyOfSelectedShape(...l)),\n              min: 0,\n              max: 100,\n              style: { width: \"100px\" }\n            }, null, 544), [\n              [C, i.transparency]\n            ])\n          ])\n        ])\n      ], 36)\n    ]),\n    r(\"div\", le, [\n      O(t.$slots, \"default\", {}, void 0, !0),\n      i.isSummaryOpen ? (d(), n(\"svg\", {\n        id: \"annotatorSvg\",\n        key: i.step,\n        ref: \"mainSvg\",\n        class: y({ draw: !0, \"draw--free\": i.activeShape === \"line\" }),\n        style: c([`cursor:${e.cursorClass}; font-family: Helvetica; z-index: 100000000;`, { position: \"absolute\", top: \"0\", left: \"0\" }]),\n        viewBox: `0 0 ${i.svgWidth} ${i.svgHeight}`,\n        width: i.sourceWidth,\n        height: i.sourceHeight,\n        onPointerdown: s[38] || (s[38] = (l) => e.chooseAction(l)),\n        onPointerup: s[39] || (s[39] = (...l) => e.resetDraw && e.resetDraw(...l)),\n        onTouchend: s[40] || (s[40] = (...l) => e.resetDraw && e.resetDraw(...l)),\n        onTouchstart: s[41] || (s[41] = (l) => {\n          e.setPointer(l), e.clickSvg(l);\n        }),\n        onPointermove: s[42] || (s[42] = (l) => {\n          e.setPointer(l), e.chooseMove(l);\n        }),\n        onPointerout: s[43] || (s[43] = (l) => {\n          i.preventEdit = !0, i.hoveredShapeId = void 0;\n        }),\n        onPointerover: s[44] || (s[44] = (l) => e.allowEditAndHoverShapes(l)),\n        onClick: s[45] || (s[45] = (l) => e.clickSvg(l))\n      }, [\n        (d(!0), n(L, null, G(e.userShapes, (l, b) => (d(), n(\"g\", {\n          key: `shape_${b}`,\n          id: l.id,\n          innerHTML: l,\n          onClick: s[37] || (s[37] = (I) => {\n            e.clickShape(I), i.isMoveMode = !1;\n          })\n        }, null, 8, de))), 128))\n      ], 46, re)) : a(\"\", !0),\n      i.isPrinting ? (d(), n(\"svg\", {\n        key: 1,\n        style: { position: \"absolute\", top: \"0\", left: \"0\" },\n        height: i.sourceHeight,\n        viewBox: `0 0 ${i.svgWidth} ${i.svgHeight}`,\n        width: i.sourceWidth\n      }, [\n        r(\"circle\", {\n          class: \"animated-circle-print\",\n          cx: i.svgWidth / 2,\n          cy: i.svgHeight / 2,\n          r: \"50\",\n          stroke: \"#6376DD\",\n          \"stroke-width\": \"10\",\n          fill: \"none\"\n        }, null, 8, ce)\n      ], 8, ne)) : a(\"\", !0)\n    ], 512)\n  ]);\n}\nconst Fe = /* @__PURE__ */ R(D, [[\"render\", he], [\"__scopeId\", \"data-v-14ebd65f\"]]);\nexport {\n  Fe as default\n};\n"],
  "mappings": "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",
  "names": ["s", "q", "st", "Ht", "te"]
}
