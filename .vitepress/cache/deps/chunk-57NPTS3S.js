import {
  s
} from "./chunk-WZWZ3JKY.js";
import {
  Qt
} from "./chunk-TG4LWCJY.js";
import {
  computed,
  createElementBlock,
  normalizeClass,
  openBlock,
  unref
} from "./chunk-CQOUZRMK.js";

// node_modules/.pnpm/vue-data-ui@2.4.1/node_modules/vue-data-ui/dist/BaseIcon-CXDdkPfN.js
var M = ["xmlns", "viewBox", "height", "width", "innerHTML"];
var h = {
  __name: "BaseIcon",
  props: {
    name: String,
    size: {
      type: Number,
      default: 24
    },
    stroke: {
      type: String,
      default: "#CCCCCC"
    },
    strokeWidth: {
      type: Number,
      default: 1.5
    },
    isSpin: {
      type: Boolean,
      default: false
    }
  },
  setup(o) {
    const t = o, r = computed(() => t.name === "numbers" ? "0 0 20 21" : "0 0 20 20"), s2 = computed(() => ({
      annotator: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M3 17 4 12C5 12 7 13 8 15L3 17M4 12 11 2C12 2 14 3 15 5L8 15M3 19C5 19 5 19 8 19 11 19 11 18 13 18 15 18 15 19 19 19M12 1C13 1 15 2 16 4" />`,
      chart3dBar: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" d="M10 1 6 3 6 17 10 19 14 17 14 3 10 1M6 3 10 5 14 3M10 5 10 19" stroke-linecap="round" stroke-linejoin="round"/><path fill="${t.stroke}" stroke="none" style="opacity:0.3" d="M 6 10 L 10 12 L 14 10 L 14 17 L 10 19 L 6 17 L 6 10"/>`,
      chartAgePyramid: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 2 15 L 2 17 L 9 17 L 9 15 L 2 15 M 11 15 L 11 17 L 18 17 L 18 15 L 11 15 M 9 13 L 3 13 L 3 11 L 9 11 L 9 13 M 11 11 L 11 13 L 17 13 L 17 11 L 11 11 M 9 9 L 4 9 L 4 7 L 9 7 L 9 9 M 11 7 L 11 9 L 16 9 L 16 7 L 11 7 M 9 5 L 6 5 L 6 3 L 9 3 L 9 5 M 11 3 L 11 5 L 14 5 L 14 3 L 11 3" />`,
      chartBar: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M2 12 2 18C2 19 2 19 3 19L5 19C6 19 6 19 6 18L6 12C6 11 6 11 5 11L3 11C2 11 2 11 2 12M8 7 8 18C8 19 8 19 9 19L11 19C12 19 12 19 12 18L12 7C12 6 12 6 11 6L9 6C8 6 8 6 8 7M14 2 14 18C14 19 14 19 15 19L17 19C18 19 18 19 18 18L18 2C18 1 18 1 17 1L15 1C14 1 14 1 14 2"/>`,
      chartCandlestick: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M2 9 2 11C2 12 3 12 3 12L5 12C6 12 6 11 6 11L6 9C6 8 5 8 5 8L3 8C2 8 2 9 2 9M8 8 8 12C8 12 8 13 9 13L11 13C12 13 12 12 12 12L12 8C12 7 11 7 11 7L9 7C8 7 8 8 8 8M14 9 14 14C14 15 15 15 15 15L17 15C18 15 18 14 18 14L18 9C18 9 18 8 17 8L15 8C14 8 14 9 14 9M4 8 4 5M3 5 5 5M10 13 10 16M9 16 11 16M16 8 16 2M15 2 17 2M10 7 10 4M9 4 11 4M4 12 4 18M3 18 5 18M16 15 16 18M15 18 17 18" />`,
      chartChestnut: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M4 3A1 1 0 004 9 1 1 0 004 3M4 12A1 1 0 004 17 1 1 0 004 12M9 4 19 4M9 7 17 7M9 10 15 10M9 13 13 13M9 16 11 16" />`,
      chartDonut: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 10A1 1 0 0019 10 1 1 0 001 10M6 10A1 1 0 0014 10 1 1 0 006 10M1 10 6 10M10 14 10 19M14 10" /><path stroke="none" stroke-width="none" fill="${t.stroke}" stroke-linecap="round" d="M1 10 6 10C6 12 8 14 10 14L10 19C6 19 1 16 1 10" style="opacity:0.3" />`,
      chartNestedDonuts: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 1 10 A 1 1 0 0 0 19 10 A 1 1 0 0 0 1 10 M 4 10 A 1 1 0 0 0 16 10 A 1 1 0 0 0 4 10 M 1 10 L 4 10"/><path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth / 2}" stroke-linecap="round" d="M 10 16 L 10 19 M 7 10 A 1 1 0 0 0 13 10 A 1 1 0 0 0 7 10 "/><path style="opacity:0.3" fill="${t.stroke}" stroke-width="none" stroke-linecap="round" d="M 7 10 L 10 10 L 10 13 C 8 13 7 11 7 10"/><path style="opacity:0.3" fill="${t.stroke}" stroke-width="none" stroke-linecap="round" d="M 1 10 L 4 10 C 4 14 7 16 10 16 L 10 19 C 5 19 1 15 1 10"/>`,
      chartDonutEvolution: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 1 1 18C1 19 1 19 2 19L19 19M3 8A1 1 0 007 8 1 1 0 003 8M8 14A1 1 0 0012 14 1 1 0 008 14M14 4A1 1 0 0018 4 1 1 0 0014 4M7 10 9 12M11 12 15 6" />`,
      chartGauge: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 19 13 A 1 1 0 0 0 1 13" style="opacity:0.3" /><path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 9 15 A 1 1 0 0 0 11 15 A 1 1 0 0 0 9 15 M 10 14 L 10 8 M 10 4 C 6 4 1 7 1 13" />`,
      chartHeatmap: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M2 3 2 17C2 18 2 18 3 18L17 18C18 18 18 18 18 17L18 3C18 2 18 2 17 2L3 2C2 2 2 2 2 3M10 2 10 18M2 10 18 10M6 2 6 18M14 2 14 18M2 6 18 6M2 14 18 14"/><rect fill="${t.stroke}" stroke="none" x="2" y="6" height="4" width="4" style="opacity:0.5" /><rect fill="${t.stroke}" stroke="none" x="6" y="10" height="4" width="4" style="opacity:0.5" /><rect fill="${t.stroke}" stroke="none" x="6" y="14" height="4" width="4" style="opacity:0.5" /><rect fill="${t.stroke}" stroke="none" x="14" y="2" height="4" width="4" style="opacity:0.5" />`,
      chartLine: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 1 1 18C1 19 1 19 2 19L19 19M3 17Q3 12 5 7 6 5 8 10 10 15 11 6 12 3 14 8 16 11 19 1" />`,
      chartMoodRadar: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M10 4 4 9 6 16 14 16 16 9 10 4M9 2A1 1 0 0011 2 1 1 0 009 2M1 8A1 1 0 003 8 1 1 0 001 8M3 18A1 1 0 005 17 1 1 0 003 18M15 18A1 1 0 0017 17 1 1 0 0015 18M17 8A1 1 0 0019 8 1 1 0 0017 8" /><path stroke="none" stroke-width="none" fill="${t.stroke}" stroke-linecap="round" stroke-linejoin="round" d="M10 7 13 10 13 14 8 13 7 9 10 7" style="opacity:0.3" />`,
      chartOnion: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M10 1C15 1 19 5 19 10 19 15 15 19 10 19 6 19 1 15 1 10M10 4C13 4 16 6 16 10 16 14 13 16 10 16 7 16 4 14 4 10M10 7C11 7 13 8 13 10 13 12 11 13 10 13 9 13 7 12 7 10" style="opacity:0.3" /><path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M10 1C15 1 19 5 19 10 19 15 15 19 10 19M10 4C13 4 16 6 16 10 16 14 13 16 10 16 7 16 4 14 4 10M10 7C11 7 13 8 13 10" />`,
      chartQuadrant: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M10 1 10 19M1 10 19 10" /><circle stroke="none" fill="${t.stroke}" cx="3" cy="14" r="1"/><circle stroke="none" fill="${t.stroke}" cx="5" cy="6" r="1"/><circle stroke="none" fill="${t.stroke}" cx="14" cy="17" r="1"/><circle stroke="none" fill="${t.stroke}" cx="17" cy="14" r="1"/><circle stroke="none" fill="${t.stroke}" cx="15" cy="4" r="1"/>`,
      chartRadar: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M2 6 2 14 10 19 18 14 18 6 10 1 2 6" /><path style="opacity:0.3" fill="${t.stroke}" stroke="none" stroke-width="0" stroke-linecap="round" d="M4 7 10 5 18 6 12 11 10 16 6 11 4 7" />`,
      chartRelationCircle: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 10A1 1 0 0019 10 1 1 0 001 10M1 10C7 11 9 13 10 19M10 19C10 11 8 7 6 2M10 19C10 11 12 7 14 2M10 19C11 13 12 11 19 10" />`,
      chartRings: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 10A1 1 0 0019 10 1 1 0 001 10M5 14A1 1 0 0015 14 1 1 0 005 14M8 17A1 1 0 0012 17 1 1 0 008 17" />`,
      chartScatter: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 1 1 18C1 19 1 19 2 19L19 19" /><circle stroke="none" fill="${t.stroke}" cx="5" cy="15" r="1"/><circle stroke="none" fill="${t.stroke}" cx="6" cy="12" r="1" /><circle stroke="none" fill="${t.stroke}" cx="8" cy="15" r="1"/><circle stroke="none" fill="${t.stroke}" cx="10" cy="8" r="1"/><circle stroke="none" fill="${t.stroke}" cx="12" cy="10" r="1"/><circle stroke="none" fill="${t.stroke}" cx="14" cy="6" r="1"/><circle stroke="none" fill="${t.stroke}" cx="16" cy="4" r="1"/><circle stroke="none" fill="${t.stroke}" cx="11" cy="14" r="1"/>`,
      chartSparkHistogram: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M2 9 2 11C2 12 3 12 3 12L5 12C6 12 6 11 6 11L6 9C6 8 5 8 5 8L3 8C2 8 2 9 2 9M8 8 8 12C8 12 8 13 9 13L11 13C12 13 12 12 12 12L12 8C12 7 11 7 11 7L9 7C8 7 8 8 8 8M14 9 14 11C14 12 15 12 15 12L17 12C18 12 18 11 18 11L18 9C18 9 18 8 17 8L15 8C14 8 14 9 14 9" />`,
      chartSparkStackbar: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 2 10 L 18 10" style="opacity:0.3" /><path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 2 10 L 14 10" style="opacity:0.5" /><path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 2 10 L 8 10" />`,
      chartTable: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M2 3 2 17C2 18 2 18 3 18L17 18C18 18 18 18 18 17L18 3C18 2 18 2 17 2L3 2C2 2 2 2 2 3M10 6 10 18M2 10 18 10M6 2M14 2M2 6 18 6M2 14 18 14M6 8 8 8M6 12 8 12M6 16 8 16M14 8 16 8M14 12 16 12M14 16 16 16" />`,
      chartThermometer: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 13 4 A 1 1 0 0 0 7 4 L 7 16 A 1 1 0 0 0 13 16 L 13 4 M 7 15 L 8 15 M 7 12 L 8 12 M 7 9 L 8 9 M 7 6 L 8 6 M 12 15 L 13 15 M 12 12 L 13 12 M 12 9 L 13 9 M 12 6 L 13 6 " /><path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" style="opacity: 0.6" d="M 10 17 L 10 12 " /><path stroke-linecap="round" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" opacity="M 10 17 L 10 9" /><path stroke-linecap="round" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" opacity="0.3" d="M 10 17 L 10 6" /><path stroke-linecap="round" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" style="opacity: 0.1" d="M 10 17 L 10 3" />`,
      chartTiremarks: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 8 1 12M3 8 3 12M5 8 5 12M7 8 7 12M9 8 9 12M11 8 11 12M13 8 13 12" /><path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 8 1 12M3 8 3 12M5 8 5 12M7 8 7 12M9 8 9 12M11 8 11 12M13 8 13 12M15 8 15 12M17 8 17 12M19 8 19 12" style="opacity:0.4" />`,
      chartVerticalBar: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 3 1 5C1 6 1 6 2 6L9 6C10 6 10 6 10 5L10 3C10 2 10 2 9 2L2 2C1 2 1 2 1 3M1 9 1 11C1 12 1 12 2 12L13 12C14 12 14 12 14 11L14 9C14 8 14 8 13 8L2 8C1 8 1 8 1 9M1 15 1 17C1 18 1 18 2 18L17 18C18 18 18 18 18 17L18 15C18 14 18 14 17 14L2 14C1 14 1 14 1 15" />`,
      chartWaffle: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 2 1 4C1 5 1 5 2 5L4 5C5 5 5 5 5 4L5 2C5 1 5 1 4 1L2 1C1 1 1 1 1 2M18 1 16 1C15 1 15 1 15 2L15 4C15 5 15 5 16 5L18 5C19 5 19 5 19 4L19 2C19 1 19 1 18 1M8 2 8 4C8 5 8 5 9 5L11 5C12 5 12 5 12 4L12 2C12 1 12 1 11 1L9 1C8 1 8 1 8 2M2 19 4 19C5 19 5 19 5 18L5 16C5 15 5 15 4 15L2 15C1 15 1 15 1 16L1 18C1 19 1 19 2 19M1 9 1 11C1 12 1 12 2 12L4 12C5 12 5 12 5 11L5 9C5 8 5 8 4 8L2 8C1 8 1 8 1 9M15 16 15 18C15 19 15 19 16 19L18 19C19 19 19 19 19 18L19 16C19 15 19 15 18 15L16 15C15 15 15 15 15 16M8 16 8 18C8 19 8 19 9 19L11 19C12 19 12 19 12 18L12 16C12 15 12 15 11 15L9 15C8 15 8 15 8 16M8 9 8 11C8 12 8 12 9 12L11 12C12 12 12 12 12 11L12 9C12 8 12 8 11 8L9 8C8 8 8 8 8 9M15 9 15 11C15 12 15 12 16 12L18 12C19 12 19 12 19 11L19 9C19 8 19 8 18 8L16 8C15 8 15 8 15 9" />`,
      chartWheel: `<circle cx="10" cy="10" r="7" fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-dasharray="16" stroke-linecap="round"/><circle cx="10" cy="10" r="9" fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-dasharray="2" stroke-linecap="round" style="opacity:0.7"/><circle cx="10" cy="10" r="1" fill="${t.stroke}" />`,
      close: `<path fill="none" stroke-width="${t.strokeWidth}" fill="none" stroke="${t.stroke}" stroke-linecap="round" d="M4 4 16 16M4 16 16 4" />`,
      dashboard: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 5A1 1 0 009 5 1 1 0 001 5M5 1 5 5 9 5M1 15 6 15M1 18 8 18M13 9C13 10 13 10 14 10 15 10 15 10 15 9L15 6C15 5 15 5 14 5 13 5 13 5 13 6 13 6 13 8 13 9M17 9C17 10 17 10 18 10 19 10 19 10 19 9L19 4C19 3 19 3 18 3 17 3 17 3 17 4L17 9M9 12 12 18 14 15 17 16 19 13M1 12 4 12" />`,
      digit0: `<path style="opacity: 0.3" fill="${t.stroke}" stroke="none" stroke-width="none" d="M7 10 8 9 12 9 13 10 12 11 8 11 7 10"/><path fill="${t.stroke}" stroke="none" stroke-width="none" d="M8 1 7 2 8 3 12 3 13 2 12 1 8 1M7 18 8 17 12 17 13 18 12 19 8 19 7 18M6 3 7 4 7 8 6 9 5 8 5 4 6 3M6 11 7 12 7 16 6 17 5 16 5 12 6 11M14 3 13 4 13 8 14 9 15 8 15 4 14 3M14 11 15 12 15 16 14 17 13 16 13 12 14 11" />`,
      digit1: `<path style="opacity: 0.3" fill="${t.stroke}" stroke="none" stroke-width="none" d="M8 1 7 2 8 3 12 3 13 2 12 1 8 1M7 18 8 17 12 17 13 18 12 19 8 19 7 18M6 11 7 12 7 16 6 17 5 16 5 12 6 11M6 3 7 4 7 8 6 9 5 8 5 4 6 3M7 10 8 9 12 9 13 10 12 11 8 11 7 10"/><path fill="${t.stroke}" stroke="none" stroke-width="none" d="M14 3 13 4 13 8 14 9 15 8 15 4 14 3M14 11 15 12 15 16 14 17 13 16 13 12 14 11" />`,
      digit2: `<path style="opacity: 0.3" fill="${t.stroke}" stroke="none" stroke-width="none" d="M14 11 15 12 15 16 14 17 13 16 13 12 14 11M6 3 7 4 7 8 6 9 5 8 5 4 6 3"/><path fill="${t.stroke}" stroke="none" stroke-width="none" d="M8 1 7 2 8 3 12 3 13 2 12 1 8 1M14 3 13 4 13 8 14 9 15 8 15 4 14 3M7 18 8 17 12 17 13 18 12 19 8 19 7 18M6 11 7 12 7 16 6 17 5 16 5 12 6 11M7 10 8 9 12 9 13 10 12 11 8 11 7 10" />`,
      digit3: `<path style="opacity: 0.3" fill="${t.stroke}" stroke="none" stroke-width="none" d="M6 11 7 12 7 16 6 17 5 16 5 12 6 11M6 3 7 4 7 8 6 9 5 8 5 4 6 3"/><path fill="${t.stroke}" stroke="none" stroke-width="none" d="M8 1 7 2 8 3 12 3 13 2 12 1 8 1M14 3 13 4 13 8 14 9 15 8 15 4 14 3M14 11 15 12 15 16 14 17 13 16 13 12 14 11M7 18 8 17 12 17 13 18 12 19 8 19 7 18M7 10 8 9 12 9 13 10 12 11 8 11 7 10" />`,
      digit4: `<path style="opacity: 0.3" fill="${t.stroke}" stroke="none" stroke-width="none" d="M8 1 7 2 8 3 12 3 13 2 12 1 8 1M7 18 8 17 12 17 13 18 12 19 8 19 7 18M6 11 7 12 7 16 6 17 5 16 5 12 6 11"/><path fill="${t.stroke}" stroke="none" stroke-width="none" d="M14 3 13 4 13 8 14 9 15 8 15 4 14 3M14 11 15 12 15 16 14 17 13 16 13 12 14 11M6 3 7 4 7 8 6 9 5 8 5 4 6 3M7 10 8 9 12 9 13 10 12 11 8 11 7 10" />`,
      digit5: `<path style="opacity: 0.3" fill="${t.stroke}" stroke="none" stroke-width="none" d="M14 3 13 4 13 8 14 9 15 8 15 4 14 3M6 11 7 12 7 16 6 17 5 16 5 12 6 11"/><path fill="${t.stroke}" stroke="none" stroke-width="none" d="M8 1 7 2 8 3 12 3 13 2 12 1 8 1M14 11 15 12 15 16 14 17 13 16 13 12 14 11M7 18 8 17 12 17 13 18 12 19 8 19 7 18M6 3 7 4 7 8 6 9 5 8 5 4 6 3M7 10 8 9 12 9 13 10 12 11 8 11 7 10" />`,
      digit6: `<path style="opacity: 0.3" fill="${t.stroke}" stroke="none" stroke-width="none" d="M 14 3 L 13 4 L 13 8 L 14 9 L 15 8 L 15 4 L 14 3 "/><path fill="${t.stroke}" stroke="none" stroke-width="none" d="M8 1 7 2 8 3 12 3 13 2 12 1 8 1M14 11 15 12 15 16 14 17 13 16 13 12 14 11M7 18 8 17 12 17 13 18 12 19 8 19 7 18M6 11 7 12 7 16 6 17 5 16 5 12 6 11M6 3 7 4 7 8 6 9 5 8 5 4 6 3M7 10 8 9 12 9 13 10 12 11 8 11 7 10" />`,
      digit7: `<path style="opacity: 0.3" fill="${t.stroke}" stroke="none" stroke-width="none" d="M7 18 8 17 12 17 13 18 12 19 8 19 7 18M6 11 7 12 7 16 6 17 5 16 5 12 6 11M6 3 7 4 7 8 6 9 5 8 5 4 6 3M7 10 8 9 12 9 13 10 12 11 8 11 7 10"/><path fill="${t.stroke}" stroke="none" stroke-width="none" d="M8 1 7 2 8 3 12 3 13 2 12 1 8 1M14 3 13 4 13 8 14 9 15 8 15 4 14 3M14 11 15 12 15 16 14 17 13 16 13 12 14 11" />`,
      digit8: `<path fill="${t.stroke}" stroke="none" stroke-width="none" d="M8 1 7 2 8 3 12 3 13 2 12 1 8 1M7 10 8 9 12 9 13 10 12 11 8 11 7 10M7 18 8 17 12 17 13 18 12 19 8 19 7 18M6 3 7 4 7 8 6 9 5 8 5 4 6 3M6 11 7 12 7 16 6 17 5 16 5 12 6 11M14 3 13 4 13 8 14 9 15 8 15 4 14 3M14 11 15 12 15 16 14 17 13 16 13 12 14 11" />`,
      digit9: `<path style="opacity: 0.3" fill="${t.stroke}" stroke="none" stroke-width="none" d="M6 11 7 12 7 16 6 17 5 16 5 12 6 11"/><path fill="${t.stroke}" stroke="none" stroke-width="none" d="M8 1 7 2 8 3 12 3 13 2 12 1 8 1M14 3 13 4 13 8 14 9 15 8 15 4 14 3M14 11 15 12 15 16 14 17 13 16 13 12 14 11M7 18 8 17 12 17 13 18 12 19 8 19 7 18M6 3 7 4 7 8 6 9 5 8 5 4 6 3M7 10 8 9 12 9 13 10 12 11 8 11 7 10" />`,
      excel: `<path stroke-width="${t.strokeWidth}" fill="none" stroke="${t.stroke}" stroke-linejoin="round" d="M4 1C2 1 1 2 1 4L1 16C1 18 2 19 4 19L16 19C18 19 19 18 19 16L19 6C15 6 14 5 14 1ZM14 8C15 8 16 9 16 10L16 14C16 15 15 16 14 16L6 16C5 16 4 15 4 14L4 10C4 9 5 8 6 8Z"/><line stroke="${t.stroke}" stroke-width="${t.strokeWidth}" x1="9" x2="9" y1="8" y2="16" /><line stroke="${t.stroke}" stroke-width="${t.strokeWidth}" x1="4" x2="16" y1="12" y2="12" />`,
      image: `<path stroke-width="${t.strokeWidth}" fill="none" stroke="${t.stroke}" stroke-linecap="round" d="M4 1C2 1 1 2 1 4L1 16C1 18 2 19 4 19L16 19C18 19 19 18 19 16L19 6C15 6 14 5 14 1ZM1 16C3.3333 13.6667 3 10 8 12M7 14C8 13 9 5 19 11"/><circle r="1" cx="6" cy="5" stroke="none" fill="${t.stroke}"/>`,
      labelClose: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M2 8C1 9 1 11 2 12L5 16C6 17 6 17 7 17L17 17C19 17 19 15 19 15L19 5C19 5 19 3 17 3L12 3M7 10 15 10M7 13 16 13M9 6 4 1M4 6 9 1" />`,
      labelOpen: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M2 8C1 9 1 11 2 12L5 16C6 17 6 17 7 17L17 17C19 17 19 16 19 15L19 5C19 5 19 3 17 3L7 3C6 3 6 3 5 4L2 8M7 7 13 7M7 10 15 10M7 13 16 13" />`,
      menu: `<path stroke-width="${t.strokeWidth}" fill="none" stroke="${t.stroke}" stroke-linecap="round" d="M2 10 18 10M2 5 18 5M2 15 18 15" />`,
      moodFlat: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 10A1 1 0 0019 10 1 1 0 001 10M5 13C8 11 12 11 15 13M5 7A1 1 0 008 7 1 1 0 005 7M12 7A1 1 0 0015 7 1 1 0 0012 7" />`,
      moodHappy: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 10A1 1 0 0019 10 1 1 0 001 10M5 11C6 18 14 18 15 11L5 11M5 7A1 1 0 008 7 1 1 0 005 7M12 7A1 1 0 0015 7 1 1 0 0012 7" />`,
      moodNeutral: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 10A1 1 0 0019 10 1 1 0 001 10M5 12C9 12 11 12 15 12M5 7A1 1 0 008 7 1 1 0 005 7M12 7A1 1 0 0015 7 1 1 0 0012 7" />`,
      moodSad: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 10A1 1 0 0019 10 1 1 0 001 10M5 14C6 9 14 9 15 14L5 14M5 7A1 1 0 008 7 1 1 0 005 7M12 7A1 1 0 0015 7 1 1 0 0012 7" />`,
      pdf: `<path stroke-width="${t.strokeWidth}" fill="none" stroke="${t.stroke}" stroke-linecap="round" stroke-linejoin="round" d="M4 1C2 1 1 2 1 4L1 16C1 18 2 19 4 19L16 19C18 19 19 18 19 16L19 6C15 6 14 5 14 1ZM4 16 4 9 5 9Q7 9 7 11 7 13 5 13L4 13M9 16 9 9 9 9Q12 9 12 12L12 13Q12 16 9 16L9 16M14 16 14 9 16 9M14 12 16 12"/>`,
      csv: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 4 1 C 2 1 1 2 1 4 L 1 16 C 1 18 2 19 4 19 L 16 19 C 18 19 19 18 19 16 L 19 6 C 15 6 14 5 14 1 Z M 7 11 C 7 10 7 9 6 9 L 5 9 C 4 9 4 10 4 11 L 4 14 C 4 15 4 16 5 16 L 6 16 C 7 16 7 15 7 14 M 12 11 C 12 10 12 9 11 9 L 10 9 C 9 9 9 10 9 11 C 9 13 12 12 12 14 C 12 15 12 16 11 16 L 10 16 C 9 16 9 15 9 14 M 14 9 L 15 16 L 16 9" />`,
      screenshot: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 4 1 3C1 2 2 1 3 1L4 1M16 1 17 1C18 1 19 2 19 3L19 4M1 16 1 17C1 18 2 19 3 19L4 19M16 19 17 19C18 19 19 18 19 17L19 16M8 10A1 1 0 0012 10 1 1 0 008 10M5 13 5 8C5 7 5 7 6 7L14 7C15 7 15 7 15 8L15 13C15 14 15 14 14 14L6 14C5 14 5 14 5 13M7 6 13 6" />`,
      skeleton: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M3 14A1 1 0 003 18L7 18A1 1 0 007 14L3 14M3 8A1 1 0 003 12L7 12A1 1 0 007 8L3 8M3 2A1 1 0 003 6L4 6A1 1 0 004 2L3 2M12 10 12 16C12 17 13 18 14 18L17 18C18 18 19 17 19 16L19 10C19 9 18 8 17 8L14 8C13 8 12 9 12 10" stroke-dasharray="2" />`,
      smiley: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M1 10A1 1 0 0019 10 1 1 0 001 10M5 12C8 14 12 14 15 12M5 7A1 1 0 008 7 1 1 0 005 7M12 7A1 1 0 0015 7 1 1 0 0012 7" />`,
      sort: `<path stroke-width="${t.strokeWidth}" fill="none" stroke="${t.stroke}" stroke-linecap="round" d="M1 15 5 18 9 15M5 5 5 18M15 15 15 2M11 5 15 2 19 5" />`,
      sortReverse: `<path stroke-width="${t.strokeWidth}" fill="none" stroke="${t.stroke}" stroke-linecap="round" d="M 1 8 L 5 5 L 9 8 M 5 5 L 5 18 M 15 15 L 15 2 M 11 12 L 15 15 L 19 12" />`,
      spin: `<path stroke-width="${t.strokeWidth}" fill="none" stroke="${t.stroke}" stroke-linecap="round" d="M1 10A1 1 0 0019 10 1 1 0 004 10 1 1 0 0016 10 1 1 0 007 10 1 1 0 0013 10 1 1 0 0010 10M1 10Q1 5 5 2" />`,
      star: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 1.333 8.2262 L 7.3093 7.3308 L 9.9598 1.9001 L 12.6581 7.3072 L 18.6421 8.1497 L 14.3335 12.3869 L 15.3813 18.3383 L 10.0201 15.55 L 4.6837 18.3856 L 5.6789 12.4251 L 1.334 8.225" />`,
      starFill: `<path fill="${t.stroke}" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 1.333 8.2262 L 7.3093 7.3308 L 9.9598 1.9001 L 12.6581 7.3072 L 18.6421 8.1497 L 14.3335 12.3869 L 15.3813 18.3383 L 10.0201 15.55 L 4.6837 18.3856 L 5.6789 12.4251 L 1.334 8.225" />`,
      tableClose: `<path stroke-width="${t.strokeWidth}" stroke-linecap="round" fill="none" stroke="${t.stroke}" d="M4 1 4 1C2 1 1 2 1 4L1 16C1 18 2 19 4 19L7 19M4 1 16 1C18 1 19 2 19 4L19 14M18 19 14 16 10 19"/><line stroke-width="${t.strokeWidth}" stroke="${t.stroke}" x1="8" y1="1" x2="8" y2="19" stroke-linecap="round" /><line stroke-width="${t.strokeWidth}" stroke="${t.stroke}" x1="1" y1="8" x2="19" y2="8" />`,
      tableOpen: `<path stroke-width="${t.strokeWidth}" fill="none" stroke-linecap="round" stroke="${t.stroke}" d="M4 1 4 1C2 1 1 2 1 4L1 16C1 18 2 19 4 19L7 19M4 1 16 1C18 1 19 2 19 4L19 14M18 16 14 19 10 16"/><line stroke-width="${t.strokeWidth}" stroke="${t.stroke}" x1="8" y1="1" x2="8" y2="19" stroke-linecap="round" /><line stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke="${t.stroke}" x1="1" y1="8" x2="19" y2="8" />`,
      chartCluster: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" d="M7 10A1 1 0 0013 10 1 1 0 007 10M10 7 10 4A1 1 0 0010 1 1 1 0 0010 4M7 10 4 10A1 1 0 001 10 1 1 0 004 10M10 13 10 16A1 1 0 0010 19 1 1 0 0010 16M13 10 16 10A1 1 0 0019 10 1 1 0 0016 10" />`,
      arrowRight: `<path fill="${t.stroke}" stroke="none" stroke-width="none" d="M18 10 3 1C6 7 6 13 3 19L18 10" stroke-linejoin="round" />`,
      arrowTop: `<path fill="${t.stroke}" stroke="none" stroke-width="none" d="M10 2 1 17C7 14 13 14 19 17L10 2" stroke-linejoin="round" />`,
      arrowLeft: `<path fill="${t.stroke}" stroke="none" stroke-width="none" d="M2 10 17 1C14 7 14 13 17 19L2 10" stroke-linejoin="round" />`,
      arrowBottom: `<path fill="${t.stroke}" stroke="none" stroke-width="none" d="M10 18 1 3C7 6 13 6 19 3L10 18" stroke-linejoin="round" />`,
      fullscreen: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M1 6 1 4C1 2 2 1 4 1L6 1M14 1 16 1C18 1 19 2 19 4L19 6M19 14 19 16C19 18 18 19 16 19L14 19M6 19 4 19C2 19 1 18 1 16L1 14M9 9 5 5M11 9 15 5M11 11 15 15M9 11 5 15M5 12 5 15 8 15M12 15 15 15 15 12M15 8 15 5 12 5M8 5 5 5 5 8" />`,
      exitFullscreen: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M1 6 1 4C1 2 2 1 4 1L6 1M14 1 16 1C18 1 19 2 19 4L19 6M19 14 19 16C19 18 18 19 16 19L14 19M6 19 4 19C2 19 1 18 1 16L1 14M8 8 4 4M12 8 16 4M12 12 16 16M8 12 4 16M5 12 8 12 8 15M12 15 12 12 15 12M15 8 12 8 12 5M8 5 8 8 5 8" />`,
      moodEmbarrassed: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 1 10 A 1 1 0 0 0 19 10 A 1 1 0 0 0 1 10 M 5 13 C 8 11 11 16 15 13 M 5 7 A 1 1 0 0 0 8 7 A 1 1 0 0 0 5 7 M 12 7 A 1 1 0 0 0 15 7 A 1 1 0 0 0 12 7" />`,
      moodSurprised: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 1 10 A 1 1 0 0 0 19 10 A 1 1 0 0 0 1 10 M 5 7 A 1 1 0 0 0 8 7 A 1 1 0 0 0 5 7 M 12 7 A 1 1 0 0 0 15 7 A 1 1 0 0 0 12 7 M 10 12 A 1 1 0 0 0 10 15 A 1 1 0 0 0 10 12" />`,
      moodWink: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 1 10 A 1 1 0 0 0 19 10 A 1 1 0 0 0 1 10 M 5 11 C 7 15 11 15 15 13 M 12 7 A 1 1 0 0 0 15 7 A 1 1 0 0 0 12 7 M 5 7 L 8 7" />`,
      moodLaughing: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 1 10 A 1 1 0 0 0 19 10 A 1 1 0 0 0 1 10 M 5 10 C 5 17 15 17 15 11 L 5 10 M 12 7 A 1 1 0 0 0 12 7 C 13 6 14 7 15 7 M 5 6 C 6 6 7 5 8 7" />`,
      circleCancel: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 1 10 A 1 1 0 0 0 19 10 A 1 1 0 0 0 1 10 M 6 6 L 14 14 M 14 6 L 6 14" />`,
      circleCheck: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 1 10 A 1 1 0 0 0 19 10 A 1 1 0 0 0 1 10 M 5 10 L 9 14 M 15 7 L 9 14" />`,
      circleExclamation: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 1 10 A 1 1 0 0 0 19 10 A 1 1 0 0 0 1 10 M 10 5 L 10 10 M 10 13 A 1 1 0 0 0 10 15 A 1 1 0 0 0 10 13" />`,
      circleQuestion: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 1 10 A 1 1 0 0 0 19 10 A 1 1 0 0 0 1 10 M 10 5 C 14 5 14 10 10 10 M 10 13 A 1 1 0 0 0 10 15 A 1 1 0 0 0 10 13 M 7 7 C 7 6 8 5 10 5" />`,
      refresh: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 2 10 A 1 1 0 0 0 17 10 C 17 5 12 2 7 4 L 10 1 M 7 4 L 10 7" />`,
      chartSparkbar: `<path fill="none"  stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 2 5 L 18 5 M 2 10 L 18 10 M 2 15 L 18 15" style="opacity:0.3" /><path fill="none"  stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 2 5 L 15 5 M 2 10 L 11 10 M 2 15 L 7 15" />`,
      chartSparkline: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 1 10 C 1 8 2 8 2 8 C 4 8 4 12 6 13 C 8 12 6 7 8 6 C 10 6 10 11 11 11 C 13 12 12 6 14 4" />`,
      legend: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 3 2 L 5 2 C 5 2 6 2 6 3 L 6 5 C 6 6 5 6 5 6 L 3 6 C 3 6 2 6 2 5 L 2 3 C 2 2 3 2 3 2 M 8 4 C 8 3 9 3 9 3 L 17 3 C 17 3 18 3 18 4 C 18 5 17 5 17 5 L 9 5 C 9 5 8 5 8 4 M 3 8 L 5 8 C 5 8 6 8 6 9 L 6 11 C 6 12 5 12 5 12 L 3 12 C 3 12 2 12 2 11 L 2 9 C 2 8 3 8 3 8 M 8 10 C 8 9 9 9 9 9 L 17 9 C 17 9 18 9 18 10 C 18 11 17 11 17 11 L 9 11 C 9 11 8 11 8 10 M 3 14 L 5 14 C 5 14 6 14 6 15 L 6 17 C 6 18 5 18 5 18 L 3 18 C 3 18 2 18 2 17 L 2 15 C 2 14 3 14 3 14 M 8 16 C 8 15 9 15 9 15 L 17 15 C 17 15 18 15 18 16 C 18 17 17 17 17 17 L 9 17 C 9 17 8 17 8 16" />`,
      chartGalaxy: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 7 11 A 1 1 0 0 0 11 11 M 14 11 A 1 1 0 0 0 7 11 M 3 11 A 1 1 0 0 0 14 11 M 18 11 A 1 1 0 0 0 3 11 M 16.4 16 C 17 15 18 13 18 11" />`,
      zoomPlus: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 9 1 A 1 1 0 0 0 9 17 A 1 1 0 0 0 9 1 M 14.65 14.65 L 18 18 M 9 5 L 9 13 M 5 9 L 13 9"/>`,
      zoomMinus: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 9 1 A 1 1 0 0 0 9 17 A 1 1 0 0 0 9 1 M 14.65 14.65 L 18 18 M 5 9 L 13 9"/>`,
      chartTreemap: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 1 1 L 19 1 L 19 19 L 1 19 Z M 10 1 L 10 19 M 1 13 L 10 13 M 10 10 L 19 10 M 15 10 L 15 19" />`,
      kpi: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 2 5 L 2 15 M 6 5 L 2 10 L 6 15 M 8 15 L 8 5 L 10 5 M 10 10 A 1 1 0 0 0 10 5 M 10 10 L 8 10 M 18 5 L 14 5 M 14 15 L 18 15 M 16 5 L 16 15 M 1 3 L 1 2 C 1 1 2 1 2 1 L 18 1 C 18 1 19 1 19 2 L 19 3 M 1 17 L 1 18 C 1 19 2 19 2 19 L 18 19 C 19 19 19 18 19 18 L 19 17"/>`,
      kpiBox: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 1 3 C 1 2 2 1 3 1 L 17 1 C 18 1 19 2 19 3 L 19 17 C 19 18 18 19 17 19 L 3 19 C 2 19 1 18 1 17 L 1 3 M 4 13 L 9 13 M 16 13 L 11 13 M 4 16 L 16 16 M 4 4 L 4 10 M 7 4 L 4 7 L 7 10 M 9 10 L 9 4 L 11 4 M 11 7 A 1 1 0 0 0 11 4 M 11 7 L 9 7 M 16 10 L 14 10 M 14 4 L 16 4 M 15 4 L 15 10"/>`,
      tooltip: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 8 15 L 10 19 L 12 15 L 18 15 C 18 15 19 15 19 14 L 19 2 C 19 1 18 1 18 1 L 2 1 C 2 1 1 1 1 2 L 1 14 C 1 15 2 15 2 15 L 8 15 M 4 6 L 11 6 M 4 10 L 7 10 M 9 10 L 16 10"/>`,
      tooltipDisabled: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 8 15 L 10 19 L 12 15 L 18 15 C 18 15 19 15 19 14 L 19 2 C 19 1 18 1 18 1 L 2 1 C 2 1 1 1 1 2 L 1 14 C 1 15 2 15 2 15 L 8 15 M 7 5 L 13 11 M 7 11 L 13 5"/>`,
      vueDataUi: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 1 2 L 10.5 18 L 14.5 9 L 16 12 L 19 12 L 14.5 2 L 10.5 12 L 4.5 2 Z"/>`,
      ratio: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 2 10 L 18 10 M 8 1 L 12 7 M 12 1 L 8 7 M 8 13 L 10 16 M 12 13 L 8 19"/>`,
      func: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" d="M 17 7 L 13 13 M 13 7 L 17 13 M 12 5 C 12 5 11 5 11 6 L 11 14 C 11 15 12 15 12 15 M 18 5 C 19 5 19 6 19 6 L 19 14 C 19 15 18 15 18 15 M 1 19 C 2 19 3 19 4 17 L 6 3 C 6 2 7 1 8 1 L 10 1 M 5 10 L 7 10" />`,
      settings: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 8 7 A 1 1 0 0 0 8 17 A 1 1 0 0 0 8 7 M 8 6 L 8 7 M 2 12 L 3 12 M 13 12 L 14 12 M 8 17 L 8 18 M 3.6 7.6 L 4.4 8.4 M 3.6 16.4 L 4.4 15.5 M 12.4 7.6 L 11.5 8.4 M 11.6 15.5 L 12.4 16.4 M 8 11 A 1 1 0 0 0 8 13 A 1 1 0 0 0 8 11 M 16 2 A 1 1 0 0 0 16 6 A 1 1 0 0 0 16 2 M 13 4 L 14 4 M 16 6 L 16 7 M 18 4 L 19 4 M 16 1 L 16 2"/>`,
      trendUp: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" fill="none" d="M 6 3 L 6 7 M 4 5 L 8 5 M 11 7 L 16 3 M 12 2 A 1 1 0 0 0 12 4 A 1 1 0 0 0 12 2 M 15 6 A 1 1 0 0 0 15 8 A 1 1 0 0 0 15 6 M 10 18 L 10 10 M 7 13 L 10 10 L 13 13" />`,
      trendDown: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" fill="none" d="M 4 5 M 4 5 L 8 5 M 11 7 L 16 3 M 12 2 A 1 1 0 0 0 12 4 A 1 1 0 0 0 12 2 M 15 6 A 1 1 0 0 0 15 8 A 1 1 0 0 0 15 6 M 10 18 L 10 10 M 7 15 L 10 18 L 13 15" />`,
      clipBoard: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 6 2 C 6 1 7 1 7 1 L 13 1 C 14 1 14 2 14 2 C 14 2 14 3 13 3 L 7 3 C 7 3 6 3 6 2 M 6 2 L 3 2 C 2 2 1 3 1 4 L 1 17 C 1 18 2 19 3 19 L 17 19 C 18 19 19 18 19 17 L 19 4 C 19 3 18 2 17 2 L 14 2 M 5 7 L 9 7 M 5 11 L 9 11 M 11 11 L 15 11 M 5 15 L 15 15 M 11 7 L 15 7"/>`,
      clipboardLine: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" stroke-linecap="round" stroke-linejoin="round" d="M 6 2 C 6 1 7 1 7 1 L 13 1 C 14 1 14 2 14 2 C 14 2 14 3 13 3 L 7 3 C 7 3 6 3 6 2 M 6 2 L 3 2 C 2 2 1 3 1 4 L 1 17 C 1 18 2 19 3 19 L 17 19 C 18 19 19 18 19 17 L 19 4 C 19 3 18 2 17 2 L 14 2 M 5 15 L 8 10 L 12 12 L 15 6"/>`,
      clipboardDonut: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" stroke-linecap="round" stroke-linejoin="round" d="M 6 2 C 6 1 7 1 7 1 L 13 1 C 14 1 14 2 14 2 C 14 2 14 3 13 3 L 7 3 C 7 3 6 3 6 2 M 6 2 L 3 2 C 2 2 1 3 1 4 L 1 17 C 1 18 2 19 3 19 L 17 19 C 18 19 19 18 19 17 L 19 4 C 19 3 18 2 17 2 L 14 2 M 10 5 A 1 1 0 0 0 10 16 A 1 1 0 0 0 10 5 M 10 8 A 1 1 0 0 0 10 13 A 1 1 0 0 0 10 8 M 10 5 L 10 8 M 5.1 13 L 7.7 11.6"/>`,
      clipboardBar: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" stroke-linecap="round" stroke-linejoin="round" d="M 6 2 C 6 1 7 1 7 1 L 13 1 C 14 1 14 2 14 2 C 14 2 14 3 13 3 L 7 3 C 7 3 6 3 6 2 M 6 2 L 3 2 C 2 2 1 3 1 4 L 1 17 C 1 18 2 19 3 19 L 17 19 C 18 19 19 18 19 17 L 19 4 C 19 3 18 2 17 2 L 14 2 M 5 15 L 5 11 L 10 11 L 10 15 L 5 15 M 10 11 L 10 7 L 15 7 L 15 15 L 10 15"/>`,
      clipboardVariable: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" stroke-linecap="round" stroke-linejoin="round" d="M 6 2 C 6 1 7 1 7 1 L 13 1 C 14 1 14 2 14 2 C 14 2 14 3 13 3 L 7 3 C 7 3 6 3 6 2 M 6 2 L 3 2 C 2 2 1 3 1 4 L 1 17 C 1 18 2 19 3 19 L 17 19 C 18 19 19 18 19 17 L 19 4 C 19 3 18 2 17 2 L 14 2 M 5 8 L 9 13 M 9 8 L 5 13 M 11 8 L 13.1 10.3 M 15 8 L 11 13"/>`,
      triangle: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" stroke-linecap="round" stroke-linejoin="round" d="M 10 3 L 1 17 L 19 17 L 10 3"/>`,
      triangleFill: `<path stroke="${t.stroke}" fill="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 10 3 L 1 17 L 19 17 L 10 3"/>`,
      square: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" stroke-linecap="round" stroke-linejoin="round" d="M 2 2 L 2 18 L 18 18 L 18 2 L 2 2"/>`,
      squareFill: `<path fill="${t.stroke}" stroke="${t.stroke}" stroke-width="${t.strokeWidth}"stroke-linecap="round" stroke-linejoin="round" d="M 2 2 L 2 18 L 18 18 L 18 2 L 2 2"/>`,
      diamond: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" stroke-linecap="round" stroke-linejoin="round" d="M 10 1 L 1 10 L 10 19 L 19 10 L 10 1"/>`,
      diamondFill: `<path fill="${t.stroke}"  stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 10 1 L 1 10 L 10 19 L 19 10 L 10 1"/>`,
      pentagon: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" stroke-linecap="round" stroke-linejoin="round" d="M 10 1 L 1 9 L 5 19 L 16 19 L 19 9 Z"/>`,
      pentagonFill: `<path fill="${t.stroke}" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 10 1 L 1 9 L 5 19 L 16 19 L 19 9 Z"/>`,
      hexagon: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" stroke-linecap="round" stroke-linejoin="round" d="M 10 1 L 2 6 L 2 14 L 10 19 L 18 14 L 18 6 Z"/>`,
      hexagonFill: `<path fill="${t.stroke}"  stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 10 1 L 2 6 L 2 14 L 10 19 L 18 14 L 18 6 Z"/>`,
      circle: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" stroke-linecap="round" stroke-linejoin="round" d="M 10 1 A 1 1 0 0 0 10 19 A 1 1 0 0 0 10 1"/>`,
      circleFill: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="${t.stroke}" stroke-linecap="round" stroke-linejoin="round" d="M 10 1 A 1 1 0 0 0 10 19 A 1 1 0 0 0 10 1"/>`,
      numbers: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth / 2}" fill="none" stroke-linecap="round" stroke-linejoin="round" d="M 2 3 L 4 1 L 4 6 M 8 3 C 8 2 9 1 10 1 C 11 1 12 2 12 3 C 12 5 8 3 8 6 L 12 6 M 15 1 L 18 1 L 16 3 C 17 3 18 3 18 4 C 18 6 16 6 15 6 M 4 13 L 4 8 L 2 11 L 6 11 M 12 8 L 8 8 C 8 11 12 9 12 11 C 12 12 11 13 10 13 C 9 13 8 12 8 11 M 18 11 A 1 1 0 0 0 15 12 A 1 1 0 0 0 18 11 M 15 11 C 15 8 17 8 18 8 M 2 15 L 6 15 C 5 18 2 17 2 20 M 8 16 C 8 15 9 15 9 15 L 11 15 C 12 15 12 16 12 16 C 12 16 12 17 11 17 L 9 17 C 9 17 8 17 8 16 M 9 17 C 9 17 8 17 8 18 L 8 19 C 8 19 8 19 8 19 C 8 20 9 20 9 20 L 11 20 C 12 20 12 19 12 19 L 12 18 C 12 18 12 17 11 17 M 18 17 A 1 1 0 0 0 15 16 A 1 1 0 0 0 18 17 M 18 17 C 18 20 16 20 15 20"/>`,
      sigma: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" d="M 16 5 L 18 2 L 2 2 L 9 10 L 2 18 L 18 18 L 16 15" stroke-linecap="round" stroke-linejoin="round"/>`,
      mu: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" d="M 15 2 C 15 12 13 12 10 12 C 5 12 5 12 5 2 M 5 2 L 5 18 M 13.5 10.8 C 14 12 15 12 15 12" stroke-linecap="round" stroke-linejoin="round"/>`,
      lambda: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" d="M 2 5 C 2 2 4 2 4 2 C 10 2 10 18 18 18 M 10 10 L 2 18" stroke-linecap="round" stroke-linejoin="round"/>`,
      people: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth / 2}" fill="none" d="M 5 1 A 1 1 0 0 0 5 9 A 1 1 0 0 0 5 1 M 15 1 A 1 1 0 0 0 15 9 A 1 1 0 0 0 15 1 M 5 11 A 1 1 0 0 0 5 19 A 1 1 0 0 0 5 11 M 15 11 A 1 1 0 0 0 15 19 A 1 1 0 0 0 15 11 M 3 4 L 3 4 M 7 4 L 7 4 M 3 6 C 4 7 6 7 7 6 M 13 4 L 13 4 M 17 4 L 17 4 M 13 6 C 14 7 16 7 17 6 M 3 14 L 3 14 M 7 14 L 7 14 M 3 16 C 4 17 6 17 7 16 M 13 14 L 13 14 M 17 14 L 17 14 M 13 16 C 14 17 16 17 17 16" stroke-linecap="round" stroke-linejoin="round"/>`,
      copy: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" d="M 18 16 C 18 17 17 18 16 18 L 8 18 C 7 18 6 17 6 16 L 6 8 C 6 7 7 6 8 6 L 16 6 C 17 6 18 7 18 8 L 18 16 M 6 14 L 4 14 C 3 14 2 13 2 12 L 2 4 C 2 3 3 2 4 2 L 12 2 C 13 2 14 3 14 4 L 14 6" stroke-linecap="round" stroke-linejoin="round"/>`,
      accordion: `<path fill="none" stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" d="M 2 2 L 18 2 L 16 4 L 18 6 L 16 8 L 18 10 L 16 12 L 18 14 L 16 16 L 18 18 L 2 18 L 4 16 L 2 14 L 4 12 L 2 10 L 4 8 L 2 6 L 4 4 L 2 2"/><path stroke="none" fill="${t.stroke}" style="opacity:0.3" stroke-linecap="round" stroke-linejoin="round" d="M 2 2 L 18 2 L 16 4 L 4 4 Z" /><path stroke="none" fill="${t.stroke}" style="opacity:0.3" stroke-linecap="round" stroke-linejoin="round" d="M 2 6 L 18 6 L 16 8 L 4 8 Z" /><path stroke="none" fill="${t.stroke}" style="opacity:0.3" stroke-linecap="round" stroke-linejoin="round" d="M 2 10 L 18 10 L 16 12 L 4 12 Z" /><path stroke="none" fill="${t.stroke}" style="opacity:0.3" stroke-linecap="round" stroke-linejoin="round" d="M 2 14 L 18 14 L 16 16 L 4 16 Z" />`,
      cursor: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" stroke-linecap="round" stroke-linejoin="round" d="M 6 10 A 1 1 0 0 0 14 10 A 1 1 0 0 0 6 10 M 1 10 L 6 10 M 14 10 L 19 10 M 10 1 L 10 6 M 10 14 L 10 19 M 10 8 L 10 12 M 8 10 L 12 10" />`,
      trend: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" stroke-linecap="round" stroke-kinejoin="round" d="M 1 6 L 4 4 L 7 6 M 4 4 L 4 13 M 7 16 C 7 16 7 18 9 18 C 12 18 10 9 12 9 C 14 9 14 13 15 13 C 18 14 17.6667 5.6667 19 2"/>`,
      chartStripPlot: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" fill="none" d="M 4 16 A 1 1 0 0 0 4 18 A 1 1 0 0 0 4 16 M 4 13 A 1 1 0 0 0 4 15 A 1 1 0 0 0 4 13 M 4 9 A 1 1 0 0 0 4 11 A 1 1 0 0 0 4 9 M 8 11 A 1 1 0 0 0 8 13 A 1 1 0 0 0 8 11 M 8 8 A 1 1 0 0 0 8 10 A 1 1 0 0 0 8 8 M 4 2 A 1 1 0 0 0 4 4 A 1 1 0 0 0 4 2 M 12 15 A 1 1 0 0 0 12 17 A 1 1 0 0 0 12 15 M 12 10 A 1 1 0 0 0 12 12 A 1 1 0 0 0 12 10 M 12 7 A 1 1 0 0 0 12 9 A 1 1 0 0 0 12 7 M 8 5 A 1 1 0 0 0 8 7 A 1 1 0 0 0 8 5 M 16 12 A 1 1 0 0 0 16 14 A 1 1 0 0 0 16 12 M 16 10 A 1 1 0 0 0 16 12 A 1 1 0 0 0 16 10 M 16 16 A 1 1 0 0 0 16 18 A 1 1 0 0 0 16 16" />`,
      chartDumbbell: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" d="M 3 2 A 1 1 0 0 0 3 4 A 1 1 0 0 0 3 2 M 10 2 A 1 1 0 0 0 10 4 A 1 1 0 0 0 10 2 M 4 3 L 9 3 M 5 9 A 1 1 0 0 0 5 11 A 1 1 0 0 0 5 9 M 17 9 A 1 1 0 0 0 17 11 A 1 1 0 0 0 17 9 M 6 10 L 16 10 M 8 16 A 1 1 0 0 0 8 18 A 1 1 0 0 0 8 16 M 15 16 A 1 1 0 0 0 15 18 A 1 1 0 0 0 15 16 M 9 17 L 14 17" />`,
      copyLeft: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" d="M 10 2 A 1 1 0 0 0 10 18 A 1 1 0 0 0 10 2 M 10 14 A 1 1 0 0 0 10 6 C 10 6 8 6 7 8 M 10 14 C 10 14 8 14 7 12" stroke-linecap="round" stroke-linejoin="round" fill="none"/>`,
      chartWordCloud: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" fill="none" d="M 7 13 L 10 5 L 13 13 M 8 10 L 12 10 M 2 2 L 5 18 L 10 14 L 15 18 L 18 2"/>`,
      stack: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" fill="none" d="M 10 3 L 2 6 L 10 9 L 18 6 L 10 3 M 7 8 L 2 10 L 10 13 L 18 10 L 13 8 M 7 12 L 2 14 L 10 17 L 18 14 L 13 12"/>`,
      unstack: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" fill="none" d="M 10 3 L 2 6 L 10 9 L 18 6 L 10 3 M 7 8 L 2 10 L 10 13 L 18 10 L 13 8 M 7 12 L 2 14 L 10 17 L 18 14 L 13 12 M 2 2 L 18 18 M 18 2 L 2 18"/>`,
      window: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" fill="none" d="M 2 4 L 2 16 C 2 17 3 18 4 18 L 16 18 C 17 18 18 17 18 16 L 18 4 C 18 3 17 2 16 2 L 4 2 C 3 2 2 3 2 4 M 4 5 L 4 8 C 4 9 5 9 5 9 L 8 9 C 9 9 9 8 9 8 L 9 5 C 9 4 8 4 8 4 L 5 4 C 4 4 4 5 4 5 M 16 5 L 16 8 C 16 9 15 9 15 9 L 12 9 C 12 9 11 9 11 8 L 11 5 C 11 4 12 4 12 4 L 15 4 C 15 4 16 4 16 5 M 5 11 C 5 11 4 11 4 12 L 4 15 C 4 16 5 16 5 16 L 8 16 C 8 16 9 16 9 15 L 9 12 C 9 11 8 11 8 11 L 5 11 M 12 11 C 11 11 11 12 11 12 L 11 15 C 11 15 11 16 12 16 L 15 16 C 15 16 16 16 16 15 L 16 12 C 16 11 15 11 15 11 L 12 11 M 6 6" />`,
      chartFlow: `<path stroke="transparent" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" fill="${t.stroke}" d="M 2 2 L 4 2 L 4 9 L 2 9 L 2 2 M 9 2 L 11 2 L 11 6 L 9 6 L 9 2 M 16 2 L 18 2 L 18 4 L 16 4 L 16 2 M 2 11 L 4 11 L 4 18 L 2 18 L 2 11 M 9 8 L 11 8 L 11 11 L 9 11 L 9 8 M 9 14 L 11 14 L 11 16 L 9 16 L 9 14 M 16 6 L 18 6 L 18 8 L 16 8 L 16 6 M 16 10 L 18 10 L 18 12 L 16 12 L 16 10 M 16 14 L 18 14 L 18 16 L 16 16 L 16 14 M 4 2 L 9 2 L 9 6 L 4 6 L 4 6 L 4 2 M 4 6 L 9 8 L 9 11 L 4 9 L 4 6 M 11 2 L 16 2 L 16 4 L 11 4 L 11 2 M 11 4 L 16 6 L 16 8 L 11 6 L 11 4 M 4 11 L 9 14 L 9 16 L 4 13 L 4 11 M 11 8 L 16 10 L 16 12 L 11 10 L 11 8 M 11 14 L 16 14 L 16 16 L 11 16 L 11 14"/>`,
      chartParallelCoordinatePlot: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" fill="none" d="M 2 2 L 2 18 M 10 2 L 10 18 M 18 2 L 18 18 M 2 4 L 10 3 L 18 3 M 2 10 L 10 6 L 18 8 M 2 16 L 10 16 L 18 12"/>`,
      pause: `<path fill="${t.stroke}" stroke="none" strole-linecap="round" stroke-linejoin="round" d="M 3 4 L 3 16 C 3 17 4 18 5 18 L 6 18 C 7 18 8 17 8 16 L 8 4 C 8 3 7 2 6 2 L 5 2 C 4 2 3 3 3 4 M 12 4 L 12 16 C 12 17 13 18 14 18 L 15 18 C 16 18 17 17 17 16 L 17 4 C 17 3 16 2 15 2 L 14 2 C 13 2 12 3 12 4"/>`,
      play: `<path fill="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" fill="none" d="M 3 4 L 3 16 C 3 17 4 18 5 18 L 6 18 C 7 18 18 13 18 11 L 18 10 C 18 8 7 2 6 2 L 5 2 C 4 2 3 3 3 4"/>`,
      stop: `<path fill="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" fill="none" d="M 10 8 L 4 2 L 3 2 L 2 3 L 2 4 L 8 10 L 2 16 L 2 17 L 3 18 L 4 18 L 10 12 L 16 18 L 17 18 L 18 17 L 18 16 L 12 10 L 18 4 L 18 3 L 17 2 L 16 2 L 10 8"/>`,
      restart: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" fill="none" d="M 3 10 A 1 1 0 0 0 17 10 C 17 6 14 3 10 3 L 10 2 L 7 4 M 5 10 A 1 1 0 0 0 15 10 C 15 7 13 5 10 5 L 10 6 L 7 4 M 3 10 L 5 10"/>`,
      lap: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" fill="none" d="M 3 10 A 1 1 0 0 0 17 10 A 1 1 0 0 0 3 10 M 8 2 L 12 2 M 5 3 L 6 4 M 15 3 L 14 4 M 10 7 L 10 10 L 13 13"/>`,
      carouselTable: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" fill="none" d="M 16 2 L 16 18 M 14 4 L 16 2 L 18 4 M 14 16 L 16 18 L 18 16 M 3 2 L 11 2 C 12 2 12 3 12 3 L 12 17 C 12 18 11 18 11 18 L 3 18 C 2 18 2 17 2 17 L 2 3 C 2 3 2 2 3 2 M 2 6 L 12 6 M 2 9 L 12 9 M 2 12 L 12 12 M 2 15 L 12 15 M 7 2 L 7 18 M 4 4 L 5 4 M 9 4 L 10 4"/>`,
      battery: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" fill="none" d="M 2 6 L 2 14 C 2 16 3 16 4 16 L 15 16 C 16 16 17 16 17 14 L 17 13 C 17 13 18 13 18 12 L 18 8 C 18 7 17 7 17 7 L 17 6 C 17 4 16 4 15 4 L 4 4 C 3 4 2 4 2 6"/><path fill="${t.stroke}" style="opacity:0.6" stroke="none" d="M 4 7 L 4 13 C 4 14 5 14 5 14 L 11 14 L 11 6 L 5 6 C 5 6 4 6 4 7"/>`,
      chartStackbar: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth}" stroke-linecap="round" stroke-linejoin="round" fill="none" d="M 8 18 L 12 18 L 12 8 C 12 7 11 7 11 7 L 9 7 C 9 7 8 7 8 8 L 8 18 M 2 18 L 6 18 L 6 12 C 6 11 5 11 5 11 L 3 11 C 3 11 2 11 2 12 L 2 18 M 14 18 L 18 18 L 18 3 C 18 2 17 2 17 2 L 15 2 C 15 2 14 2 14 3 L 14 18 M 2 14 L 6 14 M 8 11 L 12 11 M 14 7 L 18 7 M 14 12"/><path stroke="none" style="opacity:0.3" fill="${t.stroke}" d="M 2 14 L 6 14 L 6 18 L 2 18 L 2 14" /><path stroke="none" style="opacity:0.3" fill="${t.stroke}" d="M 8 11 L 12 11 L 12 18 L 8 18 L 8 11" /><path stroke="none" style="opacity:0.3" fill="${t.stroke}" d="M 14 7 L 18 7 L 18 18 L 14 18 L 14 7" />`,
      starFace: `<path stroke="${t.stroke}" stroke-width="${t.strokeWidth} stroke-linecap="round" stroke-linejoin="round" fill="none" d="M 1.333 8.2262 L 7.3093 7.3308 L 9.9598 1.9001 L 12.6581 7.3072 L 18.6421 8.1497 L 14.3335 12.3869 L 15.3813 18.3383 L 10.0201 15.55 L 4.6837 18.3856 L 5.6789 12.4251Z M 6.989 9.999 C 7.62 8.9 8.638 9.246 8.964 10.019 M 10.999 10.019 C 11.671 8.941 12.607 9.287 13.015 10.04 M 7.499 12.022 C 8.732 14.95 12.101 13.871 12.497 11.999" />`,
      chartBullet: `<path stroke="none" fill="${t.stroke}" d="M 2 8 L 2 12 L 10 12 L 10 8 L 2 8" style="opacity: 0.6"/><path stroke="none" fill="${t.stroke}" d="M 10 8 L 10 12 L 15 12 L 15 8 L 10 8" style="opacity: 0.4"/><path stroke="none" fill="${t.stroke}" d="M 15 8 L 15 12 L 18 12 L 18 8 L 15 8" style="opacity: 0.2"/><path stroke="none" fill="${t.stroke}" d="M 2 9 L 13 9 L 13 11 L 2 11 L 2 9" style="opacity: 1"/>`
    }));
    return (a, C) => (openBlock(), createElementBlock("svg", {
      xmlns: unref(Qt),
      class: normalizeClass({ "spin ": o.isSpin }),
      viewBox: r.value,
      height: o.size,
      width: o.size,
      innerHTML: s2.value[o.name],
      style: { background: "transparent" }
    }, null, 10, M));
  }
};
var u = s(h, [["__scopeId", "data-v-1f9bf835"]]);

export {
  u
};
//# sourceMappingURL=chunk-57NPTS3S.js.map
